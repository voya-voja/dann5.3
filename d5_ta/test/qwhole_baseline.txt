
 --- Initializations ----
Qwhole default constructor: \0q:0\, creates an object with empty id, i.e. '', 0 qbits, and value 0.
Qwhole with an id only: id\0q:0\ has 0 qbits and value 0, too.
Qwhole 'size3' is unknown and has 3 Qbits:
 toString() => size3\3q:U\
 toString(false, 0) => size3\3q:U\
 toString(true) => size3\3q:size32\S\;size31\S\;size30\S\;\
 toString(true, 0) => size30\S\
For 'octal10' set to value 010:
 toString() => octal10\4q:8\
 toString(true) => octal10\4q:octal103\1\;octal102\0\;octal101\0\;octal100\0\;\
 toString(true, 3) => octal103\1\
For 'dec5' set to value 5:
 toString() => dec5\3q:5\
 toString(true) => dec5\3q:dec52\1\;dec51\0\;dec50\1\;\
 toString(true, 1) => dec51\0\
For 'bin6' set to value 0b110:
 toString() => bin6\3q:6\
 toString(true) => bin6\3q:bin62\1\;bin61\1\;bin60\0\;\
 toString(true, 2) => bin62\1\
For 'hexA' set to value 0xA:
 toString() => hexA\4q:10\
 toString(true) => hexA\4q:hexA3\1\;hexA2\0\;hexA1\1\;hexA0\0\;\
 toString(true, 3) => hexA3\1\
Qbits of 'bin6' have been used to construct 'bin6qBits\3q:6\
A copy of 'hexA' has id 'hexA' and value 0000000000000000000000000000000000000000000000000000000000001010

 --- Bitwise Expressions ----
Expression '~x', INVERT (not) x is: (~x\3q:U\ ~ x\3q:U\)
 Dann5 virtual code: ~x0\S\ ~ x0\S\; ~x1\S\ ~ x1\S\; ~x2\S\ ~ x2\S\; 
 It's Qubo is '(x0, x0): -1; (x0, ~x0): 2; (x1, x1): -1; (x1, ~x1): 2; (x2, x2): -1; (x2, ~x2): 2; (~x0, ~x0): -1; (~x1, ~x1): -1; (~x2, ~x2): -1; '
 resulting in :
~x\3b:111\; x\3b:0\
~x\3b:011\; x\3b:4\
~x\3b:101\; x\3b:2\
~x\3b:001\; x\3b:6\
~x\3b:110\; x\3b:1\
~x\3b:010\; x\3b:5\
~x\3b:100\; x\3b:3\
~x\3b:000\; x\3b:7\

Expression AND: (x\3q:U\ & y\3q:5\)
 Dann5 virtual code: _&550\S\ = x0\S\ & y0\1\; _&551\0\ = x1\S\ & y1\0\; _&552\S\ = x2\S\ & y2\1\; 
 It's Qubo is '(_&550, _&550): 1; (_&552, _&552): 1; (x0, _&550): -2; (x0, x0): 1; (x1, x1): 0; (x2, _&552): -2; (x2, x2): 1; '
 resulting in :
_&55\3b:000\; x\3b:0\; y\3b:5\
_&55\3b:000\; x\3b:2\; y\3b:5\
_&55\3b:100\; x\3b:4\; y\3b:5\
_&55\3b:100\; x\3b:6\; y\3b:5\
_&55\3b:001\; x\3b:1\; y\3b:5\
_&55\3b:001\; x\3b:3\; y\3b:5\
_&55\3b:101\; x\3b:5\; y\3b:5\
_&55\3b:101\; x\3b:7\; y\3b:5\

Expression NAND: (x\3q:U\ !& y\3q:5\)
 Dann5 virtual code: _!&50\S\ = x0\S\ !& y0\1\; _!&51\S\ = x1\S\ !& y1\0\; _!&52\S\ = x2\S\ !& y2\1\; 
 It's Qubo is '(?!&10, ?!&10): -3; (?!&8, ?!&8): -3; (?!&9, ?!&9): 5; (_!&50, ?!&8): 10; (_!&50, _!&50): -5; (_!&51, ?!&9): 10; (_!&51, _!&51): -5; (_!&52, ?!&10): 10; (_!&52, _!&52): -5; (x0, ?!&8): -7; (x0, x0): 5; (x1, ?!&9): -7; (x1, x1): 0; (x2, ?!&10): -7; (x2, x2): 5; '
 resulting in :
_!&5\3b:111\; x\3b:0\; y\3b:5\
_!&5\3b:111\; x\3b:2\; y\3b:5\
_!&5\3b:011\; x\3b:4\; y\3b:5\
_!&5\3b:011\; x\3b:6\; y\3b:5\
_!&5\3b:110\; x\3b:1\; y\3b:5\
_!&5\3b:110\; x\3b:3\; y\3b:5\
_!&5\3b:010\; x\3b:5\; y\3b:5\
_!&5\3b:010\; x\3b:7\; y\3b:5\

**** x has been resized to 4 qbits ****
 decomposed: x\4q:x3\S\;x2\S\;x1\S\;x0\S\;\

Expression OR: (x\4q:U\ | y\3q:5\)
 Dann5 virtual code: _|610\S\ = x0\S\ | y0\1\; _|611\S\ = x1\S\ | y1\0\; _|612\S\ = x2\S\ | y2\1\; _|613\S\ = x3\S\ | y3\0\; 
 It's Qubo is '(_|610, _|610): -1; (_|611, _|611): 1; (_|612, _|612): -1; (_|613, _|613): 1; (x0, _|610): -2; (x0, x0): 2; (x1, _|611): -2; (x1, x1): 1; (x2, _|612): -2; (x2, x2): 2; (x3, _|613): -2; (x3, x3): 1; '
 resulting in :
_|61\4b:0101\; x\4b:0\; y\3b:5\
_|61\4b:0101\; x\4b:4\; y\3b:5\
_|61\4b:0101\; x\4b:1\; y\3b:5\
_|61\4b:0101\; x\4b:5\; y\3b:5\
_|61\4b:1101\; x\4b:8\; y\3b:5\
_|61\4b:1101\; x\4b:12\; y\3b:5\
_|61\4b:1101\; x\4b:9\; y\3b:5\
_|61\4b:1101\; x\4b:13\; y\3b:5\
_|61\4b:0111\; x\4b:2\; y\3b:5\
_|61\4b:0111\; x\4b:6\; y\3b:5\
_|61\4b:0111\; x\4b:3\; y\3b:5\
_|61\4b:0111\; x\4b:7\; y\3b:5\
_|61\4b:1111\; x\4b:10\; y\3b:5\
_|61\4b:1111\; x\4b:14\; y\3b:5\
_|61\4b:1111\; x\4b:11\; y\3b:5\
_|61\4b:1111\; x\4b:15\; y\3b:5\

Expression NOR: (x\4q:U\ !| y\3q:5\)
 Dann5 virtual code: _!|20\0\ = x0\S\ !| y0\1\; _!|21\S\ = x1\S\ !| y1\0\; _!|22\0\ = x2\S\ !| y2\1\; _!|23\S\ = x3\S\ !| y3\0\; 
 It's Qubo is '(?!|6, ?!|6): 3; (?!|8, ?!|8): 3; (_!|21, ?!|6): -1; (_!|21, _!|21): -1; (_!|23, ?!|8): -1; (_!|23, _!|23): -1; (x0, x0): 1; (x1, ?!|6): -2; (x1, _!|21): 2; (x1, x1): -1; (x2, x2): 1; (x3, ?!|8): -2; (x3, _!|23): 2; (x3, x3): -1; '
 resulting in :
_!|2\4b:0000\; x\4b:10\; y\3b:5\
_!|2\4b:1000\; x\4b:2\; y\3b:5\
_!|2\4b:0010\; x\4b:8\; y\3b:5\
_!|2\4b:1010\; x\4b:0\; y\3b:5\

**** x's 2nd qbit is set to 0 ****
 decomposed: x\4q:x3\S\;x2\0\;x1\S\;x0\S\;\

Expression UNLIKE (XOR): (x\4q:U\ ^ y\3q:5\)
 Dann5 virtual code: _^810\S\ = x0\S\ ^ y0\1\; _^811\S\ = x1\S\ ^ y1\0\; _^812\1\ = x2\0\ ^ y2\1\; _^813\S\ = x3\S\ ^ y3\0\; 
 It's Qubo is '(#[_^810], #[_^810]): 0; (#[_^811], #[_^811]): 4; (#[_^813], #[_^813]): 4; (_^810, #[_^810]): 4; (_^810, _^810): -1; (_^811, #[_^811]): 4; (_^811, _^811): 1; (_^813, #[_^813]): 4; (_^813, _^813): 1; (x0, #[_^810]): -4; (x0, _^810): -2; (x0, x0): 3; (x1, #[_^811]): -4; (x1, _^811): -2; (x1, x1): 1; (x3, #[_^813]): -4; (x3, _^813): -2; (x3, x3): 1; '
 resulting in :
_^81\4b:0101\; x\4b:0\; y\3b:5\
_^81\4b:1101\; x\4b:8\; y\3b:5\
_^81\4b:0111\; x\4b:2\; y\3b:5\
_^81\4b:1111\; x\4b:10\; y\3b:5\
_^81\4b:0100\; x\4b:1\; y\3b:5\
_^81\4b:1100\; x\4b:9\; y\3b:5\
_^81\4b:0110\; x\4b:3\; y\3b:5\
_^81\4b:1110\; x\4b:11\; y\3b:5\

Expression ALIKE (NXOR): (x\4q:U\ !^ y\3q:5\)
 Dann5 virtual code: _!^300\S\ = x0\S\ !^ y0\1\; _!^301\S\ = x1\S\ !^ y1\0\; _!^302\0\ = x2\0\ !^ y2\1\; _!^303\S\ = x3\S\ !^ y3\0\; 
 It's Qubo is '(#[_!^300], #[_!^300]): 4; (#[_!^301], #[_!^301]): 8; (#[_!^303], #[_!^303]): 8; (_!^300, #[_!^300]): -4; (_!^300, _!^300): 1; (_!^301, #[_!^301]): -4; (_!^301, _!^301): -1; (_!^303, #[_!^303]): -4; (_!^303, _!^303): -1; (x0, #[_!^300]): -4; (x0, _!^300): 2; (x0, x0): 1; (x1, #[_!^301]): -4; (x1, _!^301): 2; (x1, x1): -1; (x3, #[_!^303]): -4; (x3, _!^303): 2; (x3, x3): -1; '
 resulting in :
_!^30\4b:0000\; x\4b:10\; y\3b:5\
_!^30\4b:1000\; x\4b:2\; y\3b:5\
_!^30\4b:0010\; x\4b:8\; y\3b:5\
_!^30\4b:1010\; x\4b:0\; y\3b:5\
_!^30\4b:0001\; x\4b:11\; y\3b:5\
_!^30\4b:1001\; x\4b:3\; y\3b:5\
_!^30\4b:0011\; x\4b:9\; y\3b:5\
_!^30\4b:1011\; x\4b:1\; y\3b:5\

**** x & y have been resized to 2 qbits ****
 decomposed: x\2q:x1\S\;x0\S\;\
 decomposed: y\2q:y1\0\;y0\1\;\

Complex Expression
((_1\1q:1\ & (x\2q:U\ !& y\2q:1\)) ^ (_0\1q:0\ !^ (y\2q:1\ | x\2q:U\)))
 Dann5 virtual code: _^820\S\ = _&560\S\ ^ _!^310\S\; _&560\S\ = _10\1\ & _!&60\S\; _!&60\S\ = x0\S\ !& y0\1\; _!^310\S\ = _00\0\ !^ _|620\S\; _|620\S\ = y0\1\ | x0\S\; _^821\S\ = _&561\0\ ^ _!^311\S\; _&561\0\ = _11\0\ & _!&61\S\; _!&61\S\ = x1\S\ !& y1\0\; _!^311\S\ = _01\0\ !^ _|621\S\; _|621\S\ = y1\0\ | x1\S\; 
 It's generic Qubo is '(#[_!^310], #[_!^310]): 8; (#[_!^311], #[_!^311]): 8; (#[_^820], #[_^820]): 4; (#[_^821], #[_^821]): 4; (?!&11, ?!&11): 5; (?!&12, ?!&12): 5; (_!&60, ?!&11): 10; (_!&60, _!&60): -5; (_!&60, _&560): -2; (_!&61, ?!&12): 10; (_!&61, _!&61): -5; (_!&61, _&561): -2; (_!^310, #[_!^310]): -4; (_!^310, #[_^820]): -4; (_!^310, _!^310): 0; (_!^310, _^820): -2; (_!^311, #[_!^311]): -4; (_!^311, #[_^821]): -4; (_!^311, _!^311): 0; (_!^311, _^821): -2; (_&560, #[_^820]): -4; (_&560, _!^310): 2; (_&560, _&560): 4; (_&560, _^820): -2; (_&561, #[_^821]): -4; (_&561, _!^311): 2; (_&561, _&561): 4; (_&561, _^821): -2; (_00, #[_!^310]): -4; (_00, _!^310): 2; (_00, _00): -1; (_00, _|620): 2; (_01, #[_!^311]): -4; (_01, _!^311): 2; (_01, _01): -1; (_01, _|621): 2; (_10, _!&60): 1; (_10, _&560): -2; (_10, _10): 0; (_11, _!&61): 1; (_11, _&561): -2; (_11, _11): 0; (_^820, #[_^820]): 4; (_^820, _^820): 1; (_^821, #[_^821]): 4; (_^821, _^821): 1; (_|620, #[_!^310]): -4; (_|620, _!^310): 2; (_|620, _|620): 0; (_|621, #[_!^311]): -4; (_|621, _!^311): 2; (_|621, _|621): 0; (x0, ?!&11): -7; (x0, _|620): -2; (x0, x0): 1; (x0, y0): 6; (x1, ?!&12): -7; (x1, _|621): -2; (x1, x1): 1; (x1, y1): 6; (y0, ?!&11): -8; (y0, _|620): -2; (y0, y0): 1; (y1, ?!&12): -8; (y1, _|621): -2; (y1, y1): 1; '

 & finalized Qubo is '(#[_!^310], #[_!^310]): 8; (#[_!^311], #[_!^311]): 8; (#[_^820], #[_^820]): 4; (#[_^821], #[_^821]): 4; (?!&11, ?!&11): -3; (?!&12, ?!&12): 5; (_!&60, ?!&11): 10; (_!&60, _!&60): -4; (_!&60, _&560): -2; (_!&61, ?!&12): 10; (_!&61, _!&61): -5; (_!^310, #[_!^310]): -4; (_!^310, #[_^820]): -4; (_!^310, _!^310): 0; (_!^310, _^820): -2; (_!^311, #[_!^311]): -4; (_!^311, #[_^821]): -4; (_!^311, _!^311): 0; (_!^311, _^821): -2; (_&560, #[_^820]): -4; (_&560, _!^310): 2; (_&560, _&560): 2; (_&560, _^820): -2; (_^820, #[_^820]): 4; (_^820, _^820): 1; (_^821, #[_^821]): 4; (_^821, _^821): 1; (_|620, #[_!^310]): -4; (_|620, _!^310): 2; (_|620, _|620): -2; (_|621, #[_!^311]): -4; (_|621, _!^311): 2; (_|621, _|621): 0; (x0, ?!&11): -7; (x0, _|620): -2; (x0, x0): 7; (x1, ?!&12): -7; (x1, _|621): -2; (x1, x1): 1; '
 resulting in :
_^82\2b:01\; _&56\2b:01\; _1\1b:1\; _!&6\2b:11\; x\2b:2\; y\2b:1\; _!^31\2b:00\; _0\1b:0\; _|62\2b:11\; y\2b:1\; x\2b:2\
_^82\2b:11\; _&56\2b:01\; _1\1b:1\; _!&6\2b:11\; x\2b:0\; y\2b:1\; _!^31\2b:10\; _0\1b:0\; _|62\2b:01\; y\2b:1\; x\2b:0\
_^82\2b:00\; _&56\2b:00\; _1\1b:1\; _!&6\2b:10\; x\2b:3\; y\2b:1\; _!^31\2b:00\; _0\1b:0\; _|62\2b:11\; y\2b:1\; x\2b:3\
_^82\2b:10\; _&56\2b:00\; _1\1b:1\; _!&6\2b:10\; x\2b:1\; y\2b:1\; _!^31\2b:10\; _0\1b:0\; _|62\2b:01\; y\2b:1\; x\2b:1\


 --- Arithmetic Expressions ----
Addition Expression
(x\2q:U\ + y\3q:5\)
 Dann5 virtual code: _+260\S\ = x0\S\ .+ y0\1\; _+261\S\ = x1\S\ + y1\0\ + #[_+260]\S\; _+262\S\ = y2\1\ .+ #[_+261]\S\; _+263\S\ = #[_+262]\S\; 
 It's generic Qubo is '(#[_+260], #[_+260]): 5; (#[_+260], #[_+261]): -4; (#[_+260], _+261): -2; (#[_+261], #[_+261]): 5; (#[_+261], _+262): -2; (#[_+261], _+263): -4; (_+260, #[_+260]): 4; (_+260, _+260): 1; (_+261, #[_+261]): 4; (_+261, _+261): 1; (_+262, _+262): 1; (_+262, _+263): 4; (_+263, _+263): 4; (x0, #[_+260]): -4; (x0, _+260): -2; (x0, x0): 1; (x0, y0): 2; (x1, #[_+260]): 2; (x1, #[_+261]): -4; (x1, _+261): -2; (x1, x1): 1; (x1, y1): 2; (y0, #[_+260]): -4; (y0, _+260): -2; (y0, y0): 1; (y1, #[_+260]): 2; (y1, #[_+261]): -4; (y1, _+261): -2; (y1, y1): 1; (y2, #[_+261]): 2; (y2, _+262): -2; (y2, _+263): -4; (y2, y2): 1; '

 & finalized Qubo is '(#[_+260], #[_+260]): 1; (#[_+260], #[_+261]): -4; (#[_+260], _+261): -2; (#[_+261], #[_+261]): 7; (#[_+261], _+262): -2; (#[_+261], _+263): -4; (_+260, #[_+260]): 4; (_+260, _+260): -1; (_+261, #[_+261]): 4; (_+261, _+261): 1; (_+262, _+262): -1; (_+262, _+263): 4; (_+263, _+263): 0; (x0, #[_+260]): -4; (x0, _+260): -2; (x0, x0): 3; (x1, #[_+260]): 2; (x1, #[_+261]): -4; (x1, _+261): -2; (x1, x1): 1; '
 resulting in :
_+26\4b:5\; x\2b:0\; y\3b:5\
_+26\4b:7\; x\2b:2\; y\3b:5\
_+26\4b:6\; x\2b:1\; y\3b:5\
_+26\4b:8\; x\2b:3\; y\3b:5\

Addition Expression
(y\3q:5\ + x\2q:U\)
 Dann5 virtual code: _+280\S\ = y0\1\ .+ x0\S\; _+281\S\ = y1\0\ + x1\S\ + #[_+280]\S\; _+282\S\ = y2\1\ .+ #[_+281]\S\; _+283\S\ = #[_+282]\S\; 
 It's generic Qubo is '(#[_+280], #[_+280]): 5; (#[_+280], #[_+281]): -4; (#[_+280], _+281): -2; (#[_+281], #[_+281]): 5; (#[_+281], _+282): -2; (#[_+281], _+283): -4; (_+280, #[_+280]): 4; (_+280, _+280): 1; (_+281, #[_+281]): 4; (_+281, _+281): 1; (_+282, _+282): 1; (_+282, _+283): 4; (_+283, _+283): 4; (x0, #[_+280]): -4; (x0, _+280): -2; (x0, x0): 1; (x1, #[_+280]): 2; (x1, #[_+281]): -4; (x1, _+281): -2; (x1, x1): 1; (y0, #[_+280]): -4; (y0, _+280): -2; (y0, x0): 2; (y0, y0): 1; (y1, #[_+280]): 2; (y1, #[_+281]): -4; (y1, _+281): -2; (y1, x1): 2; (y1, y1): 1; (y2, #[_+281]): 2; (y2, _+282): -2; (y2, _+283): -4; (y2, y2): 1; '

 & finalized Qubo is '(#[_+280], #[_+280]): 1; (#[_+280], #[_+281]): -4; (#[_+280], _+281): -2; (#[_+281], #[_+281]): 7; (#[_+281], _+282): -2; (#[_+281], _+283): -4; (_+280, #[_+280]): 4; (_+280, _+280): -1; (_+281, #[_+281]): 4; (_+281, _+281): 1; (_+282, _+282): -1; (_+282, _+283): 4; (_+283, _+283): 0; (x0, #[_+280]): -4; (x0, _+280): -2; (x0, x0): 3; (x1, #[_+280]): 2; (x1, #[_+281]): -4; (x1, _+281): -2; (x1, x1): 1; '
 resulting in :
_+28\4b:5\; y\3b:5\; x\2b:0\
_+28\4b:7\; y\3b:5\; x\2b:2\
_+28\4b:6\; y\3b:5\; x\2b:1\
_+28\4b:8\; y\3b:5\; x\2b:3\

Addition Expression
(((x\2q:U\ + y\3q:5\) + z\1q:U\) + _3\2q:3\)
 Dann5 virtual code: _+340\S\ = _+320\S\ .+ _30\1\; _+320\S\ = x0\S\ + y0\1\ + z0\S\; _+341\S\ = _+321\S\ + _31\1\ + #[_+340]\S\; _+321\S\ = x1\S\ + y1\0\ + #[_+320]\S\; _+342\S\ = y2\1\ + #[_+321]\S\ + #[_+341]\S\; _+343\S\ = #[_+322]\S\; 
 It's generic Qubo is '(#[_+320], #[_+320]): 5; (#[_+320], #[_+321]): -4; (#[_+320], _+321): -2; (#[_+321], #[_+321]): 5; (#[_+321], #[_+341]): 2; (#[_+321], _+342): -2; (#[_+321], _+343): -4; (#[_+340], #[_+340]): 5; (#[_+340], #[_+341]): -4; (#[_+340], _+341): -2; (#[_+341], #[_+341]): 5; (#[_+341], _+342): -2; (#[_+341], _+343): -4; (_+320, #[_+320]): 4; (_+320, #[_+340]): -4; (_+320, _+320): 2; (_+320, _+340): -2; (_+320, _30): 2; (_+321, #[_+321]): 4; (_+321, #[_+340]): 2; (_+321, #[_+341]): -4; (_+321, _+321): 2; (_+321, _+341): -2; (_+321, _31): 2; (_+340, #[_+340]): 4; (_+340, _+340): 1; (_+341, #[_+341]): 4; (_+341, _+341): 1; (_+342, _+342): 1; (_+342, _+343): 4; (_+343, _+343): 4; (_30, #[_+340]): -4; (_30, _+340): -2; (_30, _30): 1; (_31, #[_+340]): 2; (_31, #[_+341]): -4; (_31, _+341): -2; (_31, _31): 1; (x0, #[_+320]): -4; (x0, _+320): -2; (x0, x0): 1; (x0, y0): 2; (x0, z0): 2; (x1, #[_+320]): 2; (x1, #[_+321]): -4; (x1, _+321): -2; (x1, x1): 1; (x1, y1): 2; (y0, #[_+320]): -4; (y0, _+320): -2; (y0, y0): 1; (y0, z0): 2; (y1, #[_+320]): 2; (y1, #[_+321]): -4; (y1, _+321): -2; (y1, y1): 1; (y2, #[_+321]): 2; (y2, #[_+341]): 2; (y2, _+342): -2; (y2, _+343): -4; (y2, y2): 1; (z0, #[_+320]): -4; (z0, _+320): -2; (z0, z0): 1; '

 & finalized Qubo is '(#[_+320], #[_+320]): 1; (#[_+320], #[_+321]): -4; (#[_+320], _+321): -2; (#[_+321], #[_+321]): 7; (#[_+321], #[_+341]): 2; (#[_+321], _+342): -2; (#[_+321], _+343): -4; (#[_+340], #[_+340]): 3; (#[_+340], #[_+341]): -4; (#[_+340], _+341): -2; (#[_+341], #[_+341]): 3; (#[_+341], _+342): -2; (#[_+341], _+343): -4; (_+320, #[_+320]): 4; (_+320, #[_+340]): -4; (_+320, _+320): 2; (_+320, _+340): -2; (_+321, #[_+321]): 4; (_+321, #[_+340]): 2; (_+321, #[_+341]): -4; (_+321, _+321): 4; (_+321, _+341): -2; (_+340, #[_+340]): 4; (_+340, _+340): -1; (_+341, #[_+341]): 4; (_+341, _+341): -1; (_+342, _+342): -1; (_+342, _+343): 4; (_+343, _+343): 0; (x0, #[_+320]): -4; (x0, _+320): -2; (x0, x0): 3; (x0, z0): 2; (x1, #[_+320]): 2; (x1, #[_+321]): -4; (x1, _+321): -2; (x1, x1): 1; (z0, #[_+320]): -4; (z0, _+320): -2; (z0, z0): 3; '
 resulting in :
_+34\4b:8\; _+32\4b:13\; _+30\4b:15\; x\2b:0\; y\3b:5\; z\1b:0\; _3\2b:3\
_+34\4b:10\; _+32\4b:15\; _+30\4b:15\; x\2b:2\; y\3b:5\; z\1b:0\; _3\2b:3\
_+34\4b:9\; _+32\4b:14\; _+30\4b:15\; x\2b:0\; y\3b:5\; z\1b:1\; _3\2b:3\
_+34\4b:9\; _+32\4b:14\; _+30\4b:15\; x\2b:1\; y\3b:5\; z\1b:0\; _3\2b:3\
_+34\4b:10\; _+32\4b:15\; _+30\4b:15\; x\2b:1\; y\3b:5\; z\1b:1\; _3\2b:3\
_+34\4b:11\; _+32\4b:12\; _+30\4b:15\; x\2b:2\; y\3b:5\; z\1b:1\; _3\2b:3\
_+34\4b:11\; _+32\4b:12\; _+30\4b:15\; x\2b:3\; y\3b:5\; z\1b:0\; _3\2b:3\
_+34\4b:12\; _+32\4b:13\; _+30\4b:15\; x\2b:3\; y\3b:5\; z\1b:1\; _3\2b:3\

Addition Expression
(((y\3q:5\ + x\2q:U\) + z\1q:U\) + _3\2q:3\)
 Dann5 virtual code: _+390\S\ = _+370\S\ .+ _30\1\; _+370\S\ = y0\1\ + x0\S\ + z0\S\; _+391\S\ = _+371\S\ + _31\1\ + #[_+390]\S\; _+371\S\ = y1\0\ + x1\S\ + #[_+370]\S\; _+392\S\ = y2\1\ + #[_+371]\S\ + #[_+391]\S\; _+393\S\ = #[_+372]\S\; 
 It's generic Qubo is '(#[_+370], #[_+370]): 5; (#[_+370], #[_+371]): -4; (#[_+370], _+371): -2; (#[_+371], #[_+371]): 5; (#[_+371], #[_+391]): 2; (#[_+371], _+392): -2; (#[_+371], _+393): -4; (#[_+390], #[_+390]): 5; (#[_+390], #[_+391]): -4; (#[_+390], _+391): -2; (#[_+391], #[_+391]): 5; (#[_+391], _+392): -2; (#[_+391], _+393): -4; (_+370, #[_+370]): 4; (_+370, #[_+390]): -4; (_+370, _+370): 2; (_+370, _+390): -2; (_+370, _30): 2; (_+371, #[_+371]): 4; (_+371, #[_+390]): 2; (_+371, #[_+391]): -4; (_+371, _+371): 2; (_+371, _+391): -2; (_+371, _31): 2; (_+390, #[_+390]): 4; (_+390, _+390): 1; (_+391, #[_+391]): 4; (_+391, _+391): 1; (_+392, _+392): 1; (_+392, _+393): 4; (_+393, _+393): 4; (_30, #[_+390]): -4; (_30, _+390): -2; (_30, _30): 1; (_31, #[_+390]): 2; (_31, #[_+391]): -4; (_31, _+391): -2; (_31, _31): 1; (x0, #[_+370]): -4; (x0, _+370): -2; (x0, x0): 1; (x0, z0): 2; (x1, #[_+370]): 2; (x1, #[_+371]): -4; (x1, _+371): -2; (x1, x1): 1; (y0, #[_+370]): -4; (y0, _+370): -2; (y0, x0): 2; (y0, y0): 1; (y0, z0): 2; (y1, #[_+370]): 2; (y1, #[_+371]): -4; (y1, _+371): -2; (y1, x1): 2; (y1, y1): 1; (y2, #[_+371]): 2; (y2, #[_+391]): 2; (y2, _+392): -2; (y2, _+393): -4; (y2, y2): 1; (z0, #[_+370]): -4; (z0, _+370): -2; (z0, z0): 1; '

 & finalized Qubo is '(#[_+370], #[_+370]): 1; (#[_+370], #[_+371]): -4; (#[_+370], _+371): -2; (#[_+371], #[_+371]): 7; (#[_+371], #[_+391]): 2; (#[_+371], _+392): -2; (#[_+371], _+393): -4; (#[_+390], #[_+390]): 3; (#[_+390], #[_+391]): -4; (#[_+390], _+391): -2; (#[_+391], #[_+391]): 3; (#[_+391], _+392): -2; (#[_+391], _+393): -4; (_+370, #[_+370]): 4; (_+370, #[_+390]): -4; (_+370, _+370): 2; (_+370, _+390): -2; (_+371, #[_+371]): 4; (_+371, #[_+390]): 2; (_+371, #[_+391]): -4; (_+371, _+371): 4; (_+371, _+391): -2; (_+390, #[_+390]): 4; (_+390, _+390): -1; (_+391, #[_+391]): 4; (_+391, _+391): -1; (_+392, _+392): -1; (_+392, _+393): 4; (_+393, _+393): 0; (x0, #[_+370]): -4; (x0, _+370): -2; (x0, x0): 3; (x0, z0): 2; (x1, #[_+370]): 2; (x1, #[_+371]): -4; (x1, _+371): -2; (x1, x1): 1; (z0, #[_+370]): -4; (z0, _+370): -2; (z0, z0): 3; '

 resulting in :
_+39\4b:8\; _+37\4b:13\; _+28\4b:15\; y\3b:5\; x\2b:0\; z\1b:0\; _3\2b:3\
_+39\4b:10\; _+37\4b:15\; _+28\4b:15\; y\3b:5\; x\2b:2\; z\1b:0\; _3\2b:3\
_+39\4b:9\; _+37\4b:14\; _+28\4b:15\; y\3b:5\; x\2b:0\; z\1b:1\; _3\2b:3\
_+39\4b:9\; _+37\4b:14\; _+28\4b:15\; y\3b:5\; x\2b:1\; z\1b:0\; _3\2b:3\
_+39\4b:10\; _+37\4b:15\; _+28\4b:15\; y\3b:5\; x\2b:1\; z\1b:1\; _3\2b:3\
_+39\4b:11\; _+37\4b:12\; _+28\4b:15\; y\3b:5\; x\2b:2\; z\1b:1\; _3\2b:3\
_+39\4b:11\; _+37\4b:12\; _+28\4b:15\; y\3b:5\; x\2b:3\; z\1b:0\; _3\2b:3\
_+39\4b:12\; _+37\4b:13\; _+28\4b:15\; y\3b:5\; x\2b:3\; z\1b:1\; _3\2b:3\

Addition Expression
((z\1q:U\ + (x\2q:U\ + y\3q:5\)) + _3\2q:3\)
 Dann5 virtual code: _+460\S\ = _+440\S\ .+ _30\1\; _+440\S\ = x0\S\ + y0\1\ + z0\S\; _+461\S\ = _+441\S\ + _31\1\ + #[_+460]\S\; _+441\S\ = x1\S\ + y1\0\ + #[_+440]\S\; _+462\S\ = y2\1\ + #[_+441]\S\ + #[_+461]\S\; _+463\S\ = #[_+442]\S\; 
 It's generic Qubo is '(#[_+440], #[_+440]): 5; (#[_+440], #[_+441]): -4; (#[_+440], _+441): -2; (#[_+441], #[_+441]): 5; (#[_+441], #[_+461]): 2; (#[_+441], _+462): -2; (#[_+441], _+463): -4; (#[_+460], #[_+460]): 5; (#[_+460], #[_+461]): -4; (#[_+460], _+461): -2; (#[_+461], #[_+461]): 5; (#[_+461], _+462): -2; (#[_+461], _+463): -4; (_+440, #[_+440]): 4; (_+440, #[_+460]): -4; (_+440, _+440): 2; (_+440, _+460): -2; (_+440, _30): 2; (_+441, #[_+441]): 4; (_+441, #[_+460]): 2; (_+441, #[_+461]): -4; (_+441, _+441): 2; (_+441, _+461): -2; (_+441, _31): 2; (_+460, #[_+460]): 4; (_+460, _+460): 1; (_+461, #[_+461]): 4; (_+461, _+461): 1; (_+462, _+462): 1; (_+462, _+463): 4; (_+463, _+463): 4; (_30, #[_+460]): -4; (_30, _+460): -2; (_30, _30): 1; (_31, #[_+460]): 2; (_31, #[_+461]): -4; (_31, _+461): -2; (_31, _31): 1; (x0, #[_+440]): -4; (x0, _+440): -2; (x0, x0): 1; (x0, y0): 2; (x0, z0): 2; (x1, #[_+440]): 2; (x1, #[_+441]): -4; (x1, _+441): -2; (x1, x1): 1; (x1, y1): 2; (y0, #[_+440]): -4; (y0, _+440): -2; (y0, y0): 1; (y0, z0): 2; (y1, #[_+440]): 2; (y1, #[_+441]): -4; (y1, _+441): -2; (y1, y1): 1; (y2, #[_+441]): 2; (y2, #[_+461]): 2; (y2, _+462): -2; (y2, _+463): -4; (y2, y2): 1; (z0, #[_+440]): -4; (z0, _+440): -2; (z0, z0): 1; '

 & finalized Qubo is '(#[_+440], #[_+440]): 1; (#[_+440], #[_+441]): -4; (#[_+440], _+441): -2; (#[_+441], #[_+441]): 7; (#[_+441], #[_+461]): 2; (#[_+441], _+462): -2; (#[_+441], _+463): -4; (#[_+460], #[_+460]): 3; (#[_+460], #[_+461]): -4; (#[_+460], _+461): -2; (#[_+461], #[_+461]): 3; (#[_+461], _+462): -2; (#[_+461], _+463): -4; (_+440, #[_+440]): 4; (_+440, #[_+460]): -4; (_+440, _+440): 2; (_+440, _+460): -2; (_+441, #[_+441]): 4; (_+441, #[_+460]): 2; (_+441, #[_+461]): -4; (_+441, _+441): 4; (_+441, _+461): -2; (_+460, #[_+460]): 4; (_+460, _+460): -1; (_+461, #[_+461]): 4; (_+461, _+461): -1; (_+462, _+462): -1; (_+462, _+463): 4; (_+463, _+463): 0; (x0, #[_+440]): -4; (x0, _+440): -2; (x0, x0): 3; (x0, z0): 2; (x1, #[_+440]): 2; (x1, #[_+441]): -4; (x1, _+441): -2; (x1, x1): 1; (z0, #[_+440]): -4; (z0, _+440): -2; (z0, z0): 3; '
 resulting in :
_+46\4b:8\; _+44\4b:13\; z\1b:0\; _+42\4b:15\; x\2b:0\; y\3b:5\; _3\2b:3\
_+46\4b:10\; _+44\4b:15\; z\1b:0\; _+42\4b:15\; x\2b:2\; y\3b:5\; _3\2b:3\
_+46\4b:9\; _+44\4b:14\; z\1b:1\; _+42\4b:15\; x\2b:0\; y\3b:5\; _3\2b:3\
_+46\4b:9\; _+44\4b:14\; z\1b:0\; _+42\4b:15\; x\2b:1\; y\3b:5\; _3\2b:3\
_+46\4b:10\; _+44\4b:15\; z\1b:1\; _+42\4b:15\; x\2b:1\; y\3b:5\; _3\2b:3\
_+46\4b:11\; _+44\4b:12\; z\1b:1\; _+42\4b:15\; x\2b:2\; y\3b:5\; _3\2b:3\
_+46\4b:11\; _+44\4b:12\; z\1b:0\; _+42\4b:15\; x\2b:3\; y\3b:5\; _3\2b:3\
_+46\4b:12\; _+44\4b:13\; z\1b:1\; _+42\4b:15\; x\2b:3\; y\3b:5\; _3\2b:3\

Addition Expression
((x\2q:U\ + y\3q:5\) + (z\1q:U\ + _3\2q:3\))
 Dann5 virtual code: _+520\S\ = x0\S\ + y0\1\ + _+490\S\; _+490\S\ = z0\S\ .+ _30\1\; _+521\S\ = _31\1\ + #[_+490]\S\ + _+501\S\; _+501\S\ = x1\S\ + y1\0\ + #[_+520]\S\; _+522\S\ = y2\1\ + #[_+501]\S\ + #[_+521]\S\; _+523\S\ = #[_+522]\S\; 
 It's generic Qubo is '(#[_+490], #[_+490]): 5; (#[_+490], #[_+521]): -4; (#[_+490], _+501): 2; (#[_+490], _+521): -2; (#[_+501], #[_+501]): 5; (#[_+501], #[_+521]): 2; (#[_+501], _+522): -2; (#[_+501], _+523): -4; (#[_+520], #[_+501]): -4; (#[_+520], #[_+520]): 5; (#[_+520], _+501): -2; (#[_+521], #[_+521]): 5; (#[_+521], _+522): -2; (#[_+521], _+523): -4; (_+490, #[_+490]): 4; (_+490, #[_+520]): -4; (_+490, _+490): 2; (_+490, _+520): -2; (_+501, #[_+501]): 4; (_+501, #[_+521]): -4; (_+501, _+501): 2; (_+501, _+521): -2; (_+520, #[_+520]): 4; (_+520, _+520): 1; (_+521, #[_+521]): 4; (_+521, _+521): 1; (_+522, _+522): 1; (_+522, _+523): 4; (_+523, _+523): 4; (_30, #[_+490]): -4; (_30, _+490): -2; (_30, _30): 1; (_31, #[_+490]): 2; (_31, #[_+521]): -4; (_31, _+501): 2; (_31, _+521): -2; (_31, _31): 1; (x0, #[_+520]): -4; (x0, _+490): 2; (x0, _+520): -2; (x0, x0): 1; (x0, y0): 2; (x1, #[_+501]): -4; (x1, #[_+520]): 2; (x1, _+501): -2; (x1, x1): 1; (x1, y1): 2; (y0, #[_+520]): -4; (y0, _+490): 2; (y0, _+520): -2; (y0, y0): 1; (y1, #[_+501]): -4; (y1, #[_+520]): 2; (y1, _+501): -2; (y1, y1): 1; (y2, #[_+501]): 2; (y2, #[_+521]): 2; (y2, _+522): -2; (y2, _+523): -4; (y2, y2): 1; (z0, #[_+490]): -4; (z0, _+490): -2; (z0, _30): 2; (z0, z0): 1; '

 & finalized Qubo is '(#[_+490], #[_+490]): 3; (#[_+490], #[_+521]): -4; (#[_+490], _+501): 2; (#[_+490], _+521): -2; (#[_+501], #[_+501]): 7; (#[_+501], #[_+521]): 2; (#[_+501], _+522): -2; (#[_+501], _+523): -4; (#[_+520], #[_+501]): -4; (#[_+520], #[_+520]): 1; (#[_+520], _+501): -2; (#[_+521], #[_+521]): 3; (#[_+521], _+522): -2; (#[_+521], _+523): -4; (_+490, #[_+490]): 4; (_+490, #[_+520]): -4; (_+490, _+490): 2; (_+490, _+520): -2; (_+501, #[_+501]): 4; (_+501, #[_+521]): -4; (_+501, _+501): 4; (_+501, _+521): -2; (_+520, #[_+520]): 4; (_+520, _+520): -1; (_+521, #[_+521]): 4; (_+521, _+521): -1; (_+522, _+522): -1; (_+522, _+523): 4; (_+523, _+523): 0; (x0, #[_+520]): -4; (x0, _+490): 2; (x0, _+520): -2; (x0, x0): 3; (x1, #[_+501]): -4; (x1, #[_+520]): 2; (x1, _+501): -2; (x1, x1): 1; (z0, #[_+490]): -4; (z0, _+490): -2; (z0, z0): 3; '
 resulting in :
_+52\4b:8\; _+50\4b:15\; x\2b:0\; y\3b:5\; _+49\3b:7\; z\1b:0\; _3\2b:3\
_+52\4b:9\; _+50\4b:15\; x\2b:1\; y\3b:5\; _+49\3b:7\; z\1b:0\; _3\2b:3\
_+52\4b:9\; _+50\4b:13\; x\2b:0\; y\3b:5\; _+49\3b:6\; z\1b:1\; _3\2b:3\
_+52\4b:11\; _+50\4b:15\; x\2b:2\; y\3b:5\; _+49\3b:6\; z\1b:1\; _3\2b:3\
_+52\4b:10\; _+50\4b:15\; x\2b:1\; y\3b:5\; _+49\3b:6\; z\1b:1\; _3\2b:3\
_+52\4b:10\; _+50\4b:13\; x\2b:2\; y\3b:5\; _+49\3b:3\; z\1b:0\; _3\2b:3\
_+52\4b:11\; _+50\4b:13\; x\2b:3\; y\3b:5\; _+49\3b:3\; z\1b:0\; _3\2b:3\
_+52\4b:12\; _+50\4b:13\; x\2b:3\; y\3b:5\; _+49\3b:6\; z\1b:1\; _3\2b:3\

Addition Expression
((x\2q:U\ + y\3q:5\) + (z\1q:U\ + _3\2q:3\))
 Dann5 virtual code: _+590\S\ = x0\S\ + y0\1\ + _+580\S\; _+580\S\ = z0\S\ .+ _30\1\; _+591\S\ = _31\1\ + #[_+580]\S\ + _+561\S\; _+561\S\ = x1\S\ + y1\0\ + #[_+590]\S\; _+592\S\ = y2\1\ + #[_+561]\S\ + #[_+591]\S\; _+593\S\ = #[_+592]\S\; 
 It's generic Qubo is '(#[_+561], #[_+561]): 5; (#[_+561], #[_+591]): 2; (#[_+561], _+592): -2; (#[_+561], _+593): -4; (#[_+580], #[_+580]): 5; (#[_+580], #[_+591]): -4; (#[_+580], _+561): 2; (#[_+580], _+591): -2; (#[_+590], #[_+561]): -4; (#[_+590], #[_+590]): 5; (#[_+590], _+561): -2; (#[_+591], #[_+591]): 5; (#[_+591], _+592): -2; (#[_+591], _+593): -4; (_+561, #[_+561]): 4; (_+561, #[_+591]): -4; (_+561, _+561): 2; (_+561, _+591): -2; (_+580, #[_+580]): 4; (_+580, #[_+590]): -4; (_+580, _+580): 2; (_+580, _+590): -2; (_+590, #[_+590]): 4; (_+590, _+590): 1; (_+591, #[_+591]): 4; (_+591, _+591): 1; (_+592, _+592): 1; (_+592, _+593): 4; (_+593, _+593): 4; (_30, #[_+580]): -4; (_30, _+580): -2; (_30, _30): 1; (_31, #[_+580]): 2; (_31, #[_+591]): -4; (_31, _+561): 2; (_31, _+591): -2; (_31, _31): 1; (x0, #[_+590]): -4; (x0, _+580): 2; (x0, _+590): -2; (x0, x0): 1; (x0, y0): 2; (x1, #[_+561]): -4; (x1, #[_+590]): 2; (x1, _+561): -2; (x1, x1): 1; (x1, y1): 2; (y0, #[_+590]): -4; (y0, _+580): 2; (y0, _+590): -2; (y0, y0): 1; (y1, #[_+561]): -4; (y1, #[_+590]): 2; (y1, _+561): -2; (y1, y1): 1; (y2, #[_+561]): 2; (y2, #[_+591]): 2; (y2, _+592): -2; (y2, _+593): -4; (y2, y2): 1; (z0, #[_+580]): -4; (z0, _+580): -2; (z0, _30): 2; (z0, z0): 1; '

 & finalized Qubo is '(#[_+561], #[_+561]): 7; (#[_+561], #[_+591]): 2; (#[_+561], _+592): -2; (#[_+561], _+593): -4; (#[_+580], #[_+580]): 3; (#[_+580], #[_+591]): -4; (#[_+580], _+561): 2; (#[_+580], _+591): -2; (#[_+590], #[_+561]): -4; (#[_+590], #[_+590]): 1; (#[_+590], _+561): -2; (#[_+591], #[_+591]): 3; (#[_+591], _+592): -2; (#[_+591], _+593): -4; (_+561, #[_+561]): 4; (_+561, #[_+591]): -4; (_+561, _+561): 4; (_+561, _+591): -2; (_+580, #[_+580]): 4; (_+580, #[_+590]): -4; (_+580, _+580): 2; (_+580, _+590): -2; (_+590, #[_+590]): 4; (_+590, _+590): -1; (_+591, #[_+591]): 4; (_+591, _+591): -1; (_+592, _+592): -1; (_+592, _+593): 4; (_+593, _+593): 0; (x0, #[_+590]): -4; (x0, _+580): 2; (x0, _+590): -2; (x0, x0): 3; (x1, #[_+561]): -4; (x1, #[_+590]): 2; (x1, _+561): -2; (x1, x1): 1; (z0, #[_+580]): -4; (z0, _+580): -2; (z0, z0): 3; '
 resulting in :
_+59\4b:8\; _+56\4b:15\; x\2b:0\; y\3b:5\; _+58\3b:7\; z\1b:0\; _3\2b:3\
_+59\4b:9\; _+56\4b:15\; x\2b:1\; y\3b:5\; _+58\3b:7\; z\1b:0\; _3\2b:3\
_+59\4b:10\; _+56\4b:13\; x\2b:2\; y\3b:5\; _+58\3b:3\; z\1b:0\; _3\2b:3\
_+59\4b:11\; _+56\4b:13\; x\2b:3\; y\3b:5\; _+58\3b:3\; z\1b:0\; _3\2b:3\
_+59\4b:9\; _+56\4b:13\; x\2b:0\; y\3b:5\; _+58\3b:6\; z\1b:1\; _3\2b:3\
_+59\4b:11\; _+56\4b:15\; x\2b:2\; y\3b:5\; _+58\3b:6\; z\1b:1\; _3\2b:3\
_+59\4b:10\; _+56\4b:15\; x\2b:1\; y\3b:5\; _+58\3b:6\; z\1b:1\; _3\2b:3\
_+59\4b:12\; _+56\4b:13\; x\2b:3\; y\3b:5\; _+58\3b:6\; z\1b:1\; _3\2b:3\

Addition Expression
((z\1q:U\ + _3\2q:3\) + (x\2q:U\ + y\3q:5\))
 Dann5 virtual code: _+660\S\ = z0\S\ + _30\1\ + _+630\S\; _+630\S\ = x0\S\ .+ y0\1\; _+661\S\ = _31\1\ + #[_+660]\S\ + _+631\S\; _+631\S\ = x1\S\ + y1\0\ + #[_+630]\S\; _+662\S\ = y2\1\ + #[_+631]\S\ + #[_+661]\S\; _+663\S\ = #[_+662]\S\; 
 It's generic Qubo is '(#[_+630], #[_+630]): 5; (#[_+630], #[_+631]): -4; (#[_+630], _+631): -2; (#[_+631], #[_+631]): 5; (#[_+631], #[_+661]): 2; (#[_+631], _+662): -2; (#[_+631], _+663): -4; (#[_+660], #[_+660]): 5; (#[_+660], #[_+661]): -4; (#[_+660], _+631): 2; (#[_+660], _+661): -2; (#[_+661], #[_+661]): 5; (#[_+661], _+662): -2; (#[_+661], _+663): -4; (_+630, #[_+630]): 4; (_+630, #[_+660]): -4; (_+630, _+630): 2; (_+630, _+660): -2; (_+631, #[_+631]): 4; (_+631, #[_+661]): -4; (_+631, _+631): 2; (_+631, _+661): -2; (_+660, #[_+660]): 4; (_+660, _+660): 1; (_+661, #[_+661]): 4; (_+661, _+661): 1; (_+662, _+662): 1; (_+662, _+663): 4; (_+663, _+663): 4; (_30, #[_+660]): -4; (_30, _+630): 2; (_30, _+660): -2; (_30, _30): 1; (_31, #[_+660]): 2; (_31, #[_+661]): -4; (_31, _+631): 2; (_31, _+661): -2; (_31, _31): 1; (x0, #[_+630]): -4; (x0, _+630): -2; (x0, x0): 1; (x0, y0): 2; (x1, #[_+630]): 2; (x1, #[_+631]): -4; (x1, _+631): -2; (x1, x1): 1; (x1, y1): 2; (y0, #[_+630]): -4; (y0, _+630): -2; (y0, y0): 1; (y1, #[_+630]): 2; (y1, #[_+631]): -4; (y1, _+631): -2; (y1, y1): 1; (y2, #[_+631]): 2; (y2, #[_+661]): 2; (y2, _+662): -2; (y2, _+663): -4; (y2, y2): 1; (z0, #[_+660]): -4; (z0, _+630): 2; (z0, _+660): -2; (z0, _30): 2; (z0, z0): 1; '

 & finalized Qubo is '(#[_+630], #[_+630]): 1; (#[_+630], #[_+631]): -4; (#[_+630], _+631): -2; (#[_+631], #[_+631]): 7; (#[_+631], #[_+661]): 2; (#[_+631], _+662): -2; (#[_+631], _+663): -4; (#[_+660], #[_+660]): 3; (#[_+660], #[_+661]): -4; (#[_+660], _+631): 2; (#[_+660], _+661): -2; (#[_+661], #[_+661]): 3; (#[_+661], _+662): -2; (#[_+661], _+663): -4; (_+630, #[_+630]): 4; (_+630, #[_+660]): -4; (_+630, _+630): 2; (_+630, _+660): -2; (_+631, #[_+631]): 4; (_+631, #[_+661]): -4; (_+631, _+631): 4; (_+631, _+661): -2; (_+660, #[_+660]): 4; (_+660, _+660): -1; (_+661, #[_+661]): 4; (_+661, _+661): -1; (_+662, _+662): -1; (_+662, _+663): 4; (_+663, _+663): 0; (x0, #[_+630]): -4; (x0, _+630): -2; (x0, x0): 3; (x1, #[_+630]): 2; (x1, #[_+631]): -4; (x1, _+631): -2; (x1, x1): 1; (z0, #[_+660]): -4; (z0, _+630): 2; (z0, _+660): -2; (z0, z0): 3; '
 resulting in :
_+66\4b:8\; _+65\3b:7\; z\1b:0\; _3\2b:3\; _+63\4b:13\; x\2b:0\; y\3b:5\
_+66\4b:9\; _+65\3b:7\; z\1b:1\; _3\2b:3\; _+63\4b:13\; x\2b:0\; y\3b:5\
_+66\4b:10\; _+65\3b:7\; z\1b:0\; _3\2b:3\; _+63\4b:15\; x\2b:2\; y\3b:5\
_+66\4b:11\; _+65\3b:7\; z\1b:1\; _3\2b:3\; _+63\4b:15\; x\2b:2\; y\3b:5\
_+66\4b:9\; _+65\3b:7\; z\1b:0\; _3\2b:3\; _+63\4b:14\; x\2b:1\; y\3b:5\
_+66\4b:10\; _+65\3b:7\; z\1b:1\; _3\2b:3\; _+63\4b:14\; x\2b:1\; y\3b:5\
_+66\4b:11\; _+65\3b:3\; z\1b:0\; _3\2b:3\; _+63\4b:12\; x\2b:3\; y\3b:5\
_+66\4b:12\; _+65\3b:7\; z\1b:1\; _3\2b:3\; _+63\4b:12\; x\2b:3\; y\3b:5\

Subtraction Expression
(y\3q:5\ - x\2q:U\)
 Dann5 virtual code: y0\1\ == _+700\S\; _+700\S\ = _-00\S\ .+ x0\S\; y1\0\ == _+701\S\; _+701\S\ = _-01\S\ + x1\S\ + #[_+700]\S\; 
 It's generic Qubo is '(#[_+700], #[_+700]): 5; (#[_+700], _+701): -2; (#[_+700], _+702): -4; (_+700, #[_+700]): 4; (_+700, _+700): 2; (_+700, y0): -2; (_+701, _+701): 2; (_+701, _+702): 4; (_+701, y1): -2; (_+702, _+702): 5; (_+702, y2): -2; (_-00, #[_+700]): -4; (_-00, _+700): -2; (_-00, _-00): 1; (_-00, x0): 2; (_-01, #[_+700]): 2; (_-01, _+701): -2; (_-01, _+702): -4; (_-01, _-01): 1; (_-01, x1): 2; (x0, #[_+700]): -4; (x0, _+700): -2; (x0, x0): 1; (x1, #[_+700]): 2; (x1, _+701): -2; (x1, _+702): -4; (x1, x1): 1; (y0, y0): 1; (y1, y1): 1; (y2, y2): 1; '

 & finalized Qubo is '(#[_+700], #[_+700]): 5; (#[_+700], _+701): -2; (#[_+700], _+702): -4; (_+700, #[_+700]): 4; (_+700, _+700): 0; (_+701, _+701): 2; (_+701, _+702): 4; (_+702, _+702): 3; (_-00, #[_+700]): -4; (_-00, _+700): -2; (_-00, _-00): 1; (_-00, x0): 2; (_-01, #[_+700]): 2; (_-01, _+701): -2; (_-01, _+702): -4; (_-01, _-01): 1; (_-01, x1): 2; (x0, #[_+700]): -4; (x0, _+700): -2; (x0, x0): 1; (x1, #[_+700]): 2; (x1, _+701): -2; (x1, _+702): -4; (x1, x1): 1; '
 resulting in :
_-0\2b:2\; y\3b:5\; x\2b:3\
_-0\2b:3\; y\3b:5\; x\2b:2\
_-0\2b:4\; y\3b:5\; x\2b:1\ & _-0\2b:5\; y\3b:5\; x\2b:0\
Subtraction Expression
(z\3q:U\ - (y\3q:5\ - x\2q:U\))
 Dann5 virtual code: z0\S\ == _+730\S\; _+730\S\ = _-10\S\ .+ _-00\S\; z1\S\ == _+731\S\; _+731\S\ = _-11\S\ + _-01\S\ + #[_+730]\S\; 
 It's generic Qubo is '(#[_+730], #[_+730]): 5; (#[_+730], _+731): -2; (#[_+730], _+732): -4; (_+730, #[_+730]): 4; (_+730, _+730): 2; (_+730, z0): -2; (_+731, _+731): 2; (_+731, _+732): 4; (_+731, z1): -2; (_+732, _+732): 5; (_+732, z2): -2; (_-00, #[_+730]): -4; (_-00, _+730): -2; (_-00, _-00): 1; (_-01, #[_+730]): 2; (_-01, _+731): -2; (_-01, _+732): -4; (_-01, _-01): 1; (_-10, #[_+730]): -4; (_-10, _+730): -2; (_-10, _-00): 2; (_-10, _-10): 1; (_-11, #[_+730]): 2; (_-11, _+731): -2; (_-11, _+732): -4; (_-11, _-01): 2; (_-11, _-11): 1; (z0, z0): 1; (z1, z1): 1; (z2, z2): 1; '

 & finalized Qubo is '(#[_+730], #[_+730]): 5; (#[_+730], _+731): -2; (#[_+730], _+732): -4; (_+730, #[_+730]): 4; (_+730, _+730): 2; (_+730, z0): -2; (_+731, _+731): 2; (_+731, _+732): 4; (_+731, z1): -2; (_+732, _+732): 5; (_+732, z2): -2; (_-00, #[_+730]): -4; (_-00, _+730): -2; (_-00, _-00): 1; (_-01, #[_+730]): 2; (_-01, _+731): -2; (_-01, _+732): -4; (_-01, _-01): 1; (_-10, #[_+730]): -4; (_-10, _+730): -2; (_-10, _-00): 2; (_-10, _-10): 1; (_-11, #[_+730]): 2; (_-11, _+731): -2; (_-11, _+732): -4; (_-11, _-01): 2; (_-11, _-11): 1; (z0, z0): 1; (z1, z1): 1; (z2, z2): 1; '
 resulting in :
_-1\2b:1\; z\3b:4\; _-0\2b:3\; y\3b:5\; x\2b:2\
_-1\2b:0\; z\3b:2\; _-0\2b:2\; y\3b:5\; x\2b:3\
_-1\2b:0\; z\3b:0\; _-0\2b:2\; y\3b:5\; x\2b:3\ It should not be in results
_-1\2b:1\; z\3b:2\; _-0\2b:2\; y\3b:5\; x\2b:3\ wrong
_-1\2b:3\; z\3b:4\; _-0\2b:0\; y\3b:5\; x\2b:3\ wrong
_-1\2b:1\; z\3b:4\; _-0\2b:2\; y\3b:5\; x\2b:3\ wrong
_-1\2b:1\; z\3b:2\; _-0\2b:1\; y\3b:5\; x\2b:3\ wrong
_-1\2b:3\; z\3b:6\; _-0\2b:3\; y\3b:5\; x\2b:3\ wrong
_-1\2b:1\; z\3b:1\; _-0\2b:1\; y\3b:5\; x\2b:3\ wrong
_-1\2b:0\; z\3b:1\; _-0\2b:3\; y\3b:5\; x\2b:3\ wrong
_-1\2b:3\; z\3b:5\; _-0\2b:0\; y\3b:5\; x\2b:3\ wrong
_-1\2b:2\; z\3b:5\; _-0\2b:1\; y\3b:5\; x\2b:3\ wrong
_-1\2b:3\; z\3b:3\; _-0\2b:2\; y\3b:5\; x\2b:3\ wrong
_-1\2b:1\; z\3b:3\; _-0\2b:3\; y\3b:5\; x\2b:3\ wrong
_-1\2b:2\; z\3b:3\; _-0\2b:0\; y\3b:5\; x\2b:3\ wrong
_-1\2b:0\; z\3b:3\; _-0\2b:2\; y\3b:5\; x\2b:3\ wrong

Subtraction Expression
{
	z\2q:U\ = (w\3q:U\ - x\2q:U\);
	w\3q:U\ = (y\4q:5\ - x\2q:U\);
}
 Dann5 virtual code:  w0\S\ == _+760\S\; _+760\S\ = z0\S\ .+ x0\S\; w1\S\ == _+761\S\; _+761\S\ = z1\S\ + x1\S\ + #[_+760]\S\; ; y0\1\ == _+800\S\; _+800\S\ = w0\S\ .+ x0\S\; y1\0\ == _+801\S\; _+801\S\ = w1\S\ + x1\S\ + #[_+800]\S\; 
 It's generic Qubo is '(#[_+760], #[_+760]): 5; (#[_+760], _+761): -2; (#[_+760], _+762): -4; (#[_+800], #[_+800]): 5; (#[_+800], #[_+801]): -4; (#[_+800], _+801): -2; (#[_+801], #[_+801]): 5; (#[_+801], _+802): -2; (#[_+801], _+803): -4; (_+760, #[_+760]): 4; (_+760, _+760): 2; (_+760, w0): -2; (_+761, _+761): 2; (_+761, _+762): 4; (_+761, w1): -2; (_+762, _+762): 5; (_+762, w2): -2; (_+800, #[_+800]): 4; (_+800, _+800): 2; (_+800, y0): -2; (_+801, #[_+801]): 4; (_+801, _+801): 2; (_+801, y1): -2; (_+802, _+802): 2; (_+802, _+803): 4; (_+802, y2): -2; (_+803, _+803): 5; (_+803, y3): -2; (w0, #[_+800]): -4; (w0, _+800): -2; (w0, w0): 2; (w0, x0): 2; (w1, #[_+800]): 2; (w1, #[_+801]): -4; (w1, _+801): -2; (w1, w1): 2; (w1, x1): 2; (w2, #[_+801]): 2; (w2, _+802): -2; (w2, _+803): -4; (w2, w2): 2; (x0, #[_+760]): -4; (x0, #[_+800]): -4; (x0, _+760): -2; (x0, _+800): -2; (x0, x0): 2; (x1, #[_+760]): 2; (x1, #[_+800]): 2; (x1, #[_+801]): -4; (x1, _+761): -2; (x1, _+762): -4; (x1, _+801): -2; (x1, x1): 2; (y0, y0): 1; (y1, y1): 1; (y2, y2): 1; (y3, y3): 1; (z0, #[_+760]): -4; (z0, _+760): -2; (z0, x0): 2; (z0, z0): 1; (z1, #[_+760]): 2; (z1, _+761): -2; (z1, _+762): -4; (z1, x1): 2; (z1, z1): 1; '

 & finalized Qubo is '(#[_+760], #[_+760]): 5; (#[_+760], _+761): -2; (#[_+760], _+762): -4; (#[_+800], #[_+800]): 5; (#[_+800], #[_+801]): -4; (#[_+800], _+801): -2; (#[_+801], #[_+801]): 5; (#[_+801], _+802): -2; (#[_+801], _+803): -4; (_+760, #[_+760]): 4; (_+760, _+760): 2; (_+760, w0): -2; (_+761, _+761): 2; (_+761, _+762): 4; (_+761, w1): -2; (_+762, _+762): 5; (_+762, w2): -2; (_+800, #[_+800]): 4; (_+800, _+800): 0; (_+801, #[_+801]): 4; (_+801, _+801): 2; (_+802, _+802): 0; (_+802, _+803): 4; (_+803, _+803): 5; (w0, #[_+800]): -4; (w0, _+800): -2; (w0, w0): 2; (w0, x0): 2; (w1, #[_+800]): 2; (w1, #[_+801]): -4; (w1, _+801): -2; (w1, w1): 2; (w1, x1): 2; (w2, #[_+801]): 2; (w2, _+802): -2; (w2, _+803): -4; (w2, w2): 2; (x0, #[_+760]): -4; (x0, #[_+800]): -4; (x0, _+760): -2; (x0, _+800): -2; (x0, x0): 2; (x1, #[_+760]): 2; (x1, #[_+800]): 2; (x1, #[_+801]): -4; (x1, _+761): -2; (x1, _+762): -4; (x1, _+801): -2; (x1, x1): 2; (z0, #[_+760]): -4; (z0, _+760): -2; (z0, x0): 2; (z0, z0): 1; (z1, #[_+760]): 2; (z1, _+761): -2; (z1, _+762): -4; (z1, x1): 2; (z1, z1): 1; '
 resulting in :
 z\2b:1\; w\3b:3\; x\2b:2\ w\3b:3\; y\4b:5\; x\2b:2\
 z\2b:3\; w\3b:4\; x\2b:1\ w\3b:4\; y\4b:5\; x\2b:1\

Multiplication Expression
(x\2q:U\ * y\3q:5\)
 Dann5 virtual code: _*00\S\ = x0\S\ & y0\1\; _*01\S\ = _&62\S\ .+ _&60\0\; _&62\S\ = x1\S\ & y0\1\; _&60\0\ = x0\S\ & y1\0\; _*02\S\ = _&63\0\ + _&61\S\ + #[_*01]\S\; _&63\0\ = x1\S\ & y1\0\; _&61\S\ = x0\S\ & y2\1\; _*03\S\ = _&64\S\ .+ #[_*02]\S\; _&64\S\ = x1\S\ & y2\1\; _*04\S\ = #[_*03]\S\; 
 It's generic Qubo is '(#[_*01], #[_*01]): 5; (#[_*01], #[_*02]): -4; (#[_*01], _*02): -2; (#[_*02], #[_*02]): 5; (#[_*02], _*03): -2; (#[_*02], _*04): -4; (_&60, #[_*01]): -4; (_&60, _&60): 4; (_&60, _*01): -2; (_&61, #[_*01]): 2; (_&61, #[_*02]): -4; (_&61, _&61): 4; (_&61, _*02): -2; (_&62, #[_*01]): -4; (_&62, _&60): 2; (_&62, _&62): 4; (_&62, _*01): -2; (_&63, #[_*01]): 2; (_&63, #[_*02]): -4; (_&63, _&61): 2; (_&63, _&63): 4; (_&63, _*02): -2; (_&64, #[_*02]): 2; (_&64, _&64): 4; (_&64, _*03): -2; (_&64, _*04): -4; (_*00, _*00): 3; (_*01, #[_*01]): 4; (_*01, _*01): 1; (_*02, #[_*02]): 4; (_*02, _*02): 1; (_*03, _*03): 1; (_*03, _*04): 4; (_*04, _*04): 4; (x0, _&60): -2; (x0, _&61): -2; (x0, _*00): -2; (x0, x0): 0; (x0, y0): 1; (x0, y1): 1; (x0, y2): 1; (x1, _&62): -2; (x1, _&63): -2; (x1, _&64): -2; (x1, x1): 0; (x1, y0): 1; (x1, y1): 1; (x1, y2): 1; (y0, _&62): -2; (y0, _*00): -2; (y0, y0): 0; (y1, _&60): -2; (y1, _&63): -2; (y1, y1): 0; (y2, _&61): -2; (y2, _&64): -2; (y2, y2): 0; '

 & finalized Qubo is '(#[_*01], #[_*01]): 5; (#[_*01], #[_*02]): -4; (#[_*01], _*02): -2; (#[_*02], #[_*02]): 5; (#[_*02], _*03): -2; (#[_*02], _*04): -4; (_&61, #[_*01]): 2; (_&61, #[_*02]): -4; (_&61, _&61): 2; (_&61, _*02): -2; (_&62, #[_*01]): -4; (_&62, _&62): 2; (_&62, _*01): -2; (_&64, #[_*02]): 2; (_&64, _&64): 2; (_&64, _*03): -2; (_&64, _*04): -4; (_*00, _*00): 1; (_*01, #[_*01]): 4; (_*01, _*01): 1; (_*02, #[_*02]): 4; (_*02, _*02): 1; (_*03, _*03): 1; (_*03, _*04): 4; (_*04, _*04): 4; (x0, _&61): -2; (x0, _*00): -2; (x0, x0): 2; (x1, _&62): -2; (x1, _&64): -2; (x1, x1): 2; '
 resulting in :
_*0\5b:0\; x\2b:0\; y\3b:5\
_*0\5b:10\; x\2b:2\; y\3b:5\
_*0\5b:5\; x\2b:1\; y\3b:5\
_*0\5b:15\; x\2b:3\; y\3b:5\

Multiplication Expression
(z\1q:U\ * (x\2q:U\ * y\3q:5\))
 Dann5 virtual code: _*10\S\ = z0\S\ & _*00\S\; _*00\S\ = x0\S\ & y0\1\; _*11\S\ = z0\S\ & _*01\S\; _*01\S\ = _&62\S\ .+ _&60\0\; _&62\S\ = x1\S\ & y0\1\; _&60\0\ = x0\S\ & y1\0\; _*12\S\ = z0\S\ & _*02\S\; _*02\S\ = _&63\0\ + _&61\S\ + #[_*01]\S\; _&63\0\ = x1\S\ & y1\0\; _&61\S\ = x0\S\ & y2\1\; _*13\S\ = z0\S\ & _*03\S\; _*03\S\ = _&64\S\ .+ #[_*02]\S\; _&64\S\ = x1\S\ & y2\1\; _*14\S\ = z0\S\ & _*04\S\; ; 
 It's generic Qubo is '(#[_*01], #[_*01]): 5; (#[_*01], #[_*02]): -4; (#[_*01], _*02): -2; (#[_*02], #[_*02]): 5; (#[_*02], _*03): -2; (#[_*02], _*04): -4; (_&60, #[_*01]): -4; (_&60, _&60): 4; (_&60, _*01): -2; (_&61, #[_*01]): 2; (_&61, #[_*02]): -4; (_&61, _&61): 4; (_&61, _*02): -2; (_&62, #[_*01]): -4; (_&62, _&60): 2; (_&62, _&62): 4; (_&62, _*01): -2; (_&63, #[_*01]): 2; (_&63, #[_*02]): -4; (_&63, _&61): 2; (_&63, _&63): 4; (_&63, _*02): -2; (_&64, #[_*02]): 2; (_&64, _&64): 4; (_&64, _*03): -2; (_&64, _*04): -4; (_*00, _*00): 3; (_*00, _*10): -2; (_*01, #[_*01]): 4; (_*01, _*01): 1; (_*01, _*11): -2; (_*02, #[_*02]): 4; (_*02, _*02): 1; (_*02, _*12): -2; (_*03, _*03): 1; (_*03, _*04): 4; (_*03, _*13): -2; (_*04, _*04): 4; (_*04, _*14): -2; (_*10, _*10): 3; (_*11, _*11): 3; (_*12, _*12): 3; (_*13, _*13): 3; (_*14, _*14): 3; (x0, _&60): -2; (x0, _&61): -2; (x0, _*00): -2; (x0, x0): 0; (x0, y0): 1; (x0, y1): 1; (x0, y2): 1; (x1, _&62): -2; (x1, _&63): -2; (x1, _&64): -2; (x1, x1): 0; (x1, y0): 1; (x1, y1): 1; (x1, y2): 1; (y0, _&62): -2; (y0, _*00): -2; (y0, y0): 0; (y1, _&60): -2; (y1, _&63): -2; (y1, y1): 0; (y2, _&61): -2; (y2, _&64): -2; (y2, y2): 0; (z0, _*00): 1; (z0, _*01): 1; (z0, _*02): 1; (z0, _*03): 1; (z0, _*04): 1; (z0, _*10): -2; (z0, _*11): -2; (z0, _*12): -2; (z0, _*13): -2; (z0, _*14): -2; (z0, z0): 0; '

 & finalized Qubo is '(#[_*01], #[_*01]): 5; (#[_*01], #[_*02]): -4; (#[_*01], _*02): -2; (#[_*02], #[_*02]): 5; (#[_*02], _*03): -2; (#[_*02], _*04): -4; (_&61, #[_*01]): 2; (_&61, #[_*02]): -4; (_&61, _&61): 2; (_&61, _*02): -2; (_&62, #[_*01]): -4; (_&62, _&62): 2; (_&62, _*01): -2; (_&64, #[_*02]): 2; (_&64, _&64): 2; (_&64, _*03): -2; (_&64, _*04): -4; (_*00, _*00): 1; (_*00, _*10): -2; (_*01, #[_*01]): 4; (_*01, _*01): 1; (_*01, _*11): -2; (_*02, #[_*02]): 4; (_*02, _*02): 1; (_*02, _*12): -2; (_*03, _*03): 1; (_*03, _*04): 4; (_*03, _*13): -2; (_*04, _*04): 4; (_*04, _*14): -2; (_*10, _*10): 3; (_*11, _*11): 3; (_*12, _*12): 3; (_*13, _*13): 3; (_*14, _*14): 3; (x0, _&61): -2; (x0, _*00): -2; (x0, x0): 2; (x1, _&62): -2; (x1, _&64): -2; (x1, x1): 2; (z0, _*00): 1; (z0, _*01): 1; (z0, _*02): 1; (z0, _*03): 1; (z0, _*04): 1; (z0, _*10): -2; (z0, _*11): -2; (z0, _*12): -2; (z0, _*13): -2; (z0, _*14): -2; (z0, z0): 0; '

 resulting in :
_*1\6b:0\; z\1b:0\; _*0\5b:0\; x\2b:0\; y\3b:5\
_*1\6b:0\; z\1b:1\; _*0\5b:0\; x\2b:0\; y\3b:5\
_*1\6b:0\; z\1b:0\; _*0\5b:10\; x\2b:2\; y\3b:5\
_*1\6b:10\; z\1b:1\; _*0\5b:10\; x\2b:2\; y\3b:5\
_*1\6b:0\; z\1b:0\; _*0\5b:5\; x\2b:1\; y\3b:5\
_*1\6b:5\; z\1b:1\; _*0\5b:5\; x\2b:1\; y\3b:5\
_*1\6b:0\; z\1b:0\; _*0\5b:15\; x\2b:3\; y\3b:5\
_*1\6b:15\; z\1b:1\; _*0\5b:15\; x\2b:3\; y\3b:5\

Multiplication Expression
((x\2q:U\ * y\3q:5\) * z\1q:U\)
 Dann5 virtual code: _*20\S\ = _*00\S\ & z0\S\; _*00\S\ = x0\S\ & y0\1\; _*21\S\ = _*01\S\ & z0\S\; _*01\S\ = _&62\S\ .+ _&60\0\; _&62\S\ = x1\S\ & y0\1\; _&60\0\ = x0\S\ & y1\0\; _*22\S\ = _*02\S\ & z0\S\; _*02\S\ = _&63\0\ + _&61\S\ + #[_*01]\S\; _&63\0\ = x1\S\ & y1\0\; _&61\S\ = x0\S\ & y2\1\; _*23\S\ = _*03\S\ & z0\S\; _*03\S\ = _&64\S\ .+ #[_*02]\S\; _&64\S\ = x1\S\ & y2\1\; _*24\S\ = _*04\S\ & z0\S\; ; 
 It's generic Qubo is '(#[_*01], #[_*01]): 5; (#[_*01], #[_*02]): -4; (#[_*01], _*02): -2; (#[_*02], #[_*02]): 5; (#[_*02], _*03): -2; (#[_*02], _*04): -4; (_&60, #[_*01]): -4; (_&60, _&60): 4; (_&60, _*01): -2; (_&61, #[_*01]): 2; (_&61, #[_*02]): -4; (_&61, _&61): 4; (_&61, _*02): -2; (_&62, #[_*01]): -4; (_&62, _&60): 2; (_&62, _&62): 4; (_&62, _*01): -2; (_&63, #[_*01]): 2; (_&63, #[_*02]): -4; (_&63, _&61): 2; (_&63, _&63): 4; (_&63, _*02): -2; (_&64, #[_*02]): 2; (_&64, _&64): 4; (_&64, _*03): -2; (_&64, _*04): -4; (_*00, _*00): 3; (_*00, _*20): -2; (_*00, z0): 1; (_*01, #[_*01]): 4; (_*01, _*01): 1; (_*01, _*21): -2; (_*01, z0): 1; (_*02, #[_*02]): 4; (_*02, _*02): 1; (_*02, _*22): -2; (_*02, z0): 1; (_*03, _*03): 1; (_*03, _*04): 4; (_*03, _*23): -2; (_*03, z0): 1; (_*04, _*04): 4; (_*04, _*24): -2; (_*04, z0): 1; (_*20, _*20): 3; (_*21, _*21): 3; (_*22, _*22): 3; (_*23, _*23): 3; (_*24, _*24): 3; (x0, _&60): -2; (x0, _&61): -2; (x0, _*00): -2; (x0, x0): 0; (x0, y0): 1; (x0, y1): 1; (x0, y2): 1; (x1, _&62): -2; (x1, _&63): -2; (x1, _&64): -2; (x1, x1): 0; (x1, y0): 1; (x1, y1): 1; (x1, y2): 1; (y0, _&62): -2; (y0, _*00): -2; (y0, y0): 0; (y1, _&60): -2; (y1, _&63): -2; (y1, y1): 0; (y2, _&61): -2; (y2, _&64): -2; (y2, y2): 0; (z0, _*20): -2; (z0, _*21): -2; (z0, _*22): -2; (z0, _*23): -2; (z0, _*24): -2; (z0, z0): 0; '

 & finalized Qubo is '(#[_*01], #[_*01]): 5; (#[_*01], #[_*02]): -4; (#[_*01], _*02): -2; (#[_*02], #[_*02]): 5; (#[_*02], _*03): -2; (#[_*02], _*04): -4; (_&61, #[_*01]): 2; (_&61, #[_*02]): -4; (_&61, _&61): 2; (_&61, _*02): -2; (_&62, #[_*01]): -4; (_&62, _&62): 2; (_&62, _*01): -2; (_&64, #[_*02]): 2; (_&64, _&64): 2; (_&64, _*03): -2; (_&64, _*04): -4; (_*00, _*00): 1; (_*00, _*20): -2; (_*00, z0): 1; (_*01, #[_*01]): 4; (_*01, _*01): 1; (_*01, _*21): -2; (_*01, z0): 1; (_*02, #[_*02]): 4; (_*02, _*02): 1; (_*02, _*22): -2; (_*02, z0): 1; (_*03, _*03): 1; (_*03, _*04): 4; (_*03, _*23): -2; (_*03, z0): 1; (_*04, _*04): 4; (_*04, _*24): -2; (_*04, z0): 1; (_*20, _*20): 3; (_*21, _*21): 3; (_*22, _*22): 3; (_*23, _*23): 3; (_*24, _*24): 3; (x0, _&61): -2; (x0, _*00): -2; (x0, x0): 2; (x1, _&62): -2; (x1, _&64): -2; (x1, x1): 2; (z0, _*20): -2; (z0, _*21): -2; (z0, _*22): -2; (z0, _*23): -2; (z0, _*24): -2; (z0, z0): 0; '

 resulting in :
_*2\6b:0\; _*0\5b:0\; x\2b:0\; y\3b:5\; z\1b:0\
_*2\6b:0\; _*0\5b:0\; x\2b:0\; y\3b:5\; z\1b:1\
_*2\6b:0\; _*0\5b:10\; x\2b:2\; y\3b:5\; z\1b:0\
_*2\6b:10\; _*0\5b:10\; x\2b:2\; y\3b:5\; z\1b:1\
_*2\6b:0\; _*0\5b:5\; x\2b:1\; y\3b:5\; z\1b:0\
_*2\6b:5\; _*0\5b:5\; x\2b:1\; y\3b:5\; z\1b:1\
_*2\6b:0\; _*0\5b:15\; x\2b:3\; y\3b:5\; z\1b:0\
_*2\6b:15\; _*0\5b:15\; x\2b:3\; y\3b:5\; z\1b:1\

Multiplication Expression
((x\2q:U\ * y\3q:5\) * (_3\2q:3\ * z\1q:U\))
 Dann5 virtual code: _*50\S\ = _*30\S\ & _*40\S\; _*30\S\ = x0\S\ & y0\1\; _*40\S\ = _30\1\ & z0\S\; _*51\S\ = _&86\S\ .+ _&84\S\; _&86\S\ = _*31\S\ & _*40\S\; _*31\S\ = _&78\S\ .+ _&76\0\; _&78\S\ = x1\S\ & y0\1\; _&76\0\ = x0\S\ & y1\0\; _*40\S\ = _30\1\ & z0\S\; _&84\S\ = _*30\S\ & _*41\S\; _*30\S\ = x0\S\ & y0\1\; _*41\S\ = _31\1\ & z0\S\; _*52\S\ = _+86\S\ .+ #[_*51]\S\; _+86\S\ = _&89\S\ + _&87\S\ + _&85\0\; _&89\S\ = _*32\S\ & _*40\S\; _*32\S\ = _&79\0\ + _&77\S\ + #[_*31]\S\; _&79\0\ = x1\S\ & y1\0\; _&77\S\ = x0\S\ & y2\1\; _*40\S\ = _30\1\ & z0\S\; _&87\S\ = _*31\S\ & _*41\S\; _*31\S\ = _&78\S\ .+ _&76\0\; _&78\S\ = x1\S\ & y0\1\; _&76\0\ = x0\S\ & y1\0\; _*41\S\ = _31\1\ & z0\S\; _&85\0\ = _*30\S\ & _*42\0\; _*30\S\ = x0\S\ & y0\1\; ; _*53\S\ = _+87\S\ + #[_*52]\S\ + #[_+86]\S\; _+87\S\ = _&92\S\ + _&90\S\ + _&88\0\; _&92\S\ = _*33\S\ & _*40\S\; _*33\S\ = _&80\S\ .+ #[_*32]\S\; _&80\S\ = x1\S\ & y2\1\; _*40\S\ = _30\1\ & z0\S\; _&90\S\ = _*32\S\ & _*41\S\; _*32\S\ = _&79\0\ + _&77\S\ + #[_*31]\S\; _&79\0\ = x1\S\ & y1\0\; _&77\S\ = x0\S\ & y2\1\; _*41\S\ = _31\1\ & z0\S\; _&88\0\ = _*31\S\ & _*42\0\; _*31\S\ = _&78\S\ .+ _&76\0\; _&78\S\ = x1\S\ & y0\1\; _&76\0\ = x0\S\ & y1\0\; ; _*54\S\ = _+89\S\ + #[_*53]\S\ + #[_+87]\S\; _+89\S\ = _&95\S\ + _&93\S\ + _&91\0\; _&95\S\ = _*34\S\ & _*40\S\; _*40\S\ = _30\1\ & z0\S\; _&93\S\ = _*33\S\ & _*41\S\; _*33\S\ = _&80\S\ .+ #[_*32]\S\; _&80\S\ = x1\S\ & y2\1\; _*41\S\ = _31\1\ & z0\S\; _&91\0\ = _*32\S\ & _*42\0\; _*32\S\ = _&79\0\ + _&77\S\ + #[_*31]\S\; _&79\0\ = x1\S\ & y1\0\; _&77\S\ = x0\S\ & y2\1\; ; _*55\S\ = _+91\S\ .+ #[_+89]\S\; _+91\S\ = _&96\S\ + _&94\0\ + #[_*54]\S\; _&96\S\ = _*34\S\ & _*41\S\; _*41\S\ = _31\1\ & z0\S\; _&94\0\ = _*33\S\ & _*42\0\; _*33\S\ = _&80\S\ .+ #[_*32]\S\; _&80\S\ = x1\S\ & y2\1\; ; _*56\S\ = _&97\0\ + #[_*55]\S\ + #[_+91]\S\; _&97\0\ = _*34\S\ & _*42\0\; _*57\S\ = #[_*56]\S\; 
 It's generic Qubo is '(#[_*31], #[_*31]): 15; (#[_*31], #[_*32]): -12; (#[_*31], _*32): -6; (#[_*32], #[_*32]): 15; (#[_*32], _*33): -6; (#[_*32], _*34): -12; (#[_*51], #[_*51]): 5; (#[_*51], #[_*52]): -4; (#[_*51], _*52): -2; (#[_*52], #[_*52]): 5; (#[_*52], #[_*53]): -4; (#[_*52], #[_+86]): 2; (#[_*52], _*53): -2; (#[_*53], #[_*53]): 5; (#[_*53], #[_*54]): -4; (#[_*53], #[_+87]): 2; (#[_*53], _*54): -2; (#[_*54], #[_*54]): 5; (#[_*54], #[_+91]): -4; (#[_*54], _+91): -2; (#[_*55], #[_*55]): 5; (#[_*55], #[_+91]): 2; (#[_*55], _*56): -2; (#[_*55], _*57): -4; (#[_+86], #[_*53]): -4; (#[_+86], #[_+86]): 5; (#[_+86], _*53): -2; (#[_+87], #[_*54]): -4; (#[_+87], #[_+87]): 5; (#[_+87], _*54): -2; (#[_+89], #[_*55]): -4; (#[_+89], #[_+89]): 5; (#[_+89], _*55): -2; (#[_+91], #[_+91]): 5; (#[_+91], _*56): -2; (#[_+91], _*57): -4; (_&76, #[_*31]): -12; (_&76, _&76): 12; (_&76, _*31): -6; (_&77, #[_*31]): 6; (_&77, #[_*32]): -12; (_&77, _&77): 12; (_&77, _*32): -6; (_&78, #[_*31]): -12; (_&78, _&76): 6; (_&78, _&78): 12; (_&78, _*31): -6; (_&79, #[_*31]): 6; (_&79, #[_*32]): -12; (_&79, _&77): 6; (_&79, _&79): 12; (_&79, _*32): -6; (_&80, #[_*32]): 6; (_&80, _&80): 12; (_&80, _*33): -6; (_&80, _*34): -12; (_&84, #[_*51]): -4; (_&84, _&84): 4; (_&84, _*51): -2; (_&85, #[_+86]): -4; (_&85, _&85): 4; (_&85, _+86): -2; (_&86, #[_*51]): -4; (_&86, _&84): 2; (_&86, _&86): 4; (_&86, _*51): -2; (_&87, #[_+86]): -4; (_&87, _&85): 2; (_&87, _&87): 4; (_&87, _+86): -2; (_&88, #[_+87]): -4; (_&88, _&88): 4; (_&88, _+87): -2; (_&89, #[_+86]): -4; (_&89, _&85): 2; (_&89, _&87): 2; (_&89, _&89): 4; (_&89, _+86): -2; (_&90, #[_+87]): -4; (_&90, _&88): 2; (_&90, _&90): 4; (_&90, _+87): -2; (_&91, #[_+89]): -4; (_&91, _&91): 4; (_&91, _+89): -2; (_&92, #[_+87]): -4; (_&92, _&88): 2; (_&92, _&90): 2; (_&92, _&92): 4; (_&92, _+87): -2; (_&93, #[_+89]): -4; (_&93, _&91): 2; (_&93, _&93): 4; (_&93, _+89): -2; (_&94, #[_*54]): 2; (_&94, #[_+91]): -4; (_&94, _&94): 4; (_&94, _+91): -2; (_&95, #[_+89]): -4; (_&95, _&91): 2; (_&95, _&93): 2; (_&95, _&95): 4; (_&95, _+89): -2; (_&96, #[_*54]): 2; (_&96, #[_+91]): -4; (_&96, _&94): 2; (_&96, _&96): 4; (_&96, _+91): -2; (_&97, #[_*55]): 2; (_&97, #[_+91]): 2; (_&97, _&97): 4; (_&97, _*56): -2; (_&97, _*57): -4; (_*30, _&84): -2; (_*30, _&85): -2; (_*30, _*30): 9; (_*30, _*40): 1; (_*30, _*41): 1; (_*30, _*42): 1; (_*30, _*50): -2; (_*31, #[_*31]): 12; (_*31, _&86): -2; (_*31, _&87): -2; (_*31, _&88): -2; (_*31, _*31): 3; (_*31, _*40): 1; (_*31, _*41): 1; (_*31, _*42): 1; (_*32, #[_*32]): 12; (_*32, _&89): -2; (_*32, _&90): -2; (_*32, _&91): -2; (_*32, _*32): 3; (_*32, _*40): 1; (_*32, _*41): 1; (_*32, _*42): 1; (_*33, _&92): -2; (_*33, _&93): -2; (_*33, _&94): -2; (_*33, _*33): 3; (_*33, _*34): 12; (_*33, _*40): 1; (_*33, _*41): 1; (_*33, _*42): 1; (_*34, _&95): -2; (_*34, _&96): -2; (_*34, _&97): -2; (_*34, _*34): 12; (_*34, _*40): 1; (_*34, _*41): 1; (_*34, _*42): 1; (_*40, _&86): -2; (_*40, _&89): -2; (_*40, _&92): -2; (_*40, _&95): -2; (_*40, _*40): 15; (_*40, _*50): -2; (_*41, _&84): -2; (_*41, _&87): -2; (_*41, _&90): -2; (_*41, _&93): -2; (_*41, _&96): -2; (_*41, _*41): 15; (_*42, _&85): -2; (_*42, _&88): -2; (_*42, _&91): -2; (_*42, _&94): -2; (_*42, _&97): -2; (_*42, _*42): 0; (_*50, _*50): 3; (_*51, #[_*51]): 4; (_*51, _*51): 1; (_*52, #[_*52]): 4; (_*52, _*52): 1; (_*53, #[_*53]): 4; (_*53, _*53): 1; (_*54, #[_*54]): 4; (_*54, _*54): 1; (_*55, #[_*55]): 4; (_*55, _*55): 1; (_*56, _*56): 1; (_*56, _*57): 4; (_*57, _*57): 4; (_+86, #[_*51]): 2; (_+86, #[_*52]): -4; (_+86, #[_+86]): 4; (_+86, _*52): -2; (_+86, _+86): 2; (_+87, #[_*52]): 2; (_+87, #[_*53]): -4; (_+87, #[_+86]): 2; (_+87, #[_+87]): 4; (_+87, _*53): -2; (_+87, _+87): 2; (_+89, #[_*53]): 2; (_+89, #[_*54]): -4; (_+89, #[_+87]): 2; (_+89, #[_+89]): 4; (_+89, _*54): -2; (_+89, _+89): 2; (_+91, #[_*55]): -4; (_+91, #[_+89]): 2; (_+91, #[_+91]): 4; (_+91, _*55): -2; (_+91, _+91): 2; (_30, _*40): -10; (_30, _30): 0; (_30, z0): 5; (_31, _*41): -10; (_31, _31): 0; (_31, z0): 5; (x0, _&76): -6; (x0, _&77): -6; (x0, _*30): -6; (x0, x0): 0; (x0, y0): 3; (x0, y1): 3; (x0, y2): 3; (x1, _&78): -6; (x1, _&79): -6; (x1, _&80): -6; (x1, x1): 0; (x1, y0): 3; (x1, y1): 3; (x1, y2): 3; (y0, _&78): -6; (y0, _*30): -6; (y0, y0): 0; (y1, _&76): -6; (y1, _&79): -6; (y1, y1): 0; (y2, _&77): -6; (y2, _&80): -6; (y2, y2): 0; (z0, _*40): -10; (z0, _*41): -10; (z0, z0): 0; '

 & finalized Qubo is '(#[_*31], #[_*31]): 15; (#[_*31], #[_*32]): -12; (#[_*31], _*32): -6; (#[_*32], #[_*32]): 15; (#[_*32], _*33): -6; (#[_*32], _*34): -12; (#[_*51], #[_*51]): 5; (#[_*51], #[_*52]): -4; (#[_*51], _*52): -2; (#[_*52], #[_*52]): 5; (#[_*52], #[_*53]): -4; (#[_*52], #[_+86]): 2; (#[_*52], _*53): -2; (#[_*53], #[_*53]): 5; (#[_*53], #[_*54]): -4; (#[_*53], #[_+87]): 2; (#[_*53], _*54): -2; (#[_*54], #[_*54]): 5; (#[_*54], #[_+91]): -4; (#[_*54], _+91): -2; (#[_*55], #[_*55]): 5; (#[_*55], #[_+91]): 2; (#[_*55], _*56): -2; (#[_*55], _*57): -4; (#[_+86], #[_*53]): -4; (#[_+86], #[_+86]): 5; (#[_+86], _*53): -2; (#[_+87], #[_*54]): -4; (#[_+87], #[_+87]): 5; (#[_+87], _*54): -2; (#[_+89], #[_*55]): -4; (#[_+89], #[_+89]): 5; (#[_+89], _*55): -2; (#[_+91], #[_+91]): 5; (#[_+91], _*56): -2; (#[_+91], _*57): -4; (_&77, #[_*31]): 6; (_&77, #[_*32]): -12; (_&77, _&77): 6; (_&77, _*32): -6; (_&78, #[_*31]): -12; (_&78, _&78): 6; (_&78, _*31): -6; (_&80, #[_*32]): 6; (_&80, _&80): 6; (_&80, _*33): -6; (_&80, _*34): -12; (_&84, #[_*51]): -4; (_&84, _&84): 4; (_&84, _*51): -2; (_&86, #[_*51]): -4; (_&86, _&84): 2; (_&86, _&86): 4; (_&86, _*51): -2; (_&87, #[_+86]): -4; (_&87, _&87): 4; (_&87, _+86): -2; (_&89, #[_+86]): -4; (_&89, _&87): 2; (_&89, _&89): 4; (_&89, _+86): -2; (_&90, #[_+87]): -4; (_&90, _&90): 4; (_&90, _+87): -2; (_&92, #[_+87]): -4; (_&92, _&90): 2; (_&92, _&92): 4; (_&92, _+87): -2; (_&93, #[_+89]): -4; (_&93, _&93): 4; (_&93, _+89): -2; (_&95, #[_+89]): -4; (_&95, _&93): 2; (_&95, _&95): 4; (_&95, _+89): -2; (_&96, #[_*54]): 2; (_&96, #[_+91]): -4; (_&96, _&96): 4; (_&96, _+91): -2; (_*30, _&84): -2; (_*30, _*30): 3; (_*30, _*40): 1; (_*30, _*41): 1; (_*30, _*50): -2; (_*31, #[_*31]): 12; (_*31, _&86): -2; (_*31, _&87): -2; (_*31, _*31): 3; (_*31, _*40): 1; (_*31, _*41): 1; (_*32, #[_*32]): 12; (_*32, _&89): -2; (_*32, _&90): -2; (_*32, _*32): 3; (_*32, _*40): 1; (_*32, _*41): 1; (_*33, _&92): -2; (_*33, _&93): -2; (_*33, _*33): 3; (_*33, _*34): 12; (_*33, _*40): 1; (_*33, _*41): 1; (_*34, _&95): -2; (_*34, _&96): -2; (_*34, _*34): 12; (_*34, _*40): 1; (_*34, _*41): 1; (_*40, _&86): -2; (_*40, _&89): -2; (_*40, _&92): -2; (_*40, _&95): -2; (_*40, _*40): 5; (_*40, _*50): -2; (_*41, _&84): -2; (_*41, _&87): -2; (_*41, _&90): -2; (_*41, _&93): -2; (_*41, _&96): -2; (_*41, _*41): 5; (_*50, _*50): 3; (_*51, #[_*51]): 4; (_*51, _*51): 1; (_*52, #[_*52]): 4; (_*52, _*52): 1; (_*53, #[_*53]): 4; (_*53, _*53): 1; (_*54, #[_*54]): 4; (_*54, _*54): 1; (_*55, #[_*55]): 4; (_*55, _*55): 1; (_*56, _*56): 1; (_*56, _*57): 4; (_*57, _*57): 4; (_+86, #[_*51]): 2; (_+86, #[_*52]): -4; (_+86, #[_+86]): 4; (_+86, _*52): -2; (_+86, _+86): 2; (_+87, #[_*52]): 2; (_+87, #[_*53]): -4; (_+87, #[_+86]): 2; (_+87, #[_+87]): 4; (_+87, _*53): -2; (_+87, _+87): 2; (_+89, #[_*53]): 2; (_+89, #[_*54]): -4; (_+89, #[_+87]): 2; (_+89, #[_+89]): 4; (_+89, _*54): -2; (_+89, _+89): 2; (_+91, #[_*55]): -4; (_+91, #[_+89]): 2; (_+91, #[_+91]): 4; (_+91, _*55): -2; (_+91, _+91): 2; (x0, _&77): -6; (x0, _*30): -6; (x0, x0): 6; (x1, _&78): -6; (x1, _&80): -6; (x1, x1): 6; (z0, _*40): -10; (z0, _*41): -10; (z0, z0): 10; '

 # of nodes: 45 # of branches: 119

Division Expression
(d\4q:3\ / x\2q:U\)
 Dann5 virtual code: d0\1\ == _*60\S\; _*60\S\ = _/00\S\ & x0\S\; d1\1\ == _*61\S\; _*61\S\ = _&104\S\ .+ _&103\S\; _&104\S\ = _/01\S\ & x0\S\; _&103\S\ = _/00\S\ & x1\S\; 
 It's generic Qubo is '(#[_*61], #[_*61]): 5; (#[_*61], _*62): -2; (#[_*61], _*63): -4; (_&103, #[_*61]): -4; (_&103, _&103): 4; (_&103, _*61): -2; (_&104, #[_*61]): -4; (_&104, _&103): 2; (_&104, _&104): 4; (_&104, _*61): -2; (_&105, #[_*61]): 2; (_&105, _&105): 4; (_&105, _*62): -2; (_&105, _*63): -4; (_*60, _*60): 4; (_*60, d0): -2; (_*61, #[_*61]): 4; (_*61, _*61): 2; (_*61, d1): -2; (_*62, _*62): 2; (_*62, _*63): 4; (_*62, d2): -2; (_*63, _*63): 5; (_*63, d3): -2; (_/00, _&103): -2; (_/00, _*60): -2; (_/00, _/00): 0; (_/00, x0): 1; (_/00, x1): 1; (_/01, _&104): -2; (_/01, _&105): -2; (_/01, _/01): 0; (_/01, x0): 1; (_/01, x1): 1; (d0, d0): 1; (d1, d1): 1; (d2, d2): 1; (d3, d3): 1; (x0, _&104): -2; (x0, _*60): -2; (x0, x0): 0; (x1, _&103): -2; (x1, _&105): -2; (x1, x1): 0; '

 & finalized Qubo is '(#[_*61], #[_*61]): 5; (#[_*61], _*62): -2; (#[_*61], _*63): -4; (_&103, #[_*61]): -4; (_&103, _&103): 4; (_&103, _*61): -2; (_&104, #[_*61]): -4; (_&104, _&103): 2; (_&104, _&104): 4; (_&104, _*61): -2; (_&105, #[_*61]): 2; (_&105, _&105): 4; (_&105, _*62): -2; (_&105, _*63): -4; (_*60, _*60): 2; (_*61, #[_*61]): 4; (_*61, _*61): 0; (_*62, _*62): 2; (_*62, _*63): 4; (_*63, _*63): 5; (_/00, _&103): -2; (_/00, _*60): -2; (_/00, _/00): 0; (_/00, x0): 1; (_/00, x1): 1; (_/01, _&104): -2; (_/01, _&105): -2; (_/01, _/01): 0; (_/01, x0): 1; (_/01, x1): 1; (x0, _&104): -2; (x0, _*60): -2; (x0, x0): 0; (x1, _&103): -2; (x1, _&105): -2; (x1, x1): 0; '

 # of nodes: 12 # of branches: 24

 resulting in :
_/0\2b:3\; d\4b:3\; x\2b:1\
_/0\2b:1\; d\4b:3\; x\2b:3\

Division Expression
{
	(d\4q:3\ / x\2q:U\);
	(x\3q:U\ != _0\3q:0\);
}
 Dann5 virtual code:  d0\1\ == _*60\S\; _*60\S\ = _/00\S\ & x0\S\; d1\1\ == _*61\S\; _*61\S\ = _&104\S\ .+ _&103\S\; _&104\S\ = _/01\S\ & x0\S\; _&103\S\ = _/00\S\ & x1\S\; ; { x0\S\ = _!=140\S\ .+ _00\0\; _1\1\ = _!=141\S\ | _!=140\S\; }; { x1\S\ = _!=141\S\ .+ #[x0]\S\; }; { x2\S\ = #[x1]\S\; }; 
 It's generic Qubo is '(#[_*61], #[_*61]): 5; (#[_*61], _*62): -2; (#[_*61], _*63): -4; (#[x0], #[x0]): 5; (#[x0], x1): -2; (#[x0], x2): -4; (_!=140, #[x0]): -4; (_!=140, _!=140): 2; (_!=140, _00): 2; (_!=140, _1): -2; (_!=140, x0): -2; (_!=141, #[x0]): 2; (_!=141, _!=140): 1; (_!=141, _!=141): 2; (_!=141, _1): -2; (_!=141, x1): -2; (_!=141, x2): -4; (_&103, #[_*61]): -4; (_&103, _&103): 4; (_&103, _*61): -2; (_&104, #[_*61]): -4; (_&104, _&103): 2; (_&104, _&104): 4; (_&104, _*61): -2; (_&105, #[_*61]): 2; (_&105, _&105): 4; (_&105, _*62): -2; (_&105, _*63): -4; (_*60, _*60): 4; (_*60, d0): -2; (_*61, #[_*61]): 4; (_*61, _*61): 2; (_*61, d1): -2; (_*62, _*62): 2; (_*62, _*63): 4; (_*62, d2): -2; (_*63, _*63): 5; (_*63, d3): -2; (_/00, _&103): -2; (_/00, _*60): -2; (_/00, _/00): 0; (_/00, x0): 1; (_/00, x1): 1; (_/01, _&104): -2; (_/01, _&105): -2; (_/01, _/01): 0; (_/01, x0): 1; (_/01, x1): 1; (_00, #[x0]): -4; (_00, _00): 1; (_00, x0): -2; (_1, _1): 1; (d0, d0): 1; (d1, d1): 1; (d2, d2): 1; (d3, d3): 1; (x0, #[x0]): 4; (x0, _&104): -2; (x0, _*60): -2; (x0, x0): 1; (x1, _&103): -2; (x1, _&105): -2; (x1, x1): 1; (x1, x2): 4; (x2, x2): 4; '

 & finalized Qubo is '(#[_*61], #[_*61]): 5; (#[_*61], _*62): -2; (#[_*61], _*63): -4; (#[x0], #[x0]): 5; (#[x0], x1): -2; (#[x0], x2): -4; (_!=140, #[x0]): -4; (_!=140, _!=140): 0; (_!=140, x0): -2; (_!=141, #[x0]): 2; (_!=141, _!=140): 1; (_!=141, _!=141): 0; (_!=141, x1): -2; (_!=141, x2): -4; (_&103, #[_*61]): -4; (_&103, _&103): 4; (_&103, _*61): -2; (_&104, #[_*61]): -4; (_&104, _&103): 2; (_&104, _&104): 4; (_&104, _*61): -2; (_&105, #[_*61]): 2; (_&105, _&105): 4; (_&105, _*62): -2; (_&105, _*63): -4; (_*60, _*60): 2; (_*61, #[_*61]): 4; (_*61, _*61): 0; (_*62, _*62): 2; (_*62, _*63): 4; (_*63, _*63): 5; (_/00, _&103): -2; (_/00, _*60): -2; (_/00, _/00): 0; (_/00, x0): 1; (_/00, x1): 1; (_/01, _&104): -2; (_/01, _&105): -2; (_/01, _/01): 0; (_/01, x0): 1; (_/01, x1): 1; (x0, #[x0]): 4; (x0, _&104): -2; (x0, _*60): -2; (x0, x0): 1; (x1, _&103): -2; (x1, _&105): -2; (x1, x1): 1; (x1, x2): 4; (x2, x2): 4; '

 # of nodes: 16 # of branches: 34

 resulting in :
 _/0\2b:3\; d\4b:3\; x\2b:1\ x\2b:1\ _0\1b:0\ 
 _/0\2b:1\; d\4b:3\; x\2b:3\ x\2b:3\ _0\1b:0\ 

Division Expression
(y\6q:5\ / (x\2q:U\ + z\1q:U\))
 Dann5 virtual code: y0\1\ == _*70\S\; _*70\S\ = _/10\S\ & _+940\S\; _+940\S\ = x0\S\ .+ z0\S\; y1\0\ == _*71\S\; _*71\S\ = _&118\S\ .+ _&116\S\; _&118\S\ = _/11\S\ & _+940\S\; _+940\S\ = x0\S\ .+ z0\S\; _&116\S\ = _/10\S\ & _+941\S\; _+941\S\ = x1\S\ .+ #[_+940]\S\; y2\1\ == _*72\S\; _*72\S\ = _+98\S\ .+ #[_*71]\S\; _+98\S\ = _&121\S\ + _&119\S\ + _&117\S\; _&121\S\ = _/12\S\ & _+940\S\; _+940\S\ = x0\S\ .+ z0\S\; _&119\S\ = _/11\S\ & _+941\S\; _+941\S\ = x1\S\ .+ #[_+940]\S\; _&117\S\ = _/10\S\ & _+942\S\; 
 It's generic Qubo is '(#[_*71], #[_*71]): 5; (#[_*71], #[_*72]): -4; (#[_*71], _*72): -2; (#[_*72], #[_*72]): 5; (#[_*72], #[_+99]): -4; (#[_*72], _+99): -2; (#[_*73], #[_*73]): 5; (#[_*73], #[_+99]): 2; (#[_*73], _*74): -2; (#[_*73], _*75): -4; (#[_+940], #[_+940]): 15; (#[_+940], _+941): -6; (#[_+940], _+942): -12; (#[_+98], #[_*73]): -4; (#[_+98], #[_+98]): 5; (#[_+98], _*73): -2; (#[_+99], #[_+99]): 5; (#[_+99], _*74): -2; (#[_+99], _*75): -4; (_&116, #[_*71]): -4; (_&116, _&116): 4; (_&116, _*71): -2; (_&117, #[_+98]): -4; (_&117, _&117): 4; (_&117, _+98): -2; (_&118, #[_*71]): -4; (_&118, _&116): 2; (_&118, _&118): 4; (_&118, _*71): -2; (_&119, #[_+98]): -4; (_&119, _&117): 2; (_&119, _&119): 4; (_&119, _+98): -2; (_&120, #[_*72]): 2; (_&120, #[_+99]): -4; (_&120, _&120): 4; (_&120, _+99): -2; (_&121, #[_+98]): -4; (_&121, _&117): 2; (_&121, _&119): 2; (_&121, _&121): 4; (_&121, _+98): -2; (_&122, #[_*72]): 2; (_&122, #[_+99]): -4; (_&122, _&120): 2; (_&122, _&122): 4; (_&122, _+99): -2; (_&123, #[_*73]): 2; (_&123, #[_+99]): 2; (_&123, _&123): 4; (_&123, _*74): -2; (_&123, _*75): -4; (_*70, _*70): 4; (_*70, y0): -2; (_*71, #[_*71]): 4; (_*71, _*71): 2; (_*71, y1): -2; (_*72, #[_*72]): 4; (_*72, _*72): 2; (_*72, y2): -2; (_*73, #[_*73]): 4; (_*73, _*73): 2; (_*73, y3): -2; (_*74, _*74): 2; (_*74, _*75): 4; (_*74, y4): -2; (_*75, _*75): 5; (_*75, y5): -2; (_+940, #[_+940]): 12; (_+940, _&118): -2; (_+940, _&121): -2; (_+940, _*70): -2; (_+940, _+940): 3; (_+941, _&116): -2; (_+941, _&119): -2; (_+941, _&122): -2; (_+941, _+941): 3; (_+941, _+942): 12; (_+942, _&117): -2; (_+942, _&120): -2; (_+942, _&123): -2; (_+942, _+942): 12; (_+98, #[_*71]): 2; (_+98, #[_*72]): -4; (_+98, #[_+98]): 4; (_+98, _*72): -2; (_+98, _+98): 2; (_+99, #[_*73]): -4; (_+99, #[_+98]): 2; (_+99, #[_+99]): 4; (_+99, _*73): -2; (_+99, _+99): 2; (_/10, _&116): -2; (_/10, _&117): -2; (_/10, _*70): -2; (_/10, _+940): 1; (_/10, _+941): 1; (_/10, _+942): 1; (_/10, _/10): 0; (_/11, _&118): -2; (_/11, _&119): -2; (_/11, _&120): -2; (_/11, _+940): 1; (_/11, _+941): 1; (_/11, _+942): 1; (_/11, _/11): 0; (_/12, _&121): -2; (_/12, _&122): -2; (_/12, _&123): -2; (_/12, _+940): 1; (_/12, _+941): 1; (_/12, _+942): 1; (_/12, _/12): 0; (x0, #[_+940]): -12; (x0, _+940): -6; (x0, x0): 3; (x0, z0): 6; (x1, #[_+940]): 6; (x1, _+941): -6; (x1, _+942): -12; (x1, x1): 3; (y0, y0): 1; (y1, y1): 1; (y2, y2): 1; (y3, y3): 1; (y4, y4): 1; (y5, y5): 1; (z0, #[_+940]): -12; (z0, _+940): -6; (z0, z0): 3; '

 & finalized Qubo is '(#[_*71], #[_*71]): 5; (#[_*71], #[_*72]): -4; (#[_*71], _*72): -2; (#[_*72], #[_*72]): 5; (#[_*72], #[_+99]): -4; (#[_*72], _+99): -2; (#[_*73], #[_*73]): 5; (#[_*73], #[_+99]): 2; (#[_*73], _*74): -2; (#[_*73], _*75): -4; (#[_+940], #[_+940]): 15; (#[_+940], _+941): -6; (#[_+940], _+942): -12; (#[_+98], #[_*73]): -4; (#[_+98], #[_+98]): 5; (#[_+98], _*73): -2; (#[_+99], #[_+99]): 5; (#[_+99], _*74): -2; (#[_+99], _*75): -4; (_&116, #[_*71]): -4; (_&116, _&116): 4; (_&116, _*71): -2; (_&117, #[_+98]): -4; (_&117, _&117): 4; (_&117, _+98): -2; (_&118, #[_*71]): -4; (_&118, _&116): 2; (_&118, _&118): 4; (_&118, _*71): -2; (_&119, #[_+98]): -4; (_&119, _&117): 2; (_&119, _&119): 4; (_&119, _+98): -2; (_&120, #[_*72]): 2; (_&120, #[_+99]): -4; (_&120, _&120): 4; (_&120, _+99): -2; (_&121, #[_+98]): -4; (_&121, _&117): 2; (_&121, _&119): 2; (_&121, _&121): 4; (_&121, _+98): -2; (_&122, #[_*72]): 2; (_&122, #[_+99]): -4; (_&122, _&120): 2; (_&122, _&122): 4; (_&122, _+99): -2; (_&123, #[_*73]): 2; (_&123, #[_+99]): 2; (_&123, _&123): 4; (_&123, _*74): -2; (_&123, _*75): -4; (_*70, _*70): 2; (_*71, #[_*71]): 4; (_*71, _*71): 2; (_*72, #[_*72]): 4; (_*72, _*72): 0; (_*73, #[_*73]): 4; (_*73, _*73): 2; (_*74, _*74): 2; (_*74, _*75): 4; (_*75, _*75): 5; (_+940, #[_+940]): 12; (_+940, _&118): -2; (_+940, _&121): -2; (_+940, _*70): -2; (_+940, _+940): 3; (_+941, _&116): -2; (_+941, _&119): -2; (_+941, _&122): -2; (_+941, _+941): 3; (_+941, _+942): 12; (_+942, _&117): -2; (_+942, _&120): -2; (_+942, _&123): -2; (_+942, _+942): 12; (_+98, #[_*71]): 2; (_+98, #[_*72]): -4; (_+98, #[_+98]): 4; (_+98, _*72): -2; (_+98, _+98): 2; (_+99, #[_*73]): -4; (_+99, #[_+98]): 2; (_+99, #[_+99]): 4; (_+99, _*73): -2; (_+99, _+99): 2; (_/10, _&116): -2; (_/10, _&117): -2; (_/10, _*70): -2; (_/10, _+940): 1; (_/10, _+941): 1; (_/10, _+942): 1; (_/10, _/10): 0; (_/11, _&118): -2; (_/11, _&119): -2; (_/11, _&120): -2; (_/11, _+940): 1; (_/11, _+941): 1; (_/11, _+942): 1; (_/11, _/11): 0; (_/12, _&121): -2; (_/12, _&122): -2; (_/12, _&123): -2; (_/12, _+940): 1; (_/12, _+941): 1; (_/12, _+942): 1; (_/12, _/12): 0; (x0, #[_+940]): -12; (x0, _+940): -6; (x0, x0): 3; (x0, z0): 6; (x1, #[_+940]): 6; (x1, _+941): -6; (x1, _+942): -12; (x1, x1): 3; (z0, #[_+940]): -12; (z0, _+940): -6; (z0, z0): 3; '
 resulting in :
_/1\3b:5\; y\6b:5\; _+94\3b:1\; x\2b:0\; z\1b:1\
_/1\3b:5\; y\6b:5\; _+94\3b:1\; x\2b:1\; z\1b:0\

Subtraction Expression
{
	(r\3q:6\ - x\2q:U\);
	(x\4q:U\ / k\2q:U\);
}
 Dann5 virtual code:  r0\0\ == _+1010\S\; _+1010\S\ = _-40\S\ .+ x0\S\; r1\1\ == _+1011\S\; _+1011\S\ = _-41\S\ + x1\S\ + #[_+1010]\S\; ; x0\S\ == _*80\S\; _*80\S\ = _/20\S\ & k0\S\; x1\S\ == _*81\S\; _*81\S\ = _&130\S\ .+ _&129\S\; _&130\S\ = _/21\S\ & k0\S\; _&129\S\ = _/20\S\ & k1\S\; 
 It's generic Qubo is '(#[_*81], #[_*81]): 5; (#[_*81], _*82): -2; (#[_*81], _*83): -4; (#[_+1010], #[_+1010]): 5; (#[_+1010], _+1011): -2; (#[_+1010], _+1012): -4; (_&129, #[_*81]): -4; (_&129, _&129): 4; (_&129, _*81): -2; (_&130, #[_*81]): -4; (_&130, _&129): 2; (_&130, _&130): 4; (_&130, _*81): -2; (_&131, #[_*81]): 2; (_&131, _&131): 4; (_&131, _*82): -2; (_&131, _*83): -4; (_*80, _*80): 4; (_*80, x0): -2; (_*81, #[_*81]): 4; (_*81, _*81): 2; (_*81, x1): -2; (_*82, _*82): 2; (_*82, _*83): 4; (_*82, x2): -2; (_*83, _*83): 5; (_*83, x3): -2; (_+1010, #[_+1010]): 4; (_+1010, _+1010): 2; (_+1010, r0): -2; (_+1011, _+1011): 2; (_+1011, _+1012): 4; (_+1011, r1): -2; (_+1012, _+1012): 5; (_+1012, r2): -2; (_-40, #[_+1010]): -4; (_-40, _+1010): -2; (_-40, _-40): 1; (_-40, x0): 2; (_-41, #[_+1010]): 2; (_-41, _+1011): -2; (_-41, _+1012): -4; (_-41, _-41): 1; (_-41, x1): 2; (_/20, _&129): -2; (_/20, _*80): -2; (_/20, _/20): 0; (_/20, k0): 1; (_/20, k1): 1; (_/21, _&130): -2; (_/21, _&131): -2; (_/21, _/21): 0; (_/21, k0): 1; (_/21, k1): 1; (k0, _&130): -2; (k0, _*80): -2; (k0, k0): 0; (k1, _&129): -2; (k1, _&131): -2; (k1, k1): 0; (r0, r0): 1; (r1, r1): 1; (r2, r2): 1; (x0, #[_+1010]): -4; (x0, _+1010): -2; (x0, x0): 2; (x1, #[_+1010]): 2; (x1, _+1011): -2; (x1, _+1012): -4; (x1, x1): 2; (x2, x2): 1; (x3, x3): 1; '

 & finalized Qubo is '(#[_*81], #[_*81]): 5; (#[_*81], _*82): -2; (#[_*81], _*83): -4; (#[_+1010], #[_+1010]): 5; (#[_+1010], _+1011): -2; (#[_+1010], _+1012): -4; (_&129, #[_*81]): -4; (_&129, _&129): 4; (_&129, _*81): -2; (_&130, #[_*81]): -4; (_&130, _&129): 2; (_&130, _&130): 4; (_&130, _*81): -2; (_&131, #[_*81]): 2; (_&131, _&131): 4; (_&131, _*82): -2; (_&131, _*83): -4; (_*80, _*80): 4; (_*80, x0): -2; (_*81, #[_*81]): 4; (_*81, _*81): 2; (_*81, x1): -2; (_*82, _*82): 2; (_*82, _*83): 4; (_*82, x2): -2; (_*83, _*83): 5; (_*83, x3): -2; (_+1010, #[_+1010]): 4; (_+1010, _+1010): 2; (_+1011, _+1011): 0; (_+1011, _+1012): 4; (_+1012, _+1012): 3; (_-40, #[_+1010]): -4; (_-40, _+1010): -2; (_-40, _-40): 1; (_-40, x0): 2; (_-41, #[_+1010]): 2; (_-41, _+1011): -2; (_-41, _+1012): -4; (_-41, _-41): 1; (_-41, x1): 2; (_/20, _&129): -2; (_/20, _*80): -2; (_/20, _/20): 0; (_/20, k0): 1; (_/20, k1): 1; (_/21, _&130): -2; (_/21, _&131): -2; (_/21, _/21): 0; (_/21, k0): 1; (_/21, k1): 1; (k0, _&130): -2; (k0, _*80): -2; (k0, k0): 0; (k1, _&129): -2; (k1, _&131): -2; (k1, k1): 0; (x0, #[_+1010]): -4; (x0, _+1010): -2; (x0, x0): 2; (x1, #[_+1010]): 2; (x1, _+1011): -2; (x1, _+1012): -4; (x1, x1): 2; (x2, x2): 1; (x3, x3): 1; '
 resulting in :
 _-4\2b:3\; r\3b:6\; x\2b:3\ _/2\2b:3\; x\4b:3\; k\2b:1\
 _-4\2b:3\; r\3b:6\; x\2b:3\ _/2\2b:1\; x\4b:3\; k\2b:3\


 --- Comparison Expressions ----
(x\3q:U\ == z\3q:U\)
 decomposed: 
x0\S\ == z0\S\; x1\S\ == z1\S\; x2\S\ == z2\S\; 
Qubo: (x0, x0): 1; (x1, x1): 1; (x2, x2): 1; (z0, x0): -2; (z0, z0): 1; (z1, x1): -2; (z1, z1): 1; (z2, x2): -2; (z2, z2): 1; 
x\3b:0\; z\3b:0\
x\3b:4\; z\3b:4\
x\3b:2\; z\3b:2\
x\3b:6\; z\3b:6\
x\3b:1\; z\3b:1\
x\3b:5\; z\3b:5\
x\3b:3\; z\3b:3\
x\3b:7\; z\3b:7\

(x\4q:U\ != z\4q:U\)
 decomposed: 
{ x0\S\ = _!=150\S\ .+ z0\S\; _1\1\ = _!=152\S\ | _|61\S\; _|61\S\ = _!=151\S\ | _!=150\S\; }; { x1\S\ = _!=151\S\ + z1\S\ + #[x0]\S\; }; { x2\S\ = _!=152\S\ + z2\S\ + #[x1]\S\; }; { x3\S\ = #[x2]\S\; }; 
Qubo: (#[x0], #[x0]): 5; (#[x0], #[x1]): -4; (#[x0], x1): -2; (#[x1], #[x1]): 5; (#[x1], x2): -2; (#[x1], x3): -4; (_!=150, #[x0]): -4; (_!=150, _!=150): 2; (_!=150, _|61): -2; (_!=150, x0): -2; (_!=150, z0): 2; (_!=151, #[x0]): 2; (_!=151, #[x1]): -4; (_!=151, _!=150): 1; (_!=151, _!=151): 2; (_!=151, _|61): -2; (_!=151, x1): -2; (_!=151, z1): 2; (_!=152, #[x1]): 2; (_!=152, _!=152): 0; (_!=152, _|61): 1; (_!=152, x2): -2; (_!=152, x3): -4; (_!=152, z2): 2; (_|61, _|61): 0; (x0, #[x0]): 4; (x0, x0): 1; (x1, #[x1]): 4; (x1, x1): 1; (x2, x2): 1; (x2, x3): 4; (x3, x3): 4; (z0, #[x0]): -4; (z0, x0): -2; (z0, z0): 1; (z1, #[x0]): 2; (z1, #[x1]): -4; (z1, x1): -2; (z1, z1): 1; (z2, #[x1]): 2; (z2, x2): -2; (z2, x3): -4; (z2, z2): 1; 
x\3b:0\ z\3b:4\ 
x\3b:4\ z\3b:0\ 
x\3b:2\ z\3b:6\ 
x\3b:6\ z\3b:2\ 
x\3b:1\ z\3b:5\ 
x\3b:5\ z\3b:1\ 
x\3b:3\ z\3b:7\ 
x\3b:7\ z\3b:3\ 
x\3b:2\ z\3b:0\ 
x\3b:6\ z\3b:4\ 
x\3b:3\ z\3b:1\ 
x\3b:7\ z\3b:5\ 
x\3b:2\ z\3b:4\ 
x\3b:6\ z\3b:0\ 
x\3b:3\ z\3b:5\ 
x\3b:7\ z\3b:1\ 
x\3b:1\ z\3b:0\ 
x\3b:5\ z\3b:4\ 
x\3b:3\ z\3b:2\ 
x\3b:7\ z\3b:6\ 
x\3b:1\ z\3b:4\ 
x\3b:5\ z\3b:0\ 
x\3b:3\ z\3b:6\ 
x\3b:7\ z\3b:2\ 
x\3b:3\ z\3b:0\ 
x\3b:7\ z\3b:4\ 
x\3b:3\ z\3b:4\ 
x\3b:7\ z\3b:0\ 
x\3b:2\ z\3b:1\ 
x\3b:6\ z\3b:5\ 
x\3b:2\ z\3b:5\ 
x\3b:6\ z\3b:1\ 
x\3b:0\ z\3b:6\ 
x\3b:4\ z\3b:2\ 
x\3b:1\ z\3b:7\ 
x\3b:5\ z\3b:3\ 
x\3b:0\ z\3b:2\ 
x\3b:4\ z\3b:6\ 
x\3b:1\ z\3b:3\ 
x\3b:5\ z\3b:7\ 
x\3b:1\ z\3b:6\ 
x\3b:5\ z\3b:2\ 
x\3b:1\ z\3b:2\ 
x\3b:5\ z\3b:6\ 
x\3b:0\ z\3b:7\ 
x\3b:4\ z\3b:3\ 
x\3b:0\ z\3b:3\ 
x\3b:4\ z\3b:7\ 
x\3b:0\ z\3b:5\ 
x\3b:4\ z\3b:1\ 
x\3b:2\ z\3b:7\ 
x\3b:6\ z\3b:3\ 
x\3b:0\ z\3b:1\ 
x\3b:4\ z\3b:5\ 
x\3b:2\ z\3b:3\ 
x\3b:6\ z\3b:7\ 

(x\4q:U\ > z\4q:U\)
 decomposed: 
{ z0\S\ = _>00\S\ .+ x0\S\; _0\0\ != z3\S\; }; { z1\S\ = _>01\S\ + x1\S\ + #[z0]\S\; }; { z2\S\ = _>02\S\ + x2\S\ + #[z1]\S\; }; { z3\S\ = #[z2]\S\; }; 
Qubo: (#[z0], #[z0]): 5; (#[z0], #[z1]): -4; (#[z0], z1): -2; (#[z1], #[z1]): 5; (#[z1], z2): -2; (#[z1], z3): -4; (_>00, #[z0]): -4; (_>00, _>00): 1; (_>00, x0): 2; (_>00, z0): -2; (_>01, #[z0]): 2; (_>01, #[z1]): -4; (_>01, _>01): 1; (_>01, x1): 2; (_>01, z1): -2; (_>02, #[z1]): 2; (_>02, _>02): 1; (_>02, x2): 2; (_>02, z2): -2; (_>02, z3): -4; (x0, #[z0]): -4; (x0, x0): 1; (x0, z0): -2; (x1, #[z0]): 2; (x1, #[z1]): -4; (x1, x1): 1; (x1, z1): -2; (x2, #[z1]): 2; (x2, x2): 1; (x2, z2): -2; (x2, z3): -4; (z0, #[z0]): 4; (z0, z0): 1; (z1, #[z1]): 4; (z1, z1): 1; (z2, z2): 1; (z2, z3): 4; (z3, z3): 3; 
x\3b:4\ z\3b:0\ 
x\3b:6\ z\3b:2\ 
x\3b:5\ z\3b:1\ 
x\3b:7\ z\3b:3\ 
x\3b:4\ z\3b:2\ 
x\3b:5\ z\3b:3\ 
x\3b:4\ z\3b:1\ 
x\3b:6\ z\3b:3\ 
x\3b:4\ z\3b:3\ 
x\3b:5\ z\3b:2\ 
x\3b:6\ z\3b:0\ 
x\3b:7\ z\3b:1\ 
x\3b:2\ z\3b:0\ 
x\3b:6\ z\3b:4\ 
x\3b:3\ z\3b:1\ 
x\3b:7\ z\3b:5\ 
x\3b:6\ z\3b:1\ 
x\3b:2\ z\3b:1\ 
x\3b:6\ z\3b:5\ 
x\3b:7\ z\3b:0\ 
x\3b:3\ z\3b:0\ 
x\3b:7\ z\3b:4\ 
x\3b:5\ z\3b:0\ 
x\3b:7\ z\3b:2\ 
x\3b:1\ z\3b:0\ 
x\3b:5\ z\3b:4\ 
x\3b:3\ z\3b:2\ 
x\3b:7\ z\3b:6\ 

(x\4q:U\ >= z\4q:U\)
 decomposed: 
{ x0\S\ = _>=00\S\ .+ z0\S\; _0\0\ == x3\S\; }; { x1\S\ = _>=01\S\ + z1\S\ + #[x0]\S\; }; { x2\S\ = _>=02\S\ + z2\S\ + #[x1]\S\; }; { x3\S\ = #[x2]\S\; }; 
Qubo: (#[x0], #[x0]): 5; (#[x0], #[x1]): -4; (#[x0], x1): -2; (#[x1], #[x1]): 5; (#[x1], x2): -2; (#[x1], x3): -4; (_>=00, #[x0]): -4; (_>=00, _>=00): 1; (_>=00, x0): -2; (_>=00, z0): 2; (_>=01, #[x0]): 2; (_>=01, #[x1]): -4; (_>=01, _>=01): 1; (_>=01, x1): -2; (_>=01, z1): 2; (_>=02, #[x1]): 2; (_>=02, _>=02): 1; (_>=02, x2): -2; (_>=02, x3): -4; (_>=02, z2): 2; (x0, #[x0]): 4; (x0, x0): 1; (x1, #[x1]): 4; (x1, x1): 1; (x2, x2): 1; (x2, x3): 4; (x3, x3): 5; (z0, #[x0]): -4; (z0, x0): -2; (z0, z0): 1; (z1, #[x0]): 2; (z1, #[x1]): -4; (z1, x1): -2; (z1, z1): 1; (z2, #[x1]): 2; (z2, x2): -2; (z2, x3): -4; (z2, z2): 1; 
x\3b:0\ z\3b:0\ 
x\3b:4\ z\3b:4\ 
x\3b:2\ z\3b:2\ 
x\3b:6\ z\3b:6\ 
x\3b:1\ z\3b:1\ 
x\3b:5\ z\3b:5\ 
x\3b:3\ z\3b:3\ 
x\3b:7\ z\3b:7\ 
x\3b:4\ z\3b:0\ 
x\3b:6\ z\3b:2\ 
x\3b:5\ z\3b:1\ 
x\3b:7\ z\3b:3\ 
x\3b:2\ z\3b:0\ 
x\3b:6\ z\3b:4\ 
x\3b:3\ z\3b:1\ 
x\3b:7\ z\3b:5\ 
x\3b:6\ z\3b:0\ 
x\3b:7\ z\3b:1\ 
x\3b:1\ z\3b:0\ 
x\3b:5\ z\3b:4\ 
x\3b:3\ z\3b:2\ 
x\3b:7\ z\3b:6\ 
x\3b:5\ z\3b:0\ 
x\3b:7\ z\3b:2\ 
x\3b:3\ z\3b:0\ 
x\3b:7\ z\3b:4\ 
x\3b:7\ z\3b:0\ 
x\3b:2\ z\3b:1\ 
x\3b:6\ z\3b:5\ 
x\3b:6\ z\3b:1\ 
x\3b:4\ z\3b:2\ 
x\3b:5\ z\3b:3\ 
x\3b:5\ z\3b:2\ 
x\3b:4\ z\3b:3\ 
x\3b:4\ z\3b:1\ 
x\3b:6\ z\3b:3\ 

(x\4q:U\ < z\4q:U\)
 decomposed: 
{ x0\S\ = _<00\S\ .+ z0\S\; _0\0\ != x3\S\; }; { x1\S\ = _<01\S\ + z1\S\ + #[x0]\S\; }; { x2\S\ = _<02\S\ + z2\S\ + #[x1]\S\; }; { x3\S\ = #[x2]\S\; }; 
Qubo: (#[x0], #[x0]): 5; (#[x0], #[x1]): -4; (#[x0], x1): -2; (#[x1], #[x1]): 5; (#[x1], x2): -2; (#[x1], x3): -4; (_<00, #[x0]): -4; (_<00, _<00): 1; (_<00, x0): -2; (_<00, z0): 2; (_<01, #[x0]): 2; (_<01, #[x1]): -4; (_<01, _<01): 1; (_<01, x1): -2; (_<01, z1): 2; (_<02, #[x1]): 2; (_<02, _<02): 1; (_<02, x2): -2; (_<02, x3): -4; (_<02, z2): 2; (x0, #[x0]): 4; (x0, x0): 1; (x1, #[x1]): 4; (x1, x1): 1; (x2, x2): 1; (x2, x3): 4; (x3, x3): 3; (z0, #[x0]): -4; (z0, x0): -2; (z0, z0): 1; (z1, #[x0]): 2; (z1, #[x1]): -4; (z1, x1): -2; (z1, z1): 1; (z2, #[x1]): 2; (z2, x2): -2; (z2, x3): -4; (z2, z2): 1; 
x\3b:0\ z\3b:4\ 
x\3b:2\ z\3b:6\ 
x\3b:1\ z\3b:5\ 
x\3b:3\ z\3b:7\ 
x\3b:2\ z\3b:4\ 
x\3b:3\ z\3b:5\ 
x\3b:1\ z\3b:4\ 
x\3b:3\ z\3b:6\ 
x\3b:3\ z\3b:4\ 
x\3b:2\ z\3b:5\ 
x\3b:0\ z\3b:6\ 
x\3b:1\ z\3b:7\ 
x\3b:0\ z\3b:2\ 
x\3b:4\ z\3b:6\ 
x\3b:1\ z\3b:3\ 
x\3b:5\ z\3b:7\ 
x\3b:1\ z\3b:6\ 
x\3b:1\ z\3b:2\ 
x\3b:5\ z\3b:6\ 
x\3b:0\ z\3b:7\ 
x\3b:0\ z\3b:3\ 
x\3b:4\ z\3b:7\ 
x\3b:0\ z\3b:5\ 
x\3b:2\ z\3b:7\ 
x\3b:0\ z\3b:1\ 
x\3b:4\ z\3b:5\ 
x\3b:2\ z\3b:3\ 
x\3b:6\ z\3b:7\ 

(x\4q:U\ <= z\4q:U\)
 decomposed: 
{ z0\S\ = _<=00\S\ .+ x0\S\; _0\0\ == z3\S\; }; { z1\S\ = _<=01\S\ + x1\S\ + #[z0]\S\; }; { z2\S\ = _<=02\S\ + x2\S\ + #[z1]\S\; }; { z3\S\ = #[z2]\S\; }; 
Qubo: (#[z0], #[z0]): 5; (#[z0], #[z1]): -4; (#[z0], z1): -2; (#[z1], #[z1]): 5; (#[z1], z2): -2; (#[z1], z3): -4; (_<=00, #[z0]): -4; (_<=00, _<=00): 1; (_<=00, x0): 2; (_<=00, z0): -2; (_<=01, #[z0]): 2; (_<=01, #[z1]): -4; (_<=01, _<=01): 1; (_<=01, x1): 2; (_<=01, z1): -2; (_<=02, #[z1]): 2; (_<=02, _<=02): 1; (_<=02, x2): 2; (_<=02, z2): -2; (_<=02, z3): -4; (x0, #[z0]): -4; (x0, x0): 1; (x0, z0): -2; (x1, #[z0]): 2; (x1, #[z1]): -4; (x1, x1): 1; (x1, z1): -2; (x2, #[z1]): 2; (x2, x2): 1; (x2, z2): -2; (x2, z3): -4; (z0, #[z0]): 4; (z0, z0): 1; (z1, #[z1]): 4; (z1, z1): 1; (z2, z2): 1; (z2, z3): 4; (z3, z3): 5; 
x\3b:0\ z\3b:0\ 
x\3b:4\ z\3b:4\ 
x\3b:2\ z\3b:2\ 
x\3b:6\ z\3b:6\ 
x\3b:1\ z\3b:1\ 
x\3b:5\ z\3b:5\ 
x\3b:3\ z\3b:3\ 
x\3b:7\ z\3b:7\ 
x\3b:0\ z\3b:4\ 
x\3b:2\ z\3b:6\ 
x\3b:1\ z\3b:5\ 
x\3b:3\ z\3b:7\ 
x\3b:0\ z\3b:2\ 
x\3b:4\ z\3b:6\ 
x\3b:1\ z\3b:3\ 
x\3b:5\ z\3b:7\ 
x\3b:0\ z\3b:6\ 
x\3b:1\ z\3b:7\ 
x\3b:0\ z\3b:1\ 
x\3b:4\ z\3b:5\ 
x\3b:2\ z\3b:3\ 
x\3b:6\ z\3b:7\ 
x\3b:0\ z\3b:5\ 
x\3b:2\ z\3b:7\ 
x\3b:0\ z\3b:3\ 
x\3b:4\ z\3b:7\ 
x\3b:0\ z\3b:7\ 
x\3b:1\ z\3b:2\ 
x\3b:5\ z\3b:6\ 
x\3b:1\ z\3b:6\ 
x\3b:2\ z\3b:4\ 
x\3b:3\ z\3b:5\ 
x\3b:2\ z\3b:5\ 
x\3b:3\ z\3b:4\ 
x\3b:1\ z\3b:4\ 
x\3b:3\ z\3b:6\ 

((x\3q:U\ == z\3q:U\) == y\3q:5\)
 decomposed: 
x0\S\ == y0\1\; x0\S\ == z0\S\; x1\S\ == y1\0\; x1\S\ == z1\S\; x2\S\ == y2\1\; x2\S\ == z2\S\; 
Qubo: (x0, x0): 0; (x1, x1): 2; (x2, x2): 0; (z0, x0): -2; (z0, z0): 1; (z1, x1): -2; (z1, z1): 1; (z2, x2): -2; (z2, z2): 1; 
x\3b:5\; z\3b:5\; y\3b:5\

((x\4q:U\ != z\4q:U\) == y\3q:5\)
 decomposed: 
x0\S\ == y0\1\; { x0\S\ = _!=150\S\ .+ z0\S\; _1\1\ = _!=152\S\ | _|61\S\; _|61\S\ = _!=151\S\ | _!=150\S\; }; x1\S\ == y1\0\; { x1\S\ = _!=151\S\ + z1\S\ + #[x0]\S\; }; x2\S\ == y2\1\; { x2\S\ = _!=152\S\ + z2\S\ + #[x1]\S\; }; x3\S\ == y3\0\; { x3\S\ = #[x2]\S\; }; 
Qubo: (#[x0], #[x0]): 5; (#[x0], #[x1]): -4; (#[x0], x1): -2; (#[x1], #[x1]): 5; (#[x1], x2): -2; (#[x1], x3): -4; (_!=150, #[x0]): -4; (_!=150, _!=150): 2; (_!=150, _|61): -2; (_!=150, x0): -2; (_!=150, z0): 2; (_!=151, #[x0]): 2; (_!=151, #[x1]): -4; (_!=151, _!=150): 1; (_!=151, _!=151): 2; (_!=151, _|61): -2; (_!=151, x1): -2; (_!=151, z1): 2; (_!=152, #[x1]): 2; (_!=152, _!=152): 0; (_!=152, _|61): 1; (_!=152, x2): -2; (_!=152, x3): -4; (_!=152, z2): 2; (_|61, _|61): 0; (x0, #[x0]): 4; (x0, x0): 0; (x1, #[x1]): 4; (x1, x1): 2; (x2, x2): 0; (x2, x3): 4; (x3, x3): 5; (z0, #[x0]): -4; (z0, x0): -2; (z0, z0): 1; (z1, #[x0]): 2; (z1, #[x1]): -4; (z1, x1): -2; (z1, z1): 1; (z2, #[x1]): 2; (z2, x2): -2; (z2, x3): -4; (z2, z2): 1; 
x\3b:5\ z\3b:1\ ; y\3b:5\
x\3b:5\ z\3b:4\ ; y\3b:5\
x\3b:5\ z\3b:0\ ; y\3b:5\
x\3b:5\ z\3b:3\ ; y\3b:5\
x\3b:5\ z\3b:2\ ; y\3b:5\
x\3b:5\ z\3b:7\ ; y\3b:5\
x\3b:5\ z\3b:6\ ; y\3b:5\
{
	(x\4q:U\ != z\4q:U\);
	(x\3q:U\ == y\3q:5\);
}
 { x0\S\ = _!=160\S\ .+ z0\S\; _1\1\ = _!=162\S\ | _|63\S\; _|63\S\ = _!=161\S\ | _!=160\S\; }; { x1\S\ = _!=161\S\ + z1\S\ + #[x0]\S\; }; { x2\S\ = _!=162\S\ + z2\S\ + #[x1]\S\; }; { x3\S\ = #[x2]\S\; }; ; x0\S\ == y0\1\; x1\S\ == y1\0\; x2\S\ == y2\1\; 
Qubo: (#[x0], #[x0]): 5; (#[x0], #[x1]): -4; (#[x0], x1): -2; (#[x1], #[x1]): 5; (#[x1], x2): -2; (#[x1], x3): -4; (_!=160, #[x0]): -4; (_!=160, _!=160): 2; (_!=160, _|63): -2; (_!=160, x0): -2; (_!=160, z0): 2; (_!=161, #[x0]): 2; (_!=161, #[x1]): -4; (_!=161, _!=160): 1; (_!=161, _!=161): 2; (_!=161, _|63): -2; (_!=161, x1): -2; (_!=161, z1): 2; (_!=162, #[x1]): 2; (_!=162, _!=162): 0; (_!=162, _|63): 1; (_!=162, x2): -2; (_!=162, x3): -4; (_!=162, z2): 2; (_|63, _|63): 0; (x0, #[x0]): 4; (x0, x0): 0; (x1, #[x1]): 4; (x1, x1): 2; (x2, x2): 0; (x2, x3): 4; (x3, x3): 4; (z0, #[x0]): -4; (z0, x0): -2; (z0, z0): 1; (z1, #[x0]): 2; (z1, #[x1]): -4; (z1, x1): -2; (z1, z1): 1; (z2, #[x1]): 2; (z2, x2): -2; (z2, x3): -4; (z2, z2): 1; 
 x\3b:5\ z\3b:1\  x\3b:5\; y\3b:5\
 x\3b:5\ z\3b:4\  x\3b:5\; y\3b:5\
 x\3b:5\ z\3b:0\  x\3b:5\; y\3b:5\
 x\3b:5\ z\3b:3\  x\3b:5\; y\3b:5\
 x\3b:5\ z\3b:7\  x\3b:5\; y\3b:5\
 x\3b:5\ z\3b:2\  x\3b:5\; y\3b:5\
 x\3b:5\ z\3b:6\  x\3b:5\; y\3b:5\


Problem is: (x3\S\ == y3\0\) Qubo: (x3, x3): 1; 

((x\4q:U\ > z\4q:U\) == y\3q:5\)
 decomposed: 
x0\S\ == y0\1\; { z0\S\ = _>00\S\ .+ x0\S\; _0\0\ != z3\S\; }; x1\S\ == y1\0\; { z1\S\ = _>01\S\ + x1\S\ + #[z0]\S\; }; x2\S\ == y2\1\; { z2\S\ = _>02\S\ + x2\S\ + #[z1]\S\; }; x3\S\ == y3\0\; { z3\S\ = #[z2]\S\; }; 
Qubo: (#[z0], #[z0]): 5; (#[z0], #[z1]): -4; (#[z0], z1): -2; (#[z1], #[z1]): 5; (#[z1], z2): -2; (#[z1], z3): -4; (_>00, #[z0]): -4; (_>00, _>00): 1; (_>00, x0): 2; (_>00, z0): -2; (_>01, #[z0]): 2; (_>01, #[z1]): -4; (_>01, _>01): 1; (_>01, x1): 2; (_>01, z1): -2; (_>02, #[z1]): 2; (_>02, _>02): 1; (_>02, x2): 2; (_>02, z2): -2; (_>02, z3): -4; (x0, #[z0]): -4; (x0, x0): 0; (x0, z0): -2; (x1, #[z0]): 2; (x1, #[z1]): -4; (x1, x1): 2; (x1, z1): -2; (x2, #[z1]): 2; (x2, x2): 0; (x2, z2): -2; (x2, z3): -4; (x3, x3): 1; (z0, #[z0]): 4; (z0, z0): 1; (z1, #[z1]): 4; (z1, z1): 1; (z2, z2): 1; (z2, z3): 4; (z3, z3): 3; 
x\3b:5\ z\3b:1\ ; y\3b:5\
x\3b:5\ z\3b:3\ ; y\3b:5\
x\3b:5\ z\3b:2\ ; y\3b:5\
x\3b:5\ z\3b:0\ ; y\3b:5\
x\3b:5\ z\3b:4\ ; y\3b:5\

((x\4q:U\ >= z\4q:U\) == y\3q:5\)
 decomposed: 
x0\S\ == y0\1\; { x0\S\ = _>=00\S\ .+ z0\S\; _0\0\ == x3\S\; }; x1\S\ == y1\0\; { x1\S\ = _>=01\S\ + z1\S\ + #[x0]\S\; }; x2\S\ == y2\1\; { x2\S\ = _>=02\S\ + z2\S\ + #[x1]\S\; }; x3\S\ == y3\0\; { x3\S\ = #[x2]\S\; }; 
Qubo: (#[x0], #[x0]): 5; (#[x0], #[x1]): -4; (#[x0], x1): -2; (#[x1], #[x1]): 5; (#[x1], x2): -2; (#[x1], x3): -4; (_>=00, #[x0]): -4; (_>=00, _>=00): 1; (_>=00, x0): -2; (_>=00, z0): 2; (_>=01, #[x0]): 2; (_>=01, #[x1]): -4; (_>=01, _>=01): 1; (_>=01, x1): -2; (_>=01, z1): 2; (_>=02, #[x1]): 2; (_>=02, _>=02): 1; (_>=02, x2): -2; (_>=02, x3): -4; (_>=02, z2): 2; (x0, #[x0]): 4; (x0, x0): 0; (x1, #[x1]): 4; (x1, x1): 2; (x2, x2): 0; (x2, x3): 4; (x3, x3): 6; (z0, #[x0]): -4; (z0, x0): -2; (z0, z0): 1; (z1, #[x0]): 2; (z1, #[x1]): -4; (z1, x1): -2; (z1, z1): 1; (z2, #[x1]): 2; (z2, x2): -2; (z2, x3): -4; (z2, z2): 1; 
x\3b:5\ z\3b:5\ ; y\3b:5\
x\3b:5\ z\3b:1\ ; y\3b:5\
x\3b:5\ z\3b:4\ ; y\3b:5\
x\3b:5\ z\3b:0\ ; y\3b:5\
x\3b:5\ z\3b:3\ ; y\3b:5\
x\3b:5\ z\3b:2\ ; y\3b:5\

((x\4q:U\ < z\4q:U\) == y\3q:5\)
 decomposed: 
x0\S\ == y0\1\; { x0\S\ = _<00\S\ .+ z0\S\; _0\0\ != x3\S\; }; x1\S\ == y1\0\; { x1\S\ = _<01\S\ + z1\S\ + #[x0]\S\; }; x2\S\ == y2\1\; { x2\S\ = _<02\S\ + z2\S\ + #[x1]\S\; }; x3\S\ == y3\0\; { x3\S\ = #[x2]\S\; }; 
Qubo: (#[x0], #[x0]): 5; (#[x0], #[x1]): -4; (#[x0], x1): -2; (#[x1], #[x1]): 5; (#[x1], x2): -2; (#[x1], x3): -4; (_<00, #[x0]): -4; (_<00, _<00): 1; (_<00, x0): -2; (_<00, z0): 2; (_<01, #[x0]): 2; (_<01, #[x1]): -4; (_<01, _<01): 1; (_<01, x1): -2; (_<01, z1): 2; (_<02, #[x1]): 2; (_<02, _<02): 1; (_<02, x2): -2; (_<02, x3): -4; (_<02, z2): 2; (x0, #[x0]): 4; (x0, x0): 0; (x1, #[x1]): 4; (x1, x1): 2; (x2, x2): 0; (x2, x3): 4; (x3, x3): 4; (z0, #[x0]): -4; (z0, x0): -2; (z0, z0): 1; (z1, #[x0]): 2; (z1, #[x1]): -4; (z1, x1): -2; (z1, z1): 1; (z2, #[x1]): 2; (z2, x2): -2; (z2, x3): -4; (z2, z2): 1; 
x\3b:5\ z\3b:7\ ; y\3b:5\
x\3b:5\ z\3b:6\ ; y\3b:5\
x\3b:5\ z\3b:5\ ; y\3b:5\ wrong!
x\3b:5\ z\3b:1\ ; y\3b:5\ wrong!
x\3b:5\ z\3b:4\ ; y\3b:5\ wrong!
x\3b:5\ z\3b:0\ ; y\3b:5\ wrong!
x\3b:5\ z\3b:3\ ; y\3b:5\ wrong!
x\3b:5\ z\3b:2\ ; y\3b:5\ wrong!

{
	(x\4q:U\ < z\4q:U\);
	(x\3q:U\ == y\3q:5\);
}
 { x0\S\ = _<10\S\ .+ z0\S\; _0\0\ != x3\S\; }; { x1\S\ = _<11\S\ + z1\S\ + #[x0]\S\; }; { x2\S\ = _<12\S\ + z2\S\ + #[x1]\S\; }; { x3\S\ = #[x2]\S\; }; ; x0\S\ == y0\1\; x1\S\ == y1\0\; x2\S\ == y2\1\; 
Qubo: (#[x0], #[x0]): 5; (#[x0], #[x1]): -4; (#[x0], x1): -2; (#[x1], #[x1]): 5; (#[x1], x2): -2; (#[x1], x3): -4; (_<10, #[x0]): -4; (_<10, _<10): 1; (_<10, x0): -2; (_<10, z0): 2; (_<11, #[x0]): 2; (_<11, #[x1]): -4; (_<11, _<11): 1; (_<11, x1): -2; (_<11, z1): 2; (_<12, #[x1]): 2; (_<12, _<12): 1; (_<12, x2): -2; (_<12, x3): -4; (_<12, z2): 2; (x0, #[x0]): 4; (x0, x0): 0; (x1, #[x1]): 4; (x1, x1): 2; (x2, x2): 0; (x2, x3): 4; (x3, x3): 3; (z0, #[x0]): -4; (z0, x0): -2; (z0, z0): 1; (z1, #[x0]): 2; (z1, #[x1]): -4; (z1, x1): -2; (z1, z1): 1; (z2, #[x1]): 2; (z2, x2): -2; (z2, x3): -4; (z2, z2): 1; 
 x\3b:5\ z\3b:7\  x\3b:5\; y\3b:5\
 x\3b:5\ z\3b:6\  x\3b:5\; y\3b:5\


Problem is: (x3\S\ == y3\0\) Qubo: (x3, x3): 1; 

((x\4q:U\ <= z\4q:U\) == y\3q:5\)
 decomposed: 
x0\S\ == y0\1\; { z0\S\ = _<=00\S\ .+ x0\S\; _0\0\ == z3\S\; }; x1\S\ == y1\0\; { z1\S\ = _<=01\S\ + x1\S\ + #[z0]\S\; }; x2\S\ == y2\1\; { z2\S\ = _<=02\S\ + x2\S\ + #[z1]\S\; }; x3\S\ == y3\0\; { z3\S\ = #[z2]\S\; }; 
Qubo: (#[z0], #[z0]): 5; (#[z0], #[z1]): -4; (#[z0], z1): -2; (#[z1], #[z1]): 5; (#[z1], z2): -2; (#[z1], z3): -4; (_<=00, #[z0]): -4; (_<=00, _<=00): 1; (_<=00, x0): 2; (_<=00, z0): -2; (_<=01, #[z0]): 2; (_<=01, #[z1]): -4; (_<=01, _<=01): 1; (_<=01, x1): 2; (_<=01, z1): -2; (_<=02, #[z1]): 2; (_<=02, _<=02): 1; (_<=02, x2): 2; (_<=02, z2): -2; (_<=02, z3): -4; (x0, #[z0]): -4; (x0, x0): 0; (x0, z0): -2; (x1, #[z0]): 2; (x1, #[z1]): -4; (x1, x1): 2; (x1, z1): -2; (x2, #[z1]): 2; (x2, x2): 0; (x2, z2): -2; (x2, z3): -4; (x3, x3): 1; (z0, #[z0]): 4; (z0, z0): 1; (z1, #[z1]): 4; (z1, z1): 1; (z2, z2): 1; (z2, z3): 4; (z3, z3): 5; 
x\3b:5\ z\3b:5\ ; y\3b:5\
x\3b:5\ z\3b:7\ ; y\3b:5\
x\3b:5\ z\3b:6\ ; y\3b:5\

(y\3q:5\ == (x\3q:U\ == z\3q:U\))
 decomposed: 
y0\1\ == x0\S\; x0\S\ == z0\S\; y1\0\ == x1\S\; x1\S\ == z1\S\; y2\1\ == x2\S\; x2\S\ == z2\S\; 
Qubo: (x0, x0): 0; (x1, x1): 2; (x2, x2): 0; (z0, x0): -2; (z0, z0): 1; (z1, x1): -2; (z1, z1): 1; (z2, x2): -2; (z2, z2): 1; 
y\3b:5\; x\3b:5\; z\3b:5\

(y\4q:5\ == (x\4q:U\ != z\4q:U\))
 decomposed: 
y0\1\ == x0\S\; { x0\S\ = _!=150\S\ .+ z0\S\; _1\1\ = _!=152\S\ | _|61\S\; _|61\S\ = _!=151\S\ | _!=150\S\; }; y1\0\ == x1\S\; { x1\S\ = _!=151\S\ + z1\S\ + #[x0]\S\; }; y2\1\ == x2\S\; { x2\S\ = _!=152\S\ + z2\S\ + #[x1]\S\; }; y3\0\ == x3\S\; { x3\S\ = #[x2]\S\; }; 
Qubo: (#[x0], #[x0]): 5; (#[x0], #[x1]): -4; (#[x0], x1): -2; (#[x1], #[x1]): 5; (#[x1], x2): -2; (#[x1], x3): -4; (_!=150, #[x0]): -4; (_!=150, _!=150): 2; (_!=150, _|61): -2; (_!=150, x0): -2; (_!=150, z0): 2; (_!=151, #[x0]): 2; (_!=151, #[x1]): -4; (_!=151, _!=150): 1; (_!=151, _!=151): 2; (_!=151, _|61): -2; (_!=151, x1): -2; (_!=151, z1): 2; (_!=152, #[x1]): 2; (_!=152, _!=152): 0; (_!=152, _|61): 1; (_!=152, x2): -2; (_!=152, x3): -4; (_!=152, z2): 2; (_|61, _|61): 0; (x0, #[x0]): 4; (x0, x0): 0; (x1, #[x1]): 4; (x1, x1): 2; (x2, x2): 0; (x2, x3): 4; (x3, x3): 5; (z0, #[x0]): -4; (z0, x0): -2; (z0, z0): 1; (z1, #[x0]): 2; (z1, #[x1]): -4; (z1, x1): -2; (z1, z1): 1; (z2, #[x1]): 2; (z2, x2): -2; (z2, x3): -4; (z2, z2): 1; 
y\4b:5\; x\3b:5\ z\3b:1\ 
y\4b:5\; x\3b:5\ z\3b:4\ 
y\4b:5\; x\3b:5\ z\3b:0\ 
y\4b:5\; x\3b:5\ z\3b:3\ 
y\4b:5\; x\3b:5\ z\3b:2\ 


(y\4q:5\ == (x\4q:U\ > z\4q:U\))
 decomposed: 
y0\1\ == x0\S\; { z0\S\ = _>00\S\ .+ x0\S\; _0\0\ != z3\S\; }; y1\0\ == x1\S\; { z1\S\ = _>01\S\ + x1\S\ + #[z0]\S\; }; y2\1\ == x2\S\; { z2\S\ = _>02\S\ + x2\S\ + #[z1]\S\; }; y3\0\ == x3\S\; { z3\S\ = #[z2]\S\; }; 
Qubo: (#[z0], #[z0]): 5; (#[z0], #[z1]): -4; (#[z0], z1): -2; (#[z1], #[z1]): 5; (#[z1], z2): -2; (#[z1], z3): -4; (_>00, #[z0]): -4; (_>00, _>00): 1; (_>00, x0): 2; (_>00, z0): -2; (_>01, #[z0]): 2; (_>01, #[z1]): -4; (_>01, _>01): 1; (_>01, x1): 2; (_>01, z1): -2; (_>02, #[z1]): 2; (_>02, _>02): 1; (_>02, x2): 2; (_>02, z2): -2; (_>02, z3): -4; (x0, #[z0]): -4; (x0, x0): 0; (x0, z0): -2; (x1, #[z0]): 2; (x1, #[z1]): -4; (x1, x1): 2; (x1, z1): -2; (x2, #[z1]): 2; (x2, x2): 0; (x2, z2): -2; (x2, z3): -4; (x3, x3): 1; (z0, #[z0]): 4; (z0, z0): 1; (z1, #[z1]): 4; (z1, z1): 1; (z2, z2): 1; (z2, z3): 4; (z3, z3): 3; 
y\4b:5\; x\3b:5\ z\3b:1\ 
y\4b:5\; x\3b:5\ z\3b:3\ 
y\4b:5\; x\3b:5\ z\3b:2\ 
y\4b:5\; x\3b:5\ z\3b:0\ 
y\4b:5\; x\3b:5\ z\3b:4\ 

(y\4q:5\ == (x\4q:U\ >= z\4q:U\))
 decomposed: 
y0\1\ == x0\S\; { x0\S\ = _>=00\S\ .+ z0\S\; _0\0\ == x3\S\; }; y1\0\ == x1\S\; { x1\S\ = _>=01\S\ + z1\S\ + #[x0]\S\; }; y2\1\ == x2\S\; { x2\S\ = _>=02\S\ + z2\S\ + #[x1]\S\; }; y3\0\ == x3\S\; { x3\S\ = #[x2]\S\; }; 
Qubo: (#[x0], #[x0]): 5; (#[x0], #[x1]): -4; (#[x0], x1): -2; (#[x1], #[x1]): 5; (#[x1], x2): -2; (#[x1], x3): -4; (_>=00, #[x0]): -4; (_>=00, _>=00): 1; (_>=00, x0): -2; (_>=00, z0): 2; (_>=01, #[x0]): 2; (_>=01, #[x1]): -4; (_>=01, _>=01): 1; (_>=01, x1): -2; (_>=01, z1): 2; (_>=02, #[x1]): 2; (_>=02, _>=02): 1; (_>=02, x2): -2; (_>=02, x3): -4; (_>=02, z2): 2; (x0, #[x0]): 4; (x0, x0): 0; (x1, #[x1]): 4; (x1, x1): 2; (x2, x2): 0; (x2, x3): 4; (x3, x3): 6; (z0, #[x0]): -4; (z0, x0): -2; (z0, z0): 1; (z1, #[x0]): 2; (z1, #[x1]): -4; (z1, x1): -2; (z1, z1): 1; (z2, #[x1]): 2; (z2, x2): -2; (z2, x3): -4; (z2, z2): 1; 
y\4b:5\; x\3b:5\ z\3b:5\ 
y\4b:5\; x\3b:5\ z\3b:1\ 
y\4b:5\; x\3b:5\ z\3b:4\ 
y\4b:5\; x\3b:5\ z\3b:0\ 
y\4b:5\; x\3b:5\ z\3b:3\ 
y\4b:5\; x\3b:5\ z\3b:2\ 

(y\4q:5\ == (x\4q:U\ < z\4q:U\))
 decomposed: 
y0\1\ == x0\S\; { x0\S\ = _<00\S\ .+ z0\S\; _0\0\ != x3\S\; }; y1\0\ == x1\S\; { x1\S\ = _<01\S\ + z1\S\ + #[x0]\S\; }; y2\1\ == x2\S\; { x2\S\ = _<02\S\ + z2\S\ + #[x1]\S\; }; y3\0\ == x3\S\; { x3\S\ = #[x2]\S\; }; 
Qubo: (#[x0], #[x0]): 5; (#[x0], #[x1]): -4; (#[x0], x1): -2; (#[x1], #[x1]): 5; (#[x1], x2): -2; (#[x1], x3): -4; (_<00, #[x0]): -4; (_<00, _<00): 1; (_<00, x0): -2; (_<00, z0): 2; (_<01, #[x0]): 2; (_<01, #[x1]): -4; (_<01, _<01): 1; (_<01, x1): -2; (_<01, z1): 2; (_<02, #[x1]): 2; (_<02, _<02): 1; (_<02, x2): -2; (_<02, x3): -4; (_<02, z2): 2; (x0, #[x0]): 4; (x0, x0): 0; (x1, #[x1]): 4; (x1, x1): 2; (x2, x2): 0; (x2, x3): 4; (x3, x3): 4; (z0, #[x0]): -4; (z0, x0): -2; (z0, z0): 1; (z1, #[x0]): 2; (z1, #[x1]): -4; (z1, x1): -2; (z1, z1): 1; (z2, #[x1]): 2; (z2, x2): -2; (z2, x3): -4; (z2, z2): 1; 
y\4b:5\; x\3b:5\ z\3b:7\ 
y\4b:5\; x\3b:5\ z\3b:6\ 
y\4b:5\; x\3b:5\ z\3b:5\ wrong! 
y\4b:5\; x\3b:5\ z\3b:1\ wrong! 
y\4b:5\; x\3b:5\ z\3b:4\ wrong! 
y\4b:5\; x\3b:5\ z\3b:0\ wrong! 
y\4b:5\; x\3b:5\ z\3b:3\ wrong! 
y\4b:5\; x\3b:5\ z\3b:2\ wrong! 


(y\4q:5\ == (x\4q:U\ <= z\4q:U\))
 decomposed: 
y0\1\ == x0\S\; { z0\S\ = _<=00\S\ .+ x0\S\; _0\0\ == z3\S\; }; y1\0\ == x1\S\; { z1\S\ = _<=01\S\ + x1\S\ + #[z0]\S\; }; y2\1\ == x2\S\; { z2\S\ = _<=02\S\ + x2\S\ + #[z1]\S\; }; y3\0\ == x3\S\; { z3\S\ = #[z2]\S\; }; 
Qubo: (#[z0], #[z0]): 5; (#[z0], #[z1]): -4; (#[z0], z1): -2; (#[z1], #[z1]): 5; (#[z1], z2): -2; (#[z1], z3): -4; (_<=00, #[z0]): -4; (_<=00, _<=00): 1; (_<=00, x0): 2; (_<=00, z0): -2; (_<=01, #[z0]): 2; (_<=01, #[z1]): -4; (_<=01, _<=01): 1; (_<=01, x1): 2; (_<=01, z1): -2; (_<=02, #[z1]): 2; (_<=02, _<=02): 1; (_<=02, x2): 2; (_<=02, z2): -2; (_<=02, z3): -4; (x0, #[z0]): -4; (x0, x0): 0; (x0, z0): -2; (x1, #[z0]): 2; (x1, #[z1]): -4; (x1, x1): 2; (x1, z1): -2; (x2, #[z1]): 2; (x2, x2): 0; (x2, z2): -2; (x2, z3): -4; (x3, x3): 1; (z0, #[z0]): 4; (z0, z0): 1; (z1, #[z1]): 4; (z1, z1): 1; (z2, z2): 1; (z2, z3): 4; (z3, z3): 5; 
y\4b:5\; x\3b:5\ z\3b:5\ 
y\4b:5\; x\3b:5\ z\3b:7\ 
y\4b:5\; x\3b:5\ z\3b:6\ 

(x\4q:U\ == (y\3q:5\ + z\3q:U\))
 decomposed: 
x0\S\ == _+1250\S\; _+1250\S\ = y0\1\ .+ z0\S\; x1\S\ == _+1251\S\; _+1251\S\ = y1\0\ + z1\S\ + #[_+1250]\S\; x2\S\ == _+1252\S\; _+1252\S\ = y2\1\ + z2\S\ + #[_+1251]\S\; x3\S\ == _+1253\S\; _+1253\S\ = #[_+1252]\S\; 
Qubo: (#[_+1250], #[_+1250]): 1; (#[_+1250], #[_+1251]): -4; (#[_+1250], _+1251): -2; (#[_+1251], #[_+1251]): 7; (#[_+1251], _+1252): -2; (#[_+1251], _+1253): -4; (_+1250, #[_+1250]): 4; (_+1250, _+1250): 0; (_+1250, x0): -2; (_+1251, #[_+1251]): 4; (_+1251, _+1251): 2; (_+1251, x1): -2; (_+1252, _+1252): 0; (_+1252, _+1253): 4; (_+1252, x2): -2; (_+1253, _+1253): 1; (_+1253, x3): -2; (x0, x0): 1; (x1, x1): 1; (x2, x2): 1; (x3, x3): 1; (z0, #[_+1250]): -4; (z0, _+1250): -2; (z0, z0): 3; (z1, #[_+1250]): 2; (z1, #[_+1251]): -4; (z1, _+1251): -2; (z1, z1): 1; (z2, #[_+1251]): 2; (z2, _+1252): -2; (z2, _+1253): -4; (z2, z2): 3; 
x\4b:9\; _+125\4b:9\; y\3b:5\; z\3b:4\
x\4b:5\; _+125\4b:5\; y\3b:5\; z\3b:0\
x\4b:11\; _+125\4b:11\; y\3b:5\; z\3b:6\
x\4b:7\; _+125\4b:7\; y\3b:5\; z\3b:2\
x\4b:10\; _+125\4b:10\; y\3b:5\; z\3b:5\
x\4b:6\; _+125\4b:6\; y\3b:5\; z\3b:1\
x\4b:8\; _+125\4b:8\; y\3b:5\; z\3b:3\
x\4b:12\; _+125\4b:12\; y\3b:5\; z\3b:7\

(x\5q:U\ != (y\3q:5\ + z\3q:U\))
 decomposed: 
{ x0\S\ = y0\1\ + z0\S\ + _!=170\S\; _1\1\ = _!=173\S\ | _|66\S\; _|66\S\ = _!=172\S\ | _|65\S\; _|65\S\ = _!=171\S\ | _!=170\S\; }; { x1\S\ = _!=171\S\ .+ _+1281\S\; _+1281\S\ = y1\0\ + z1\S\ + #[x0]\S\; }; { x2\S\ = _!=172\S\ + _+1282\S\ + #[x1]\S\; _+1282\S\ = y2\1\ + z2\S\ + #[_+1281]\S\; }; { x3\S\ = _!=173\S\ + _+1283\S\ + #[x2]\S\; }; { x4\S\ = #[x3]\S\; }; 
Qubo: (#[_+1281], #[_+1281]): 7; (#[_+1281], _+1282): -2; (#[_+1281], _+1283): -4; (#[x0], #[_+1281]): -4; (#[x0], #[x0]): 1; (#[x0], _+1281): -2; (#[x1], #[x1]): 5; (#[x1], #[x2]): -4; (#[x1], x2): -2; (#[x2], #[x2]): 5; (#[x2], x3): -2; (#[x2], x4): -4; (_!=170, #[x0]): -4; (_!=170, _!=170): 4; (_!=170, _|65): -2; (_!=170, x0): -2; (_!=171, #[x1]): -4; (_!=171, _!=170): 1; (_!=171, _!=171): 2; (_!=171, _+1281): 2; (_!=171, _|65): -2; (_!=171, x1): -2; (_!=172, #[x1]): 2; (_!=172, #[x2]): -4; (_!=172, _!=172): 2; (_!=172, _+1282): 2; (_!=172, _|65): 1; (_!=172, _|66): -2; (_!=172, x2): -2; (_!=173, #[x2]): 2; (_!=173, _!=173): 0; (_!=173, _+1283): 2; (_!=173, _|66): 1; (_!=173, x3): -2; (_!=173, x4): -4; (_+1281, #[_+1281]): 4; (_+1281, #[x1]): -4; (_+1281, _+1281): 2; (_+1281, x1): -2; (_+1282, #[x1]): 2; (_+1282, #[x2]): -4; (_+1282, _+1282): 0; (_+1282, _+1283): 4; (_+1282, x2): -2; (_+1283, #[x2]): 2; (_+1283, _+1283): 1; (_+1283, x3): -2; (_+1283, x4): -4; (_|65, _|65): 2; (_|65, _|66): -2; (_|66, _|66): 0; (x0, #[x0]): 4; (x0, x0): -1; (x1, #[x1]): 4; (x1, x1): 1; (x2, #[x2]): 4; (x2, x2): 1; (x3, x3): 1; (x3, x4): 4; (x4, x4): 4; (z0, #[x0]): -4; (z0, _!=170): 2; (z0, x0): -2; (z0, z0): 3; (z1, #[_+1281]): -4; (z1, #[x0]): 2; (z1, _+1281): -2; (z1, z1): 1; (z2, #[_+1281]): 2; (z2, _+1282): -2; (z2, _+1283): -4; (z2, z2): 3; 
x\3b:1\ _+128\4b:9\; y\3b:5\; z\3b:4\ 
x\3b:5\ _+128\4b:5\; y\3b:5\; z\3b:0\ 
x\3b:3\ _+128\4b:11\; y\3b:5\; z\3b:6\ 
x\3b:5\ _+128\4b:9\; y\3b:5\; z\3b:4\ 
x\3b:7\ _+128\4b:11\; y\3b:5\; z\3b:6\ 
x\3b:5\ _+128\4b:9\; y\3b:5\; z\3b:4\ 
x\3b:7\ _+128\4b:11\; y\3b:5\; z\3b:6\ 
x\3b:3\ _+128\4b:9\; y\3b:5\; z\3b:4\ 
x\3b:7\ _+128\4b:5\; y\3b:5\; z\3b:0\ 
x\3b:3\ _+128\4b:9\; y\3b:5\; z\3b:4\ 
x\3b:7\ _+128\4b:5\; y\3b:5\; z\3b:0\ 
x\3b:7\ _+128\4b:9\; y\3b:5\; z\3b:4\ 
x\3b:7\ _+128\4b:9\; y\3b:5\; z\3b:4\ 
x\3b:1\ _+128\4b:5\; y\3b:5\; z\3b:0\ 
x\3b:3\ _+128\4b:7\; y\3b:5\; z\3b:2\ 
x\3b:1\ _+128\4b:5\; y\3b:5\; z\3b:0\ 
x\3b:3\ _+128\4b:5\; y\3b:5\; z\3b:0\ 
x\3b:3\ _+128\4b:5\; y\3b:5\; z\3b:0\ 
x\3b:3\ _+128\4b:7\; y\3b:5\; z\3b:2\ 
x\3b:5\ _+128\4b:11\; y\3b:5\; z\3b:6\ 
x\3b:5\ _+128\4b:11\; y\3b:5\; z\3b:6\ 
x\3b:1\ _+128\4b:7\; y\3b:5\; z\3b:2\ 
x\3b:1\ _+128\4b:7\; y\3b:5\; z\3b:2\ 
x\3b:1\ _+128\4b:11\; y\3b:5\; z\3b:6\ 
x\3b:5\ _+128\4b:7\; y\3b:5\; z\3b:2\ 
x\3b:1\ _+128\4b:11\; y\3b:5\; z\3b:6\ 
x\3b:5\ _+128\4b:7\; y\3b:5\; z\3b:2\ 
x\3b:7\ _+128\4b:7\; y\3b:5\; z\3b:2\ wrong==
x\3b:2\ _+128\4b:11\; y\3b:5\; z\3b:5\ wrong+ 
x\3b:6\ _+128\4b:7\; y\3b:5\; z\3b:1\ wrong+ 
x\3b:6\ _+128\4b:11\; y\3b:5\; z\3b:5\ wrong+ 
x\3b:6\ _+128\4b:11\; y\3b:5\; z\3b:5\ wrong+ 
x\3b:2\ _+128\4b:11\; y\3b:5\; z\3b:4\ wrong+ 
x\3b:3\ _+128\4b:11\; y\3b:5\; z\3b:5\ wrong+ 
x\3b:6\ _+128\4b:7\; y\3b:5\; z\3b:0\ wrong+ 
x\3b:7\ _+128\4b:7\; y\3b:5\; z\3b:1\ wrong+== 
x\3b:2\ _+128\4b:11\; y\3b:5\; z\3b:4\ wrong+ 
x\3b:3\ _+128\4b:11\; y\3b:5\; z\3b:5\ wrong+ 
x\3b:6\ _+128\4b:7\; y\3b:5\; z\3b:0\ wrong+ 
x\3b:7\ _+128\4b:7\; y\3b:5\; z\3b:1\ wrong+== 
x\3b:6\ _+128\4b:11\; y\3b:5\; z\3b:4\ wrong+ 
x\3b:7\ _+128\4b:11\; y\3b:5\; z\3b:5\ wrong+ 
x\3b:6\ _+128\4b:11\; y\3b:5\; z\3b:4\ wrong+ 
x\3b:7\ _+128\4b:11\; y\3b:5\; z\3b:5\ wrong+ 
x\3b:2\ _+128\4b:7\; y\3b:5\; z\3b:1\ wrong+ 
x\3b:2\ _+128\4b:7\; y\3b:5\; z\3b:1\ wrong+ 
x\3b:2\ _+128\4b:7\; y\3b:5\; z\3b:0\ wrong+ 
x\3b:3\ _+128\4b:7\; y\3b:5\; z\3b:1\ wrong+ 
x\3b:2\ _+128\4b:7\; y\3b:5\; z\3b:0\ wrong+ 
x\3b:3\ _+128\4b:7\; y\3b:5\; z\3b:1\ wrong+ 
x\3b:0\ _+128\4b:9\; y\3b:5\; z\3b:3\ wrong+ 
x\3b:4\ _+128\4b:13\; y\3b:5\; z\3b:7\ wrong+ 
x\3b:4\ _+128\4b:9\; y\3b:5\; z\3b:3\ wrong+ 
x\3b:4\ _+128\4b:9\; y\3b:5\; z\3b:3\ wrong+ 
x\3b:2\ _+128\4b:9\; y\3b:5\; z\3b:3\ wrong+ 
x\3b:6\ _+128\4b:13\; y\3b:5\; z\3b:7\ wrong+ 
x\3b:2\ _+128\4b:9\; y\3b:5\; z\3b:3\ wrong+ 
x\3b:6\ _+128\4b:13\; y\3b:5\; z\3b:7\ wrong+ 
x\3b:6\ _+128\4b:9\; y\3b:5\; z\3b:3\ wrong+ 
x\3b:6\ _+128\4b:9\; y\3b:5\; z\3b:3\ wrong+ 
x\3b:0\ _+128\4b:9\; y\3b:5\; z\3b:2\ wrong+ 
x\3b:1\ _+128\4b:9\; y\3b:5\; z\3b:3\ wrong+ 
x\3b:4\ _+128\4b:13\; y\3b:5\; z\3b:6\ wrong+ 
x\3b:5\ _+128\4b:13\; y\3b:5\; z\3b:7\ wrong+ 
x\3b:0\ _+128\4b:9\; y\3b:5\; z\3b:2\ wrong+ 
x\3b:1\ _+128\4b:9\; y\3b:5\; z\3b:3\ wrong+ 
x\3b:4\ _+128\4b:13\; y\3b:5\; z\3b:6\ wrong+ 
x\3b:5\ _+128\4b:13\; y\3b:5\; z\3b:7\ wrong+ 
x\3b:4\ _+128\4b:9\; y\3b:5\; z\3b:2\ wrong+ 
x\3b:5\ _+128\4b:9\; y\3b:5\; z\3b:3\ wrong+ 
x\3b:4\ _+128\4b:9\; y\3b:5\; z\3b:2\ wrong+ 
x\3b:5\ _+128\4b:9\; y\3b:5\; z\3b:3\ wrong+ 
x\3b:2\ _+128\4b:9\; y\3b:5\; z\3b:2\ wrong+ 
x\3b:3\ _+128\4b:9\; y\3b:5\; z\3b:3\ wrong+ 
x\3b:6\ _+128\4b:13\; y\3b:5\; z\3b:6\ wrong+ 
x\3b:7\ _+128\4b:13\; y\3b:5\; z\3b:7\ wrong+ 
x\3b:2\ _+128\4b:9\; y\3b:5\; z\3b:2\ wrong+ 
x\3b:3\ _+128\4b:9\; y\3b:5\; z\3b:3\ wrong+ 
x\3b:6\ _+128\4b:13\; y\3b:5\; z\3b:6\ wrong+ 
x\3b:7\ _+128\4b:13\; y\3b:5\; z\3b:7\ wrong+ 
x\3b:6\ _+128\4b:9\; y\3b:5\; z\3b:2\ wrong+ 
x\3b:7\ _+128\4b:9\; y\3b:5\; z\3b:3\ wrong+ 
x\3b:6\ _+128\4b:9\; y\3b:5\; z\3b:2\ wrong+ 
x\3b:7\ _+128\4b:9\; y\3b:5\; z\3b:3\ wrong+ 
x\3b:0\ _+128\4b:13\; y\3b:5\; z\3b:7\ wrong+ 
x\3b:0\ _+128\4b:13\; y\3b:5\; z\3b:7\ wrong+ 
x\3b:2\ _+128\4b:13\; y\3b:5\; z\3b:7\ wrong+ 
x\3b:2\ _+128\4b:13\; y\3b:5\; z\3b:7\ wrong+ 
x\3b:0\ _+128\4b:13\; y\3b:5\; z\3b:6\ wrong+ 
x\3b:1\ _+128\4b:13\; y\3b:5\; z\3b:7\ wrong+ 
x\3b:0\ _+128\4b:13\; y\3b:5\; z\3b:6\ wrong+ 
x\3b:1\ _+128\4b:13\; y\3b:5\; z\3b:7\ wrong+ 
x\3b:2\ _+128\4b:13\; y\3b:5\; z\3b:6\ wrong+ 
x\3b:3\ _+128\4b:13\; y\3b:5\; z\3b:7\ wrong+ 
x\3b:2\ _+128\4b:13\; y\3b:5\; z\3b:6\ wrong+ 
x\3b:3\ _+128\4b:13\; y\3b:5\; z\3b:7\ wrong+ 
x\3b:4\ _+128\4b:11\; y\3b:5\; z\3b:5\ wrong+ 
x\3b:4\ _+128\4b:11\; y\3b:5\; z\3b:5\ wrong+ 
x\3b:4\ _+128\4b:11\; y\3b:5\; z\3b:4\ wrong+ 
x\3b:5\ _+128\4b:11\; y\3b:5\; z\3b:5\ wrong+ 
x\3b:4\ _+128\4b:11\; y\3b:5\; z\3b:4\ wrong+ 
x\3b:5\ _+128\4b:11\; y\3b:5\; z\3b:5\ wrong+ 
x\3b:0\ _+128\4b:7\; y\3b:5\; z\3b:1\ wrong+ 
x\3b:0\ _+128\4b:7\; y\3b:5\; z\3b:1\ wrong+ 
x\3b:0\ _+128\4b:11\; y\3b:5\; z\3b:5\ wrong+ 
x\3b:4\ _+128\4b:7\; y\3b:5\; z\3b:1\ wrong+ 
x\3b:0\ _+128\4b:11\; y\3b:5\; z\3b:5\ wrong+ 
x\3b:4\ _+128\4b:7\; y\3b:5\; z\3b:1\ wrong+ 
x\3b:0\ _+128\4b:7\; y\3b:5\; z\3b:0\ wrong+ 
x\3b:1\ _+128\4b:7\; y\3b:5\; z\3b:1\ wrong+ 
x\3b:0\ _+128\4b:7\; y\3b:5\; z\3b:0\ wrong+ 
x\3b:1\ _+128\4b:7\; y\3b:5\; z\3b:1\ wrong+ 
x\3b:0\ _+128\4b:11\; y\3b:5\; z\3b:4\ wrong+ 
x\3b:1\ _+128\4b:11\; y\3b:5\; z\3b:5 wrong+\ 
x\3b:4\ _+128\4b:7\; y\3b:5\; z\3b:0\ wrong+ 
x\3b:5\ _+128\4b:7\; y\3b:5\; z\3b:1\ wrong+ 
x\3b:0\ _+128\4b:11\; y\3b:5\; z\3b:4\ wrong+ 
x\3b:1\ _+128\4b:11\; y\3b:5\; z\3b:5\ wrong+ 
x\3b:4\ _+128\4b:7\; y\3b:5\; z\3b:0\ wrong+ 
x\3b:5\ _+128\4b:7\; y\3b:5\; z\3b:1\ wrong+ 


(x\4q:U\ > (y\3q:5\ + z\3q:U\))
 decomposed: 
{ _+1350\S\ == _+1380\S\; _+1350\S\ = y0\1\ .+ z0\S\_+1380\S\ = _>10\S\ .+ x0\S\; _0\0\ != _+1353\S\; }; { _+1351\S\ == _+1381\S\; _+1351\S\ = y1\0\ + z1\S\ + #[_+1350]\S\_+1381\S\ = _>11\S\ + x1\S\ + #[_+1380]\S\; }; { _+1352\S\ == _+1382\S\; _+1352\S\ = y2\1\ + z2\S\ + #[_+1351]\S\_+1382\S\ = _>12\S\ + x2\S\ + #[_+1381]\S\; }; { _+1353\S\ == _+1383\S\; _+1353\S\ = #[_+1352]\S\_+1383\S\ = #[_+1382]\S\; }; 
Qubo: (#[_+1350], #[_+1350]): 1; (#[_+1350], #[_+1351]): -4; (#[_+1350], _+1351): -2; (#[_+1351], #[_+1351]): 7; (#[_+1351], _+1352): -2; (#[_+1351], _+1353): -4; (#[_+1380], #[_+1380]): 5; (#[_+1380], #[_+1381]): -4; (#[_+1380], _+1381): -2; (#[_+1381], #[_+1381]): 5; (#[_+1381], _+1382): -2; (#[_+1381], _+1383): -4; (_+1350, #[_+1350]): 4; (_+1350, _+1350): 0; (_+1351, #[_+1351]): 4; (_+1351, _+1351): 2; (_+1352, _+1352): 0; (_+1352, _+1353): 4; (_+1353, _+1353): 0; (_+1380, #[_+1380]): 4; (_+1380, _+1350): -2; (_+1380, _+1380): 2; (_+1381, #[_+1381]): 4; (_+1381, _+1351): -2; (_+1381, _+1381): 2; (_+1382, _+1352): -2; (_+1382, _+1382): 2; (_+1382, _+1383): 4; (_+1383, _+1353): -2; (_+1383, _+1383): 5; (_>10, #[_+1380]): -4; (_>10, _+1380): -2; (_>10, _>10): 1; (_>10, x0): 2; (_>11, #[_+1380]): 2; (_>11, #[_+1381]): -4; (_>11, _+1381): -2; (_>11, _>11): 1; (_>11, x1): 2; (_>12, #[_+1381]): 2; (_>12, _+1382): -2; (_>12, _+1383): -4; (_>12, _>12): 1; (_>12, x2): 2; (x0, #[_+1380]): -4; (x0, _+1380): -2; (x0, x0): 1; (x1, #[_+1380]): 2; (x1, #[_+1381]): -4; (x1, _+1381): -2; (x1, x1): 1; (x2, #[_+1381]): 2; (x2, _+1382): -2; (x2, _+1383): -4; (x2, x2): 1; (z0, #[_+1350]): -4; (z0, _+1350): -2; (z0, z0): 3; (z1, #[_+1350]): 2; (z1, #[_+1351]): -4; (z1, _+1351): -2; (z1, z1): 1; (z2, #[_+1351]): 2; (z2, _+1352): -2; (z2, _+1353): -4; (z2, z2): 3; 
x\3b:5\ _+135\4b:9\; y\3b:5\; z\3b:4\ x < _+
x\3b:4\ _+135\4b:9\; y\3b:5\; z\3b:4\ x < _+ 
x\3b:7\ _+135\4b:11\; y\3b:5\; z\3b:6\ x < _+ 
x\3b:5\ _+135\4b:11\; y\3b:5\; z\3b:6\ x < _+ 
x\3b:6\ _+135\4b:11\; y\3b:5\; z\3b:6\ x < _+ 
x\3b:4\ _+135\4b:11\; y\3b:5\; z\3b:6\ x < _+ 
x\3b:7\ _+135\4b:9\; y\3b:5\; z\3b:4\ x < _+ 
x\3b:3\ _+135\4b:9\; y\3b:5\; z\3b:4\ x < _+ 
x\3b:6\ _+135\4b:9\; y\3b:5\; z\3b:4\ x < _+ 
x\3b:2\ _+135\4b:9\; y\3b:5\; z\3b:4\ x < _+ 
x\3b:6\ _+135\4b:10\; y\3b:5\; z\3b:5\ x < _+ 
x\3b:4\ _+135\4b:10\; y\3b:5\; z\3b:5\ x < _+ 
x\3b:4\ _+135\4b:8\; y\3b:5\; z\3b:3\ x < _+ 
x\3b:6\ _+135\4b:8\; y\3b:5\; z\3b:3\ x < _+ 
x\3b:2\ _+135\4b:8\; y\3b:5\; z\3b:3\ x < _+ 
x\3b:6\ _+135\4b:12\; y\3b:5\; z\3b:7\ x < _+ 
x\3b:5\ _+135\4b:10\; y\3b:5\; z\3b:5\ x < _+ 
x\3b:7\ _+135\4b:10\; y\3b:5\; z\3b:5\ x < _+ 
x\3b:3\ _+135\4b:10\; y\3b:5\; z\3b:5\ x < _+ 
x\3b:7\ _+135\4b:8\; y\3b:5\; z\3b:3\ x < _+ 
x\3b:3\ _+135\4b:8\; y\3b:5\; z\3b:3\ x < _+ 
x\3b:5\ _+135\4b:8\; y\3b:5\; z\3b:3\ x < _+ 
x\3b:1\ _+135\4b:8\; y\3b:5\; z\3b:3\ x < _+ 
x\3b:7\ _+135\4b:12\; y\3b:5\; z\3b:7\ x < _+ 
x\3b:5\ _+135\4b:12\; y\3b:5\; z\3b:7\ x < _+ 


(x\5q:U\ >= (y\3q:5\ + z\3q:U\))
 decomposed: 
{ x0\S\ = y0\1\ + z0\S\ + _>=10\S\; _0\0\ == x4\S\; }; { x1\S\ = _>=11\S\ .+ _+1411\S\; _+1411\S\ = y1\0\ + z1\S\ + #[x0]\S\; }; { x2\S\ = _>=12\S\ + _+1412\S\ + #[x1]\S\; _+1412\S\ = y2\1\ + z2\S\ + #[_+1411]\S\; }; { x3\S\ = _>=13\S\ + _+1413\S\ + #[x2]\S\; }; { x4\S\ = #[x3]\S\; }; 
Qubo: (#[_+1411], #[_+1411]): 7; (#[_+1411], _+1412): -2; (#[_+1411], _+1413): -4; (#[x0], #[_+1411]): -4; (#[x0], #[x0]): 1; (#[x0], _+1411): -2; (#[x1], #[x1]): 5; (#[x1], #[x2]): -4; (#[x1], x2): -2; (#[x2], #[x2]): 5; (#[x2], x3): -2; (#[x2], x4): -4; (_+1411, #[_+1411]): 4; (_+1411, #[x1]): -4; (_+1411, _+1411): 2; (_+1411, x1): -2; (_+1412, #[x1]): 2; (_+1412, #[x2]): -4; (_+1412, _+1412): 0; (_+1412, _+1413): 4; (_+1412, x2): -2; (_+1413, #[x2]): 2; (_+1413, _+1413): 1; (_+1413, x3): -2; (_+1413, x4): -4; (_>=10, #[x0]): -4; (_>=10, _>=10): 3; (_>=10, x0): -2; (_>=11, #[x1]): -4; (_>=11, _+1411): 2; (_>=11, _>=11): 1; (_>=11, x1): -2; (_>=12, #[x1]): 2; (_>=12, #[x2]): -4; (_>=12, _+1412): 2; (_>=12, _>=12): 1; (_>=12, x2): -2; (_>=13, #[x2]): 2; (_>=13, _+1413): 2; (_>=13, _>=13): 1; (_>=13, x3): -2; (_>=13, x4): -4; (x0, #[x0]): 4; (x0, x0): -1; (x1, #[x1]): 4; (x1, x1): 1; (x2, #[x2]): 4; (x2, x2): 1; (x3, x3): 1; (x3, x4): 4; (x4, x4): 5; (z0, #[x0]): -4; (z0, _>=10): 2; (z0, x0): -2; (z0, z0): 3; (z1, #[_+1411]): -4; (z1, #[x0]): 2; (z1, _+1411): -2; (z1, z1): 1; (z2, #[_+1411]): 2; (z2, _+1412): -2; (z2, _+1413): -4; (z2, z2): 3; 
x\3b:5\ _+141\4b:5\; y\3b:5\; z\3b:0\ 
x\3b:5\ _+141\4b:5\; y\3b:5\; z\3b:0\ 
x\3b:7\ _+141\4b:5\; y\3b:5\; z\3b:0\ 
x\3b:7\ _+141\4b:5\; y\3b:5\; z\3b:0\ 
x\3b:7\ _+141\4b:7\; y\3b:5\; z\3b:2\ 
x\3b:7\ _+141\4b:7\; y\3b:5\; z\3b:2\ 
x\3b:1\ _+141\4b:9\; y\3b:5\; z\3b:4\ x < _+ 
x\3b:5\ _+141\4b:9\; y\3b:5\; z\3b:4\ x < _+ 
x\3b:3\ _+141\4b:9\; y\3b:5\; z\3b:4\ x < _+ 
x\3b:7\ _+141\4b:9\; y\3b:5\; z\3b:4\ x < _+ 
x\3b:3\ _+141\4b:11\; y\3b:5\; z\3b:6\ x < _+ 
x\3b:7\ _+141\4b:11\; y\3b:5\; z\3b:6\ x < _+ 
x\3b:1\ _+141\4b:5\; y\3b:5\; z\3b:0\ x < _+ 
x\3b:3\ _+141\4b:5\; y\3b:5\; z\3b:0\ x < _+ 
x\3b:3\ _+141\4b:7\; y\3b:5\; z\3b:2\ x < _+ 
x\3b:2\ _+141\4b:11\; y\3b:5\; z\3b:5\ wrong+ x < _+ 
x\3b:6\ _+141\4b:11\; y\3b:5\; z\3b:5\ wrong+ x < _+ 
x\3b:2\ _+141\4b:11\; y\3b:5\; z\3b:4\ wrong+ x < _+ 
x\3b:3\ _+141\4b:11\; y\3b:5\; z\3b:5\ wrong+ x < _+ 
x\3b:6\ _+141\4b:11\; y\3b:5\; z\3b:4\ wrong+ x < _+ 
x\3b:7\ _+141\4b:11\; y\3b:5\; z\3b:5\ wrong+ x < _+ 
x\3b:6\ _+141\4b:7\; y\3b:5\; z\3b:1\ wrong+ x < _+ 
x\3b:6\ _+141\4b:7\; y\3b:5\; z\3b:1\ wrong+ x < _+ 
x\3b:6\ _+141\4b:7\; y\3b:5\; z\3b:0\ wrong+ x < _+ 
x\3b:7\ _+141\4b:7\; y\3b:5\; z\3b:1\ wrong+ x < _+ 
x\3b:6\ _+141\4b:7\; y\3b:5\; z\3b:0\ wrong+ >=
x\3b:7\ _+141\4b:7\; y\3b:5\; z\3b:1\ wrong+ >=
x\3b:2\ _+141\4b:7\; y\3b:5\; z\3b:1\ wrong+ >=
x\3b:2\ _+141\4b:7\; y\3b:5\; z\3b:0\ wrong+ >=
x\3b:3\ _+141\4b:7\; y\3b:5\; z\3b:1\ wrong+ >=
x\3b:0\ _+141\4b:9\; y\3b:5\; z\3b:3\ wrong+ >=
x\3b:4\ _+141\4b:9\; y\3b:5\; z\3b:3\ wrong+ >=
x\3b:2\ _+141\4b:9\; y\3b:5\; z\3b:3\ wrong+ >=
x\3b:6\ _+141\4b:9\; y\3b:5\; z\3b:3\ wrong+ >=
x\3b:0\ _+141\4b:9\; y\3b:5\; z\3b:2\ wrong+ >=
x\3b:1\ _+141\4b:9\; y\3b:5\; z\3b:3\ wrong+ >=
x\3b:4\ _+141\4b:9\; y\3b:5\; z\3b:2\ wrong+ >=
x\3b:5\ _+141\4b:9\; y\3b:5\; z\3b:3\ wrong+ >=
x\3b:2\ _+141\4b:9\; y\3b:5\; z\3b:2\ wrong+ >=
x\3b:3\ _+141\4b:9\; y\3b:5\; z\3b:3\ wrong+ >=
x\3b:6\ _+141\4b:9\; y\3b:5\; z\3b:2\ wrong+ >=
x\3b:7\ _+141\4b:9\; y\3b:5\; z\3b:3\ wrong+ >=
x\3b:4\ _+141\4b:13\; y\3b:5\; z\3b:7\ wrong+ >=
x\3b:6\ _+141\4b:13\; y\3b:5\; z\3b:7\ wrong+ >=
x\3b:4\ _+141\4b:13\; y\3b:5\; z\3b:6\ wrong+ >=
x\3b:5\ _+141\4b:13\; y\3b:5\; z\3b:7\ wrong+ >=
x\3b:6\ _+141\4b:13\; y\3b:5\; z\3b:6\ wrong+ >=
x\3b:7\ _+141\4b:13\; y\3b:5\; z\3b:7\  wrong+ >=
x\3b:5\ _+141\4b:11\; y\3b:5\; z\3b:6\ wrong>=
x\3b:1\ _+141\4b:7\; y\3b:5\; z\3b:2\ wrong>=
x\3b:5\ _+141\4b:7\; y\3b:5\; z\3b:2\ wrong>=
x\3b:4\ _+141\4b:11\; y\3b:5\; z\3b:5\ wrong+ >=
x\3b:4\ _+141\4b:11\; y\3b:5\; z\3b:4\ wrong+ >=
x\3b:5\ _+141\4b:11\; y\3b:5\; z\3b:5\ wrong+ >=
x\3b:0\ _+141\4b:7\; y\3b:5\; z\3b:1\ wrong+ >=
x\3b:4\ _+141\4b:7\; y\3b:5\; z\3b:1\ wrong+ >=
x\3b:0\ _+141\4b:7\; y\3b:5\; z\3b:0\ wrong+ >=
x\3b:1\ _+141\4b:7\; y\3b:5\; z\3b:1\ wrong+ >=
x\3b:4\ _+141\4b:7\; y\3b:5\; z\3b:0\ wrong+ >=
x\3b:5\ _+141\4b:7\; y\3b:5\; z\3b:1\ wrong+ >=

(x\5q:U\ < (y\3q:5\ + z\3q:U\))
 decomposed: 
{ x0\S\ = y0\1\ + z0\S\ + _<20\S\; _0\0\ != x4\S\; }; { x1\S\ = _<21\S\ .+ _+1481\S\; _+1481\S\ = y1\0\ + z1\S\ + #[x0]\S\; }; { x2\S\ = _<22\S\ + _+1482\S\ + #[x1]\S\; _+1482\S\ = y2\1\ + z2\S\ + #[_+1481]\S\; }; { x3\S\ = _<23\S\ + _+1483\S\ + #[x2]\S\; }; { x4\S\ = #[x3]\S\; }; 
Qubo: (#[_+1481], #[_+1481]): 7; (#[_+1481], _+1482): -2; (#[_+1481], _+1483): -4; (#[x0], #[_+1481]): -4; (#[x0], #[x0]): 1; (#[x0], _+1481): -2; (#[x1], #[x1]): 5; (#[x1], #[x2]): -4; (#[x1], x2): -2; (#[x2], #[x2]): 5; (#[x2], x3): -2; (#[x2], x4): -4; (_+1481, #[_+1481]): 4; (_+1481, #[x1]): -4; (_+1481, _+1481): 2; (_+1481, x1): -2; (_+1482, #[x1]): 2; (_+1482, #[x2]): -4; (_+1482, _+1482): 0; (_+1482, _+1483): 4; (_+1482, x2): -2; (_+1483, #[x2]): 2; (_+1483, _+1483): 1; (_+1483, x3): -2; (_+1483, x4): -4; (_<20, #[x0]): -4; (_<20, _<20): 3; (_<20, x0): -2; (_<21, #[x1]): -4; (_<21, _+1481): 2; (_<21, _<21): 1; (_<21, x1): -2; (_<22, #[x1]): 2; (_<22, #[x2]): -4; (_<22, _+1482): 2; (_<22, _<22): 1; (_<22, x2): -2; (_<23, #[x2]): 2; (_<23, _+1483): 2; (_<23, _<23): 1; (_<23, x3): -2; (_<23, x4): -4; (x0, #[x0]): 4; (x0, x0): -1; (x1, #[x1]): 4; (x1, x1): 1; (x2, #[x2]): 4; (x2, x2): 1; (x3, x3): 1; (x3, x4): 4; (x4, x4): 3; (z0, #[x0]): -4; (z0, _<20): 2; (z0, x0): -2; (z0, z0): 3; (z1, #[_+1481]): -4; (z1, #[x0]): 2; (z1, _+1481): -2; (z1, z1): 1; (z2, #[_+1481]): 2; (z2, _+1482): -2; (z2, _+1483): -4; (z2, z2): 3; 
x\3b:1\ _+148\4b:9\; y\3b:5\; z\3b:4\ 
x\3b:5\ _+148\4b:9\; y\3b:5\; z\3b:4\ 
x\3b:3\ _+148\4b:9\; y\3b:5\; z\3b:4\ 
x\3b:7\ _+148\4b:9\; y\3b:5\; z\3b:4\ 
x\3b:3\ _+148\4b:11\; y\3b:5\; z\3b:6\ 
x\3b:7\ _+148\4b:11\; y\3b:5\; z\3b:6\ 
x\3b:1\ _+148\4b:5\; y\3b:5\; z\3b:0\ 
x\3b:3\ _+148\4b:5\; y\3b:5\; z\3b:0\ 
x\3b:3\ _+148\4b:7\; y\3b:5\; z\3b:2\ 
x\3b:5\ _+148\4b:11\; y\3b:5\; z\3b:6\ 
x\3b:1\ _+148\4b:11\; y\3b:5\; z\3b:6\ 
x\3b:1\ _+148\4b:11\; y\3b:5\; z\3b:6\ 
x\3b:1\ _+148\4b:7\; y\3b:5\; z\3b:2\ 
x\3b:5\ _+148\4b:7\; y\3b:5\; z\3b:2\ 
x\3b:2\ _+148\4b:11\; y\3b:5\; z\3b:5\ wrong+
x\3b:6\ _+148\4b:11\; y\3b:5\; z\3b:5\ wrong+
x\3b:2\ _+148\4b:11\; y\3b:5\; z\3b:4\ wrong+
x\3b:3\ _+148\4b:11\; y\3b:5\; z\3b:5\ wrong+
x\3b:6\ _+148\4b:11\; y\3b:5\; z\3b:4\ wrong+
x\3b:7\ _+148\4b:11\; y\3b:5\; z\3b:5\ wrong+
x\3b:2\ _+148\4b:7\; y\3b:5\; z\3b:1\ wrong+
x\3b:2\ _+148\4b:7\; y\3b:5\; z\3b:0\ wrong+
x\3b:3\ _+148\4b:7\; y\3b:5\; z\3b:1\ wrong+
x\3b:0\ _+148\4b:9\; y\3b:5\; z\3b:3\ wrong+
x\3b:4\ _+148\4b:9\; y\3b:5\; z\3b:3\ wrong+
x\3b:2\ _+148\4b:9\; y\3b:5\; z\3b:3\ wrong+
x\3b:6\ _+148\4b:9\; y\3b:5\; z\3b:3\ wrong+
x\3b:0\ _+148\4b:9\; y\3b:5\; z\3b:2\ wrong+
x\3b:1\ _+148\4b:9\; y\3b:5\; z\3b:3\ wrong+
x\3b:4\ _+148\4b:9\; y\3b:5\; z\3b:2\ wrong+
x\3b:5\ _+148\4b:9\; y\3b:5\; z\3b:3\ wrong+
x\3b:2\ _+148\4b:9\; y\3b:5\; z\3b:2\ wrong+
x\3b:3\ _+148\4b:9\; y\3b:5\; z\3b:3\ wrong+
x\3b:6\ _+148\4b:9\; y\3b:5\; z\3b:2\ wrong+
x\3b:7\ _+148\4b:9\; y\3b:5\; z\3b:3\ wrong+
x\3b:4\ _+148\4b:13\; y\3b:5\; z\3b:7\ wrong+
x\3b:6\ _+148\4b:13\; y\3b:5\; z\3b:7\ wrong+
x\3b:4\ _+148\4b:13\; y\3b:5\; z\3b:6\ wrong+
x\3b:5\ _+148\4b:13\; y\3b:5\; z\3b:7\ wrong+
x\3b:6\ _+148\4b:13\; y\3b:5\; z\3b:6\ wrong+
x\3b:7\ _+148\4b:13\; y\3b:5\; z\3b:7\ wrong+
x\3b:0\ _+148\4b:13\; y\3b:5\; z\3b:7\ wrong+
x\3b:0\ _+148\4b:13\; y\3b:5\; z\3b:7\ wrong+
x\3b:2\ _+148\4b:13\; y\3b:5\; z\3b:7\ wrong+
x\3b:2\ _+148\4b:13\; y\3b:5\; z\3b:7\ wrong+
x\3b:0\ _+148\4b:13\; y\3b:5\; z\3b:6\ wrong+
x\3b:1\ _+148\4b:13\; y\3b:5\; z\3b:7\ wrong+
x\3b:0\ _+148\4b:13\; y\3b:5\; z\3b:6\ wrong+
x\3b:1\ _+148\4b:13\; y\3b:5\; z\3b:7\ wrong+
x\3b:2\ _+148\4b:13\; y\3b:5\; z\3b:6\ wrong+
x\3b:3\ _+148\4b:13\; y\3b:5\; z\3b:7\ wrong+
x\3b:2\ _+148\4b:13\; y\3b:5\; z\3b:6\ wrong+
x\3b:3\ _+148\4b:13\; y\3b:5\; z\3b:7\ wrong+
x\3b:4\ _+148\4b:11\; y\3b:5\; z\3b:5\ wrong+
x\3b:4\ _+148\4b:11\; y\3b:5\; z\3b:4\ wrong+
x\3b:5\ _+148\4b:11\; y\3b:5\; z\3b:5\ wrong+
x\3b:0\ _+148\4b:11\; y\3b:5\; z\3b:5\ wrong+
x\3b:0\ _+148\4b:11\; y\3b:5\; z\3b:5\ wrong+
x\3b:0\ _+148\4b:11\; y\3b:5\; z\3b:4\ wrong+
x\3b:1\ _+148\4b:11\; y\3b:5\; z\3b:5\ wrong+
x\3b:0\ _+148\4b:11\; y\3b:5\; z\3b:4\ wrong+
x\3b:1\ _+148\4b:11\; y\3b:5\; z\3b:5\ wrong+
x\3b:0\ _+148\4b:7\; y\3b:5\; z\3b:1\ wrong+
x\3b:4\ _+148\4b:7\; y\3b:5\; z\3b:1\ wrong+
x\3b:0\ _+148\4b:7\; y\3b:5\; z\3b:0\ wrong+
x\3b:1\ _+148\4b:7\; y\3b:5\; z\3b:1\ wrong+
x\3b:4\ _+148\4b:7\; y\3b:5\; z\3b:0\ wrong+
x\3b:5\ _+148\4b:7\; y\3b:5\; z\3b:1\ wrong+

(x\4q:U\ <= (y\3q:5\ + z\3q:U\))
 decomposed: 
{ _+1550\S\ == _+1580\S\; _+1550\S\ = y0\1\ .+ z0\S\_+1580\S\ = _<=10\S\ .+ x0\S\; _0\0\ == _+1553\S\; }; { _+1551\S\ == _+1581\S\; _+1551\S\ = y1\0\ + z1\S\ + #[_+1550]\S\_+1581\S\ = _<=11\S\ + x1\S\ + #[_+1580]\S\; }; { _+1552\S\ == _+1582\S\; _+1552\S\ = y2\1\ + z2\S\ + #[_+1551]\S\_+1582\S\ = _<=12\S\ + x2\S\ + #[_+1581]\S\; }; { _+1553\S\ == _+1583\S\; _+1553\S\ = #[_+1552]\S\_+1583\S\ = #[_+1582]\S\; }; 
Qubo: (#[_+1550], #[_+1550]): 1; (#[_+1550], #[_+1551]): -4; (#[_+1550], _+1551): -2; (#[_+1551], #[_+1551]): 7; (#[_+1551], _+1552): -2; (#[_+1551], _+1553): -4; (#[_+1580], #[_+1580]): 5; (#[_+1580], #[_+1581]): -4; (#[_+1580], _+1581): -2; (#[_+1581], #[_+1581]): 5; (#[_+1581], _+1582): -2; (#[_+1581], _+1583): -4; (_+1550, #[_+1550]): 4; (_+1550, _+1550): 0; (_+1551, #[_+1551]): 4; (_+1551, _+1551): 2; (_+1552, _+1552): 0; (_+1552, _+1553): 4; (_+1553, _+1553): 2; (_+1580, #[_+1580]): 4; (_+1580, _+1550): -2; (_+1580, _+1580): 2; (_+1581, #[_+1581]): 4; (_+1581, _+1551): -2; (_+1581, _+1581): 2; (_+1582, _+1552): -2; (_+1582, _+1582): 2; (_+1582, _+1583): 4; (_+1583, _+1553): -2; (_+1583, _+1583): 5; (_<=10, #[_+1580]): -4; (_<=10, _+1580): -2; (_<=10, _<=10): 1; (_<=10, x0): 2; (_<=11, #[_+1580]): 2; (_<=11, #[_+1581]): -4; (_<=11, _+1581): -2; (_<=11, _<=11): 1; (_<=11, x1): 2; (_<=12, #[_+1581]): 2; (_<=12, _+1582): -2; (_<=12, _+1583): -4; (_<=12, _<=12): 1; (_<=12, x2): 2; (x0, #[_+1580]): -4; (x0, _+1580): -2; (x0, x0): 1; (x1, #[_+1580]): 2; (x1, #[_+1581]): -4; (x1, _+1581): -2; (x1, x1): 1; (x2, #[_+1581]): 2; (x2, _+1582): -2; (x2, _+1583): -4; (x2, x2): 1; (z0, #[_+1550]): -4; (z0, _+1550): -2; (z0, z0): 3; (z1, #[_+1550]): 2; (z1, #[_+1551]): -4; (z1, _+1551): -2; (z1, z1): 1; (z2, #[_+1551]): 2; (z2, _+1552): -2; (z2, _+1553): -4; (z2, z2): 3; 
x\3b:5\ _+155\4b:5\; y\3b:5\; z\3b:0\ 
x\3b:1\ _+155\4b:5\; y\3b:5\; z\3b:0\ 
x\3b:4\ _+155\4b:5\; y\3b:5\; z\3b:0\ 
x\3b:0\ _+155\4b:5\; y\3b:5\; z\3b:0\ 
x\3b:7\ _+155\4b:7\; y\3b:5\; z\3b:2\ 
x\3b:3\ _+155\4b:7\; y\3b:5\; z\3b:2\ 
x\3b:5\ _+155\4b:7\; y\3b:5\; z\3b:2\ 
x\3b:1\ _+155\4b:7\; y\3b:5\; z\3b:2\ 
x\3b:6\ _+155\4b:7\; y\3b:5\; z\3b:2\ 
x\3b:2\ _+155\4b:7\; y\3b:5\; z\3b:2\ 
x\3b:4\ _+155\4b:7\; y\3b:5\; z\3b:2\ 
x\3b:0\ _+155\4b:7\; y\3b:5\; z\3b:2\ 
x\3b:3\ _+155\4b:5\; y\3b:5\; z\3b:0\ 
x\3b:2\ _+155\4b:5\; y\3b:5\; z\3b:0\ 
x\3b:6\ _+155\4b:6\; y\3b:5\; z\3b:1\ 
x\3b:2\ _+155\4b:6\; y\3b:5\; z\3b:1\ 
x\3b:4\ _+155\4b:6\; y\3b:5\; z\3b:1\ 
x\3b:0\ _+155\4b:6\; y\3b:5\; z\3b:1\ 
x\3b:5\ _+155\4b:6\; y\3b:5\; z\3b:1\ 
x\3b:1\ _+155\4b:6\; y\3b:5\; z\3b:1\ 
x\3b:3\ _+155\4b:6\; y\3b:5\; z\3b:1\ 


((y\3q:5\ + z\3q:U\) == x\3q:U\)
 decomposed: 
_+1610\S\ == x0\S\; _+1610\S\ = y0\1\ .+ z0\S\; _+1611\S\ == x1\S\; _+1611\S\ = y1\0\ + z1\S\ + #[_+1610]\S\; _+1612\S\ == x2\S\; _+1612\S\ = y2\1\ + z2\S\ + #[_+1611]\S\; _+1613\S\ == x3\0\; _+1613\S\ = #[_+1612]\S\; 
Qubo: (#[_+1610], #[_+1610]): 1; (#[_+1610], #[_+1611]): -4; (#[_+1610], _+1611): -2; (#[_+1611], #[_+1611]): 7; (#[_+1611], _+1612): -2; (#[_+1611], _+1613): -4; (_+1610, #[_+1610]): 4; (_+1610, _+1610): 0; (_+1611, #[_+1611]): 4; (_+1611, _+1611): 2; (_+1612, _+1612): 0; (_+1612, _+1613): 4; (_+1613, _+1613): 1; (x0, _+1610): -2; (x0, x0): 1; (x1, _+1611): -2; (x1, x1): 1; (x2, _+1612): -2; (x2, x2): 1; (z0, #[_+1610]): -4; (z0, _+1610): -2; (z0, z0): 3; (z1, #[_+1610]): 2; (z1, #[_+1611]): -4; (z1, _+1611): -2; (z1, z1): 1; (z2, #[_+1611]): 2; (z2, _+1612): -2; (z2, _+1613): -4; (z2, z2): 3; 
_+161\4b:5\; y\3b:5\; z\3b:0\; x\3b:5\
_+161\4b:7\; y\3b:5\; z\3b:2\; x\3b:7\
_+161\4b:6\; y\3b:5\; z\3b:1\; x\3b:6\

((y\3q:5\ + z\3q:U\) != x\4q:U\)
 decomposed: 
{ _+1670\S\ = _!=180\S\ .+ x0\S\; _1\1\ = _!=182\S\ | _|68\S\; _|68\S\ = _!=181\S\ | _!=180\S\; }; { _+1671\S\ = _!=181\S\ + x1\S\ + #[_+1670]\S\; }; { _+1672\S\ = _!=182\S\ + x2\S\ + #[_+1671]\S\; }; { _+1673\S\ = #[_+1672]\S\; }; 
Qubo: (#[_+1670], #[_+1670]): 5; (#[_+1670], #[_+1671]): -4; (#[_+1670], _+1671): -2; (#[_+1671], #[_+1671]): 5; (#[_+1671], _+1672): -2; (#[_+1671], _+1673): -4; (_!=180, #[_+1670]): -4; (_!=180, _!=180): 2; (_!=180, _+1670): -2; (_!=180, _|68): -2; (_!=180, x0): 2; (_!=181, #[_+1670]): 2; (_!=181, #[_+1671]): -4; (_!=181, _!=180): 1; (_!=181, _!=181): 2; (_!=181, _+1671): -2; (_!=181, _|68): -2; (_!=181, x1): 2; (_!=182, #[_+1671]): 2; (_!=182, _!=182): 0; (_!=182, _+1672): -2; (_!=182, _+1673): -4; (_!=182, _|68): 1; (_!=182, x2): 2; (_+1670, #[_+1670]): 4; (_+1670, _+1670): 1; (_+1671, #[_+1671]): 4; (_+1671, _+1671): 1; (_+1672, _+1672): 1; (_+1672, _+1673): 4; (_+1673, _+1673): 4; (_|68, _|68): 0; (x0, #[_+1670]): -4; (x0, _+1670): -2; (x0, x0): 1; (x1, #[_+1670]): 2; (x1, #[_+1671]): -4; (x1, _+1671): -2; (x1, x1): 1; (x2, #[_+1671]): 2; (x2, _+1672): -2; (x2, _+1673): -4; (x2, x2): 1; 
_+164\4b:15\; y\3b:5\; z\3b:7\ x\3b:4\ wrong+
_+164\4b:15\; y\3b:5\; z\3b:7\ x\3b:0\ wrong+
_+164\4b:15\; y\3b:5\; z\3b:7\ x\3b:6\ wrong+
_+164\4b:15\; y\3b:5\; z\3b:7\ x\3b:2\ wrong+
_+164\4b:15\; y\3b:5\; z\3b:7\ x\3b:5\ wrong+
_+164\4b:15\; y\3b:5\; z\3b:7\ x\3b:1\ wrong+
_+164\4b:15\; y\3b:5\; z\3b:7\ x\3b:7\ wrong+
_+164\4b:15\; y\3b:5\; z\3b:7\ x\3b:3\ wrong+
_+164\4b:15\; y\3b:5\; z\3b:7\ x\3b:0\ wrong+
_+164\4b:15\; y\3b:5\; z\3b:7\ x\3b:4\ wrong+
_+164\4b:15\; y\3b:5\; z\3b:7\ x\3b:1\ wrong+
_+164\4b:15\; y\3b:5\; z\3b:7\ x\3b:5\ wrong+
_+164\4b:15\; y\3b:5\; z\3b:7\ x\3b:4\ wrong+
_+164\4b:15\; y\3b:5\; z\3b:7\ x\3b:0\ wrong+
_+164\4b:15\; y\3b:5\; z\3b:7\ x\3b:5\ wrong+
_+164\4b:15\; y\3b:5\; z\3b:7\ x\3b:1\ wrong+
_+164\4b:15\; y\3b:5\; z\3b:7\ x\3b:0\ wrong+
_+164\4b:15\; y\3b:5\; z\3b:7\ x\3b:4\ wrong+
_+164\4b:15\; y\3b:5\; z\3b:7\ x\3b:2\ wrong+
_+164\4b:15\; y\3b:5\; z\3b:7\ x\3b:6\ wrong+
_+164\4b:15\; y\3b:5\; z\3b:7\ x\3b:4\ wrong+
_+164\4b:15\; y\3b:5\; z\3b:7\ x\3b:0\ wrong+
_+164\4b:15\; y\3b:5\; z\3b:7\ x\3b:6\ wrong+
_+164\4b:15\; y\3b:5\; z\3b:7\ x\3b:2\ wrong+
_+164\4b:15\; y\3b:5\; z\3b:7\ x\3b:0\ wrong+
_+164\4b:15\; y\3b:5\; z\3b:7\ x\3b:4\ wrong+
_+164\4b:15\; y\3b:5\; z\3b:7\ x\3b:4\ wrong+
_+164\4b:15\; y\3b:5\; z\3b:7\ x\3b:0\ wrong+
_+164\4b:15\; y\3b:5\; z\3b:7\ x\3b:1\ wrong+
_+164\4b:15\; y\3b:5\; z\3b:7\ x\3b:5\ wrong+
_+164\4b:15\; y\3b:5\; z\3b:7\ x\3b:5\ wrong+
_+164\4b:15\; y\3b:5\; z\3b:7\ x\3b:1\ wrong+
_+164\4b:15\; y\3b:5\; z\3b:7\ x\3b:6\ wrong+
_+164\4b:15\; y\3b:5\; z\3b:7\ x\3b:2\ wrong+
_+164\4b:15\; y\3b:5\; z\3b:7\ x\3b:7\ wrong+
_+164\4b:15\; y\3b:5\; z\3b:7\ x\3b:3\ wrong+
_+164\4b:15\; y\3b:5\; z\3b:7\ x\3b:2\ wrong+
_+164\4b:15\; y\3b:5\; z\3b:7\ x\3b:6\ wrong+
_+164\4b:15\; y\3b:5\; z\3b:7\ x\3b:3\ wrong+
_+164\4b:15\; y\3b:5\; z\3b:7\ x\3b:7\ wrong+
_+164\4b:15\; y\3b:5\; z\3b:7\ x\3b:6\ wrong+
_+164\4b:15\; y\3b:5\; z\3b:7\ x\3b:2\ wrong+
_+164\4b:15\; y\3b:5\; z\3b:7\ x\3b:2\ wrong+
_+164\4b:15\; y\3b:5\; z\3b:7\ x\3b:6\ wrong+
_+164\4b:15\; y\3b:5\; z\3b:7\ x\3b:7\ wrong+
_+164\4b:15\; y\3b:5\; z\3b:7\ x\3b:3\ wrong+
_+164\4b:15\; y\3b:5\; z\3b:7\ x\3b:3\ wrong+
_+164\4b:15\; y\3b:5\; z\3b:7\ x\3b:7\ wrong+
_+164\4b:15\; y\3b:5\; z\3b:7\ x\3b:5\ wrong+
_+164\4b:15\; y\3b:5\; z\3b:7\ x\3b:1\ wrong+
_+164\4b:15\; y\3b:5\; z\3b:7\ x\3b:7\ wrong+
_+164\4b:15\; y\3b:5\; z\3b:7\ x\3b:3\ wrong+
_+164\4b:15\; y\3b:5\; z\3b:7\ x\3b:1\ wrong+
_+164\4b:15\; y\3b:5\; z\3b:7\ x\3b:5\ wrong+
_+164\4b:15\; y\3b:5\; z\3b:7\ x\3b:3\ wrong+
_+164\4b:15\; y\3b:5\; z\3b:7\ x\3b:7\ wrong+


((y\3q:5\ + z\3q:U\) > x\5q:U\)
 decomposed: 
{ x0\S\ = y0\1\ + z0\S\ + _>20\S\; _0\0\ != x4\S\; }; { x1\S\ = _>21\S\ .+ _+1701\S\; _+1701\S\ = y1\0\ + z1\S\ + #[x0]\S\; }; { x2\S\ = _>22\S\ + _+1702\S\ + #[x1]\S\; _+1702\S\ = y2\1\ + z2\S\ + #[_+1701]\S\; }; { x3\S\ = _>23\S\ + _+1703\S\ + #[x2]\S\; }; { x4\S\ = #[x3]\S\; }; 
Qubo: (#[_+1701], #[_+1701]): 7; (#[_+1701], _+1702): -2; (#[_+1701], _+1703): -4; (#[x0], #[_+1701]): -4; (#[x0], #[x0]): 1; (#[x0], _+1701): -2; (#[x1], #[x1]): 5; (#[x1], #[x2]): -4; (#[x1], x2): -2; (#[x2], #[x2]): 5; (#[x2], x3): -2; (#[x2], x4): -4; (_+1701, #[_+1701]): 4; (_+1701, #[x1]): -4; (_+1701, _+1701): 2; (_+1701, x1): -2; (_+1702, #[x1]): 2; (_+1702, #[x2]): -4; (_+1702, _+1702): 0; (_+1702, _+1703): 4; (_+1702, x2): -2; (_+1703, #[x2]): 2; (_+1703, _+1703): 1; (_+1703, x3): -2; (_+1703, x4): -4; (_>20, #[x0]): -4; (_>20, _>20): 3; (_>20, x0): -2; (_>21, #[x1]): -4; (_>21, _+1701): 2; (_>21, _>21): 1; (_>21, x1): -2; (_>22, #[x1]): 2; (_>22, #[x2]): -4; (_>22, _+1702): 2; (_>22, _>22): 1; (_>22, x2): -2; (_>23, #[x2]): 2; (_>23, _+1703): 2; (_>23, _>23): 1; (_>23, x3): -2; (_>23, x4): -4; (x0, #[x0]): 4; (x0, x0): -1; (x1, #[x1]): 4; (x1, x1): 1; (x2, #[x2]): 4; (x2, x2): 1; (x3, x3): 1; (x3, x4): 4; (x4, x4): 3; (z0, #[x0]): -4; (z0, _>20): 2; (z0, x0): -2; (z0, z0): 3; (z1, #[_+1701]): -4; (z1, #[x0]): 2; (z1, _+1701): -2; (z1, z1): 1; (z2, #[_+1701]): 2; (z2, _+1702): -2; (z2, _+1703): -4; (z2, z2): 3; 
_+170\4b:9\; y\3b:5\; z\3b:4\ x\3b:1\ 
_+170\4b:9\; y\3b:5\; z\3b:4\ x\3b:5\ 
_+170\4b:9\; y\3b:5\; z\3b:4\ x\3b:3\ 
_+170\4b:9\; y\3b:5\; z\3b:4\ x\3b:7\ 
_+170\4b:11\; y\3b:5\; z\3b:6\ x\3b:3\ 
_+170\4b:11\; y\3b:5\; z\3b:6\ x\3b:7\ 
_+170\4b:5\; y\3b:5\; z\3b:0\ x\3b:1\ 
_+170\4b:5\; y\3b:5\; z\3b:0\ x\3b:3\ 
_+170\4b:7\; y\3b:5\; z\3b:2\ x\3b:3\ 
_+170\4b:11\; y\3b:5\; z\3b:6\ x\3b:5\ 
_+170\4b:11\; y\3b:5\; z\3b:6\ x\3b:1\ 
_+170\4b:11\; y\3b:5\; z\3b:6\ x\3b:1\ 
_+170\4b:7\; y\3b:5\; z\3b:2\ x\3b:1\ 
_+170\4b:7\; y\3b:5\; z\3b:2\ x\3b:5\ 
_+170\4b:11\; y\3b:5\; z\3b:5\ x\3b:2\ wrong+
_+170\4b:11\; y\3b:5\; z\3b:5\ x\3b:6\ wrong+
_+170\4b:11\; y\3b:5\; z\3b:4\ x\3b:2\ wrong+
_+170\4b:11\; y\3b:5\; z\3b:5\ x\3b:3\ wrong+
_+170\4b:11\; y\3b:5\; z\3b:4\ x\3b:6\ wrong+
_+170\4b:11\; y\3b:5\; z\3b:5\ x\3b:7\ wrong+
_+170\4b:7\; y\3b:5\; z\3b:1\ x\3b:2\ wrong+
_+170\4b:7\; y\3b:5\; z\3b:0\ x\3b:2\ wrong+
_+170\4b:7\; y\3b:5\; z\3b:1\ x\3b:3\ wrong+
_+170\4b:9\; y\3b:5\; z\3b:3\ x\3b:0\ wrong+
_+170\4b:9\; y\3b:5\; z\3b:3\ x\3b:4\ wrong+
_+170\4b:9\; y\3b:5\; z\3b:3\ x\3b:2\ wrong+
_+170\4b:9\; y\3b:5\; z\3b:3\ x\3b:6\ wrong+
_+170\4b:9\; y\3b:5\; z\3b:2\ x\3b:0\ wrong+
_+170\4b:9\; y\3b:5\; z\3b:3\ x\3b:1\ wrong+
_+170\4b:9\; y\3b:5\; z\3b:2\ x\3b:4\ wrong+
_+170\4b:9\; y\3b:5\; z\3b:3\ x\3b:5\ wrong+
_+170\4b:9\; y\3b:5\; z\3b:2\ x\3b:2\ wrong+
_+170\4b:9\; y\3b:5\; z\3b:3\ x\3b:3\ wrong+
_+170\4b:9\; y\3b:5\; z\3b:2\ x\3b:6\ wrong+
_+170\4b:9\; y\3b:5\; z\3b:3\ x\3b:7\ wrong+
_+170\4b:13\; y\3b:5\; z\3b:7\ x\3b:4\ wrong+
_+170\4b:13\; y\3b:5\; z\3b:7\ x\3b:6\ wrong+
_+170\4b:13\; y\3b:5\; z\3b:6\ x\3b:4\ wrong+
_+170\4b:13\; y\3b:5\; z\3b:7\ x\3b:5\ wrong+
_+170\4b:13\; y\3b:5\; z\3b:6\ x\3b:6\ wrong+
_+170\4b:13\; y\3b:5\; z\3b:7\ x\3b:7\ wrong+
_+170\4b:13\; y\3b:5\; z\3b:7\ x\3b:0\ wrong+
_+170\4b:13\; y\3b:5\; z\3b:7\ x\3b:0\ wrong+
_+170\4b:13\; y\3b:5\; z\3b:7\ x\3b:2\ wrong+
_+170\4b:13\; y\3b:5\; z\3b:7\ x\3b:2\ wrong+
_+170\4b:13\; y\3b:5\; z\3b:6\ x\3b:0\ wrong+
_+170\4b:13\; y\3b:5\; z\3b:7\ x\3b:1\ wrong+
_+170\4b:13\; y\3b:5\; z\3b:6\ x\3b:0\ wrong+
_+170\4b:13\; y\3b:5\; z\3b:7\ x\3b:1\ wrong+
_+170\4b:13\; y\3b:5\; z\3b:6\ x\3b:2\ wrong+
_+170\4b:13\; y\3b:5\; z\3b:7\ x\3b:3\ wrong+
_+170\4b:13\; y\3b:5\; z\3b:6\ x\3b:2\ wrong+
_+170\4b:13\; y\3b:5\; z\3b:7\ x\3b:3\ wrong+
_+170\4b:11\; y\3b:5\; z\3b:5\ x\3b:4\ wrong+
_+170\4b:11\; y\3b:5\; z\3b:4\ x\3b:4\ wrong+
_+170\4b:11\; y\3b:5\; z\3b:5\ x\3b:5\ wrong+
_+170\4b:11\; y\3b:5\; z\3b:5\ x\3b:0\ wrong+
_+170\4b:11\; y\3b:5\; z\3b:5\ x\3b:0\ wrong+
_+170\4b:11\; y\3b:5\; z\3b:4\ x\3b:0\ wrong+
_+170\4b:11\; y\3b:5\; z\3b:5\ x\3b:1\ wrong+
_+170\4b:11\; y\3b:5\; z\3b:4\ x\3b:0\ wrong+
_+170\4b:11\; y\3b:5\; z\3b:5\ x\3b:1\ wrong+
_+170\4b:7\; y\3b:5\; z\3b:1\ x\3b:0\ wrong+
_+170\4b:7\; y\3b:5\; z\3b:1\ x\3b:4\ wrong+
_+170\4b:7\; y\3b:5\; z\3b:0\ x\3b:0\ wrong+
_+170\4b:7\; y\3b:5\; z\3b:1\ x\3b:1\ wrong+
_+170\4b:7\; y\3b:5\; z\3b:0\ x\3b:4\ wrong+
_+170\4b:7\; y\3b:5\; z\3b:1\ x\3b:5\ wrong+

((y\3q:5\ + z\3q:U\) >= x\4q:U\)
 decomposed: 
{ _+1770\S\ == _+1800\S\; _+1770\S\ = y0\1\ .+ z0\S\_+1800\S\ = _>=20\S\ .+ x0\S\; _0\0\ == _+1773\S\; }; { _+1771\S\ == _+1801\S\; _+1771\S\ = y1\0\ + z1\S\ + #[_+1770]\S\_+1801\S\ = _>=21\S\ + x1\S\ + #[_+1800]\S\; }; { _+1772\S\ == _+1802\S\; _+1772\S\ = y2\1\ + z2\S\ + #[_+1771]\S\_+1802\S\ = _>=22\S\ + x2\S\ + #[_+1801]\S\; }; { _+1773\S\ == _+1803\S\; _+1773\S\ = #[_+1772]\S\_+1803\S\ = #[_+1802]\S\; }; 
Qubo: (#[_+1770], #[_+1770]): 1; (#[_+1770], #[_+1771]): -4; (#[_+1770], _+1771): -2; (#[_+1771], #[_+1771]): 7; (#[_+1771], _+1772): -2; (#[_+1771], _+1773): -4; (#[_+1800], #[_+1800]): 5; (#[_+1800], #[_+1801]): -4; (#[_+1800], _+1801): -2; (#[_+1801], #[_+1801]): 5; (#[_+1801], _+1802): -2; (#[_+1801], _+1803): -4; (_+1770, #[_+1770]): 4; (_+1770, _+1770): 0; (_+1771, #[_+1771]): 4; (_+1771, _+1771): 2; (_+1772, _+1772): 0; (_+1772, _+1773): 4; (_+1773, _+1773): 2; (_+1800, #[_+1800]): 4; (_+1800, _+1770): -2; (_+1800, _+1800): 2; (_+1801, #[_+1801]): 4; (_+1801, _+1771): -2; (_+1801, _+1801): 2; (_+1802, _+1772): -2; (_+1802, _+1802): 2; (_+1802, _+1803): 4; (_+1803, _+1773): -2; (_+1803, _+1803): 5; (_>=20, #[_+1800]): -4; (_>=20, _+1800): -2; (_>=20, _>=20): 1; (_>=20, x0): 2; (_>=21, #[_+1800]): 2; (_>=21, #[_+1801]): -4; (_>=21, _+1801): -2; (_>=21, _>=21): 1; (_>=21, x1): 2; (_>=22, #[_+1801]): 2; (_>=22, _+1802): -2; (_>=22, _+1803): -4; (_>=22, _>=22): 1; (_>=22, x2): 2; (x0, #[_+1800]): -4; (x0, _+1800): -2; (x0, x0): 1; (x1, #[_+1800]): 2; (x1, #[_+1801]): -4; (x1, _+1801): -2; (x1, x1): 1; (x2, #[_+1801]): 2; (x2, _+1802): -2; (x2, _+1803): -4; (x2, x2): 1; (z0, #[_+1770]): -4; (z0, _+1770): -2; (z0, z0): 3; (z1, #[_+1770]): 2; (z1, #[_+1771]): -4; (z1, _+1771): -2; (z1, z1): 1; (z2, #[_+1771]): 2; (z2, _+1772): -2; (z2, _+1773): -4; (z2, z2): 3; 
_+177\4b:5\; y\3b:5\; z\3b:0\ x\3b:5\ 
_+177\4b:5\; y\3b:5\; z\3b:0\ x\3b:1\ 
_+177\4b:5\; y\3b:5\; z\3b:0\ x\3b:4\ 
_+177\4b:5\; y\3b:5\; z\3b:0\ x\3b:0\ 
_+177\4b:7\; y\3b:5\; z\3b:2\ x\3b:7\ 
_+177\4b:7\; y\3b:5\; z\3b:2\ x\3b:3\ 
_+177\4b:7\; y\3b:5\; z\3b:2\ x\3b:5\ 
_+177\4b:7\; y\3b:5\; z\3b:2\ x\3b:1\ 
_+177\4b:7\; y\3b:5\; z\3b:2\ x\3b:6\ 
_+177\4b:7\; y\3b:5\; z\3b:2\ x\3b:2\ 
_+177\4b:7\; y\3b:5\; z\3b:2\ x\3b:4\ 
_+177\4b:7\; y\3b:5\; z\3b:2\ x\3b:0\ 
_+177\4b:5\; y\3b:5\; z\3b:0\ x\3b:3\ 
_+177\4b:5\; y\3b:5\; z\3b:0\ x\3b:2\ 
_+177\4b:6\; y\3b:5\; z\3b:1\ x\3b:6\ 
_+177\4b:6\; y\3b:5\; z\3b:1\ x\3b:2\ 
_+177\4b:6\; y\3b:5\; z\3b:1\ x\3b:4\ 
_+177\4b:6\; y\3b:5\; z\3b:1\ x\3b:0\ 
_+177\4b:6\; y\3b:5\; z\3b:1\ x\3b:5\ 
_+177\4b:6\; y\3b:5\; z\3b:1\ x\3b:1\ 
_+177\4b:6\; y\3b:5\; z\3b:1\ x\3b:3\ 
There are no combinations for z\3b:3\

((y\3q:5\ + z\3q:U\) < x\4q:U\)
 decomposed: 
{ _+1830\S\ == _+1860\S\; _+1830\S\ = y0\1\ .+ z0\S\_+1860\S\ = _<30\S\ .+ x0\S\; _0\0\ != _+1863\S\; }; { _+1831\S\ == _+1861\S\; _+1831\S\ = y1\0\ + z1\S\ + #[_+1830]\S\_+1861\S\ = _<31\S\ + x1\S\ + #[_+1860]\S\; }; { _+1832\S\ == _+1862\S\; _+1832\S\ = y2\1\ + z2\S\ + #[_+1831]\S\_+1862\S\ = _<32\S\ + x2\S\ + #[_+1861]\S\; }; { _+1833\S\ == _+1863\S\; _+1833\S\ = #[_+1832]\S\_+1863\S\ = #[_+1862]\S\; }; 
Qubo: (#[_+1830], #[_+1830]): 1; (#[_+1830], #[_+1831]): -4; (#[_+1830], _+1831): -2; (#[_+1831], #[_+1831]): 7; (#[_+1831], _+1832): -2; (#[_+1831], _+1833): -4; (#[_+1860], #[_+1860]): 5; (#[_+1860], #[_+1861]): -4; (#[_+1860], _+1861): -2; (#[_+1861], #[_+1861]): 5; (#[_+1861], _+1862): -2; (#[_+1861], _+1863): -4; (_+1830, #[_+1830]): 4; (_+1830, _+1830): 0; (_+1831, #[_+1831]): 4; (_+1831, _+1831): 2; (_+1832, _+1832): 0; (_+1832, _+1833): 4; (_+1833, _+1833): 1; (_+1860, #[_+1860]): 4; (_+1860, _+1830): -2; (_+1860, _+1860): 2; (_+1861, #[_+1861]): 4; (_+1861, _+1831): -2; (_+1861, _+1861): 2; (_+1862, _+1832): -2; (_+1862, _+1862): 2; (_+1862, _+1863): 4; (_+1863, _+1833): -2; (_+1863, _+1863): 4; (_<30, #[_+1860]): -4; (_<30, _+1860): -2; (_<30, _<30): 1; (_<30, x0): 2; (_<31, #[_+1860]): 2; (_<31, #[_+1861]): -4; (_<31, _+1861): -2; (_<31, _<31): 1; (_<31, x1): 2; (_<32, #[_+1861]): 2; (_<32, _+1862): -2; (_<32, _+1863): -4; (_<32, _<32): 1; (_<32, x2): 2; (x0, #[_+1860]): -4; (x0, _+1860): -2; (x0, x0): 1; (x1, #[_+1860]): 2; (x1, #[_+1861]): -4; (x1, _+1861): -2; (x1, x1): 1; (x2, #[_+1861]): 2; (x2, _+1862): -2; (x2, _+1863): -4; (x2, x2): 1; (z0, #[_+1830]): -4; (z0, _+1830): -2; (z0, z0): 3; (z1, #[_+1830]): 2; (z1, #[_+1831]): -4; (z1, _+1831): -2; (z1, z1): 1; (z2, #[_+1831]): 2; (z2, _+1832): -2; (z2, _+1833): -4; (z2, z2): 3; 
_+183\4b:9\; y\3b:5\; z\3b:4\ x\3b:5\ wrong <
_+183\4b:9\; y\3b:5\; z\3b:4\ x\3b:4\ wrong <
_+183\4b:11\; y\3b:5\; z\3b:6\ x\3b:7\ wrong <
_+183\4b:11\; y\3b:5\; z\3b:6\ x\3b:5\ wrong <
_+183\4b:11\; y\3b:5\; z\3b:6\ x\3b:6\ wrong <
_+183\4b:11\; y\3b:5\; z\3b:6\ x\3b:4\ wrong <
_+183\4b:9\; y\3b:5\; z\3b:4\ x\3b:7\ wrong <
_+183\4b:9\; y\3b:5\; z\3b:4\ x\3b:3\ wrong <
_+183\4b:9\; y\3b:5\; z\3b:4\ x\3b:6\ wrong <
_+183\4b:9\; y\3b:5\; z\3b:4\ x\3b:2\ wrong <
_+183\4b:10\; y\3b:5\; z\3b:5\ x\3b:6\ wrong <
_+183\4b:10\; y\3b:5\; z\3b:5\ x\3b:4\ wrong <
_+183\4b:8\; y\3b:5\; z\3b:3\ x\3b:4\ wrong <
_+183\4b:8\; y\3b:5\; z\3b:3\ x\3b:6\ wrong <
_+183\4b:8\; y\3b:5\; z\3b:3\ x\3b:2\ wrong <
_+183\4b:12\; y\3b:5\; z\3b:7\ x\3b:6\ wrong <
_+183\4b:10\; y\3b:5\; z\3b:5\ x\3b:5\ wrong <
_+183\4b:10\; y\3b:5\; z\3b:5\ x\3b:7\ wrong <
_+183\4b:10\; y\3b:5\; z\3b:5\ x\3b:3\ wrong <
_+183\4b:8\; y\3b:5\; z\3b:3\ x\3b:7\ wrong <
_+183\4b:8\; y\3b:5\; z\3b:3\ x\3b:3\ wrong <
_+183\4b:8\; y\3b:5\; z\3b:3\ x\3b:5\ wrong <
_+183\4b:8\; y\3b:5\; z\3b:3\ x\3b:1\ wrong <
_+183\4b:12\; y\3b:5\; z\3b:7\ x\3b:7\ wrong <
_+183\4b:12\; y\3b:5\; z\3b:7\ x\3b:5\ wrong <


((y\3q:5\ + z\3q:U\) <= x\5q:U\)
 decomposed: 
{ x0\S\ = y0\1\ + z0\S\ + _<=20\S\; _0\0\ == x4\S\; }; { x1\S\ = _<=21\S\ .+ _+1891\S\; _+1891\S\ = y1\0\ + z1\S\ + #[x0]\S\; }; { x2\S\ = _<=22\S\ + _+1892\S\ + #[x1]\S\; _+1892\S\ = y2\1\ + z2\S\ + #[_+1891]\S\; }; { x3\S\ = _<=23\S\ + _+1893\S\ + #[x2]\S\; }; { x4\S\ = #[x3]\S\; }; 
Qubo: (#[_+1891], #[_+1891]): 7; (#[_+1891], _+1892): -2; (#[_+1891], _+1893): -4; (#[x0], #[_+1891]): -4; (#[x0], #[x0]): 1; (#[x0], _+1891): -2; (#[x1], #[x1]): 5; (#[x1], #[x2]): -4; (#[x1], x2): -2; (#[x2], #[x2]): 5; (#[x2], x3): -2; (#[x2], x4): -4; (_+1891, #[_+1891]): 4; (_+1891, #[x1]): -4; (_+1891, _+1891): 2; (_+1891, x1): -2; (_+1892, #[x1]): 2; (_+1892, #[x2]): -4; (_+1892, _+1892): 0; (_+1892, _+1893): 4; (_+1892, x2): -2; (_+1893, #[x2]): 2; (_+1893, _+1893): 1; (_+1893, x3): -2; (_+1893, x4): -4; (_<=20, #[x0]): -4; (_<=20, _<=20): 3; (_<=20, x0): -2; (_<=21, #[x1]): -4; (_<=21, _+1891): 2; (_<=21, _<=21): 1; (_<=21, x1): -2; (_<=22, #[x1]): 2; (_<=22, #[x2]): -4; (_<=22, _+1892): 2; (_<=22, _<=22): 1; (_<=22, x2): -2; (_<=23, #[x2]): 2; (_<=23, _+1893): 2; (_<=23, _<=23): 1; (_<=23, x3): -2; (_<=23, x4): -4; (x0, #[x0]): 4; (x0, x0): -1; (x1, #[x1]): 4; (x1, x1): 1; (x2, #[x2]): 4; (x2, x2): 1; (x3, x3): 1; (x3, x4): 4; (x4, x4): 5; (z0, #[x0]): -4; (z0, _<=20): 2; (z0, x0): -2; (z0, z0): 3; (z1, #[_+1891]): -4; (z1, #[x0]): 2; (z1, _+1891): -2; (z1, z1): 1; (z2, #[_+1891]): 2; (z2, _+1892): -2; (z2, _+1893): -4; (z2, z2): 3; 
_+189\4b:5\; y\3b:5\; z\3b:0\ x\3b:5\ 
_+189\4b:5\; y\3b:5\; z\3b:0\ x\3b:5\ 
_+189\4b:5\; y\3b:5\; z\3b:0\ x\3b:7\ 
_+189\4b:5\; y\3b:5\; z\3b:0\ x\3b:7\ 
_+189\4b:7\; y\3b:5\; z\3b:2\ x\3b:7\ 
_+189\4b:7\; y\3b:5\; z\3b:2\ x\3b:7\ 
_+189\4b:9\; y\3b:5\; z\3b:4\ x\3b:1\ wrong <=
_+189\4b:9\; y\3b:5\; z\3b:4\ x\3b:5\ wrong <=
_+189\4b:9\; y\3b:5\; z\3b:4\ x\3b:3\ wrong <=
_+189\4b:9\; y\3b:5\; z\3b:4\ x\3b:7\ wrong <=
_+189\4b:11\; y\3b:5\; z\3b:6\ x\3b:3\ wrong <=
_+189\4b:11\; y\3b:5\; z\3b:6\ x\3b:7\ wrong <=
_+189\4b:5\; y\3b:5\; z\3b:0\ x\3b:1\ wrong <=
_+189\4b:5\; y\3b:5\; z\3b:0\ x\3b:3\ wrong <=
_+189\4b:7\; y\3b:5\; z\3b:2\ x\3b:3\ wrong <=
_+189\4b:11\; y\3b:5\; z\3b:5\ x\3b:2\ wrong +<=
_+189\4b:11\; y\3b:5\; z\3b:5\ x\3b:6\ wrong +<=
_+189\4b:11\; y\3b:5\; z\3b:4\ x\3b:2\ wrong +<=
_+189\4b:11\; y\3b:5\; z\3b:5\ x\3b:3\ wrong +<=
_+189\4b:11\; y\3b:5\; z\3b:4\ x\3b:6\ wrong +<=
_+189\4b:11\; y\3b:5\; z\3b:5\ x\3b:7\ wrong +<=
_+189\4b:7\; y\3b:5\; z\3b:1\ x\3b:6\ wrong +<=
_+189\4b:7\; y\3b:5\; z\3b:1\ x\3b:6\ wrong +<=
_+189\4b:7\; y\3b:5\; z\3b:0\ x\3b:6\ wrong +<=
_+189\4b:7\; y\3b:5\; z\3b:1\ x\3b:7\ wrong +
_+189\4b:7\; y\3b:5\; z\3b:0\ x\3b:6\ wrong +<=
_+189\4b:7\; y\3b:5\; z\3b:1\ x\3b:7\ wrong +
_+189\4b:7\; y\3b:5\; z\3b:1\ x\3b:2\ wrong +<=
_+189\4b:7\; y\3b:5\; z\3b:0\ x\3b:2\ wrong +<=
_+189\4b:7\; y\3b:5\; z\3b:1\ x\3b:3\ wrong +<=
_+189\4b:9\; y\3b:5\; z\3b:3\ x\3b:0\ wrong +<=
_+189\4b:9\; y\3b:5\; z\3b:3\ x\3b:4\ wrong +<=
_+189\4b:9\; y\3b:5\; z\3b:3\ x\3b:2\ wrong +<=
_+189\4b:9\; y\3b:5\; z\3b:3\ x\3b:6\ wrong +<=
_+189\4b:9\; y\3b:5\; z\3b:2\ x\3b:0\ wrong +<=
_+189\4b:9\; y\3b:5\; z\3b:3\ x\3b:1\ wrong +<=
_+189\4b:9\; y\3b:5\; z\3b:2\ x\3b:4\ wrong +<=
_+189\4b:9\; y\3b:5\; z\3b:3\ x\3b:5\ wrong +<=
_+189\4b:9\; y\3b:5\; z\3b:2\ x\3b:2\ wrong +<=
_+189\4b:9\; y\3b:5\; z\3b:3\ x\3b:3\ wrong +<=
_+189\4b:9\; y\3b:5\; z\3b:2\ x\3b:6\ wrong +<=
_+189\4b:9\; y\3b:5\; z\3b:3\ x\3b:7\ wrong +<=
_+189\4b:13\; y\3b:5\; z\3b:7\ x\3b:4\ wrong +<=
_+189\4b:13\; y\3b:5\; z\3b:7\ x\3b:6\ wrong +<=
_+189\4b:13\; y\3b:5\; z\3b:6\ x\3b:4\ wrong +<=
_+189\4b:13\; y\3b:5\; z\3b:7\ x\3b:5\ wrong +<=
_+189\4b:13\; y\3b:5\; z\3b:6\ x\3b:6\ wrong +<=
_+189\4b:13\; y\3b:5\; z\3b:7\ x\3b:7\ wrong +<=
_+189\4b:11\; y\3b:5\; z\3b:6\ x\3b:5\ wrong <=
_+189\4b:7\; y\3b:5\; z\3b:2\ x\3b:1\ wrong <=
_+189\4b:7\; y\3b:5\; z\3b:2\ x\3b:5\ wrong <=
_+189\4b:11\; y\3b:5\; z\3b:5\ x\3b:4\ wrong +<=
_+189\4b:11\; y\3b:5\; z\3b:4\ x\3b:4\ wrong +<=
_+189\4b:11\; y\3b:5\; z\3b:5\ x\3b:5\ wrong +<=
_+189\4b:7\; y\3b:5\; z\3b:1\ x\3b:0\ wrong +<=
_+189\4b:7\; y\3b:5\; z\3b:1\ x\3b:4\ wrong +<=
_+189\4b:7\; y\3b:5\; z\3b:0\ x\3b:0\ wrong +<=
_+189\4b:7\; y\3b:5\; z\3b:1\ x\3b:1\ wrong +<=
_+189\4b:7\; y\3b:5\; z\3b:0\ x\3b:4\ wrong +<=
_+189\4b:7\; y\3b:5\; z\3b:1\ x\3b:5\ wrong +<=


 --- Assignments ----
Assignment 'r = x' creats logic => r\3q:U\ = (r\3q:U\ == x\3q:U\)
 It's finalized (execution ready) Qubo is '(r0, r0): 1; (r1, r1): 1; (r2, r2): 1; (x0, r0): -2; (x0, x0): 1; (x1, r1): -2; (x1, x1): 1; (x2, r2): -2; (x2, x2): 1; '
resulting in solutions:
r\3b:0\; x\3b:0\
r\3b:4\; x\3b:4\
r\3b:2\; x\3b:2\
r\3b:6\; x\3b:6\
r\3b:1\; x\3b:1\
r\3b:5\; x\3b:5\
r\3b:3\; x\3b:3\
r\3b:7\; x\3b:7\


Assignment 'r += x' creats logic => r\4q:U\ = (r\2q:U\ + x\3q:U\)
 It's Qubo is '(#[r0], #[r0]): 5; (#[r0], #[r1]): -4; (#[r0], r1): 0; (#[r1], #[r1]): 5; (#[r1], r2): -2; (#[r1], r3): -4; (r0, #[r0]): 0; (r0, r0): 0; (r0, x0): 0; (r1, #[r1]): 0; (r1, r1): 0; (r1, x1): 0; (r2, r2): 1; (r2, r3): 4; (r3, r3): 4; (x0, #[r0]): -4; (x0, x0): 1; (x1, #[r0]): 2; (x1, #[r1]): -4; (x1, x1): 1; (x2, #[r1]): 2; (x2, r2): -2; (x2, r3): -4; (x2, x2): 1; '
resulting in solutions:
r\4b:0\; r\2b:0\; x\3b:0\
r\4b:4\; r\2b:0\; x\3b:4\
r\4b:2\; r\2b:2\; x\3b:0\
r\4b:6\; r\2b:2\; x\3b:4\
r\4b:1\; r\2b:1\; x\3b:0\
r\4b:5\; r\2b:1\; x\3b:4\
r\4b:3\; r\2b:3\; x\3b:0\
r\4b:7\; r\2b:3\; x\3b:4\


Assignment 'r -= x' creats logic => r\3q:U\ = (r\4q:U\ - x\3q:U\)
 It's Qubo is '(#[_+1980], #[_+1980]): 5; (#[_+1980], #[_+1981]): -4; (#[_+1980], _+1981): -2; (#[_+1981], #[_+1981]): 5; (#[_+1981], _+1982): -2; (#[_+1981], _+1983): -4; (_+1980, #[_+1980]): 4; (_+1980, _+1980): 2; (_+1981, #[_+1981]): 4; (_+1981, _+1981): 2; (_+1982, _+1982): 2; (_+1982, _+1983): 4; (_+1983, _+1983): 5; (_+1983, r3): -2; (r0, #[_+1980]): -4; (r0, _+1980): -4; (r0, r0): 2; (r0, x0): 2; (r1, #[_+1980]): 2; (r1, #[_+1981]): -4; (r1, _+1981): -4; (r1, r1): 2; (r1, x1): 2; (r2, #[_+1981]): 2; (r2, _+1982): -4; (r2, _+1983): -4; (r2, r2): 2; (r2, x2): 2; (r3, r3): 1; (x0, #[_+1980]): -4; (x0, _+1980): -2; (x0, x0): 1; (x1, #[_+1980]): 2; (x1, #[_+1981]): -4; (x1, _+1981): -2; (x1, x1): 1; (x2, #[_+1981]): 2; (x2, _+1982): -2; (x2, _+1983): -4; (x2, x2): 1; '
resulting in solutions:
r\3b:0\; r\4b:0\; x\3b:0\
r\3b:4\; r\4b:4\; x\3b:0\
r\3b:2\; r\4b:2\; x\3b:0\
r\3b:6\; r\4b:6\; x\3b:0\
r\3b:1\; r\4b:1\; x\3b:0\
r\3b:5\; r\4b:5\; x\3b:0\
r\3b:3\; r\4b:3\; x\3b:0\
r\3b:7\; r\4b:7\; x\3b:0\


Assignment 'r *= x' creats logic => r\5q:U\ = (r\2q:U\ * x\3q:U\)
 It's Qubo is '(#[r1], #[r1]): 5; (#[r1], #[r2]): -4; (#[r1], r2): -2; (#[r2], #[r2]): 5; (#[r2], r3): -2; (#[r2], r4): -4; (_&133, #[r1]): -4; (_&133, _&133): 4; (_&133, r1): -2; (_&134, #[r1]): 2; (_&134, #[r2]): -4; (_&134, _&134): 4; (_&134, r2): -2; (_&135, #[r1]): -4; (_&135, _&133): 2; (_&135, _&135): 4; (_&136, #[r1]): 2; (_&136, #[r2]): -4; (_&136, _&134): 2; (_&136, _&136): 4; (_&136, r2): -2; (_&137, #[r2]): 2; (_&137, _&137): 4; (_&137, r3): -2; (_&137, r4): -4; (r0, _&133): -2; (r0, _&134): -2; (r0, r0): 1; (r0, x0): -1; (r0, x1): 1; (r0, x2): 1; (r1, #[r1]): 4; (r1, _&135): -4; (r1, _&136): -2; (r1, _&137): -2; (r1, r1): 1; (r1, x0): 1; (r1, x1): 1; (r1, x2): 1; (r2, #[r2]): 4; (r2, r2): 1; (r3, r3): 1; (r3, r4): 4; (r4, r4): 4; (x0, _&135): -2; (x0, x0): 0; (x1, _&133): -2; (x1, _&136): -2; (x1, x1): 0; (x2, _&134): -2; (x2, _&137): -2; (x2, x2): 0; '
resulting in solutions:
r\5b:0\; r\2b:0\; x\3b:0\
r\5b:0\; r\2b:0\; x\3b:4\
r\5b:0\; r\2b:0\; x\3b:2\
r\5b:0\; r\2b:0\; x\3b:6\
r\5b:0\; r\2b:0\; x\3b:1\
r\5b:0\; r\2b:0\; x\3b:5\
r\5b:0\; r\2b:0\; x\3b:3\
r\5b:0\; r\2b:0\; x\3b:7\
r\5b:1\; r\2b:1\; x\3b:1\
r\5b:2\; r\2b:2\; x\3b:1\
r\5b:3\; r\2b:3\; x\3b:1\
r\5b:10\; r\2b:2\; x\3b:5\
r\5b:6\; r\2b:2\; x\3b:3\
r\5b:14\; r\2b:2\; x\3b:7\
r\5b:5\; r\2b:1\; x\3b:5\
r\5b:15\; r\2b:3\; x\3b:5\

Assignment 'r /= x' creats logic => r\3q:U\ = (r\6q:U\ / x\3q:U\)
 It's Qubo is '(#[_*101], #[_*101]): 5; (#[_*101], #[_*102]): -4; (#[_*101], _*102): -2; (#[_*102], #[_*102]): 5; (#[_*102], #[_+213]): -4; (#[_*102], _+213): -2; (#[_*103], #[_*103]): 5; (#[_*103], #[_+213]): 2; (#[_*103], _*104): -2; (#[_*103], _*105): -4; (#[_+212], #[_*103]): -4; (#[_+212], #[_+212]): 5; (#[_+212], _*103): -2; (#[_+213], #[_+213]): 5; (#[_+213], _*104): -2; (#[_+213], _*105): -4; (_&157, #[_*101]): -4; (_&157, _&157): 4; (_&157, _*101): -2; (_&158, #[_+212]): -4; (_&158, _&158): 4; (_&158, _+212): -2; (_&159, #[_*101]): -4; (_&159, _&157): 2; (_&159, _&159): 4; (_&159, _*101): -2; (_&160, #[_+212]): -4; (_&160, _&158): 2; (_&160, _&160): 4; (_&160, _+212): -2; (_&161, #[_*102]): 2; (_&161, #[_+213]): -4; (_&161, _&161): 4; (_&161, _+213): -2; (_&162, #[_+212]): -4; (_&162, _&158): 2; (_&162, _&160): 2; (_&162, _&162): 4; (_&162, _+212): -2; (_&163, #[_*102]): 2; (_&163, #[_+213]): -4; (_&163, _&161): 2; (_&163, _&163): 4; (_&163, _+213): -2; (_&164, #[_*103]): 2; (_&164, #[_+213]): 2; (_&164, _&164): 4; (_&164, _*104): -2; (_&164, _*105): -4; (_*100, _*100): 4; (_*101, #[_*101]): 4; (_*101, _*101): 2; (_*101, r1): -2; (_*102, #[_*102]): 4; (_*102, _*102): 2; (_*102, r2): -2; (_*103, #[_*103]): 4; (_*103, _*103): 2; (_*103, r3): -2; (_*104, _*104): 2; (_*104, _*105): 4; (_*104, r4): -2; (_*105, _*105): 5; (_*105, r5): -2; (_+212, #[_*101]): 2; (_+212, #[_*102]): -4; (_+212, #[_+212]): 4; (_+212, _*102): -2; (_+212, _+212): 2; (_+213, #[_*103]): -4; (_+213, #[_+212]): 2; (_+213, #[_+213]): 4; (_+213, _*103): -2; (_+213, _+213): 2; (r0, _&157): -2; (r0, _&158): -2; (r0, _*100): -4; (r0, r0): 1; (r0, x0): 1; (r0, x1): 1; (r0, x2): 1; (r1, _&159): -2; (r1, _&160): -2; (r1, _&161): -2; (r1, r1): 1; (r1, x0): 1; (r1, x1): 1; (r1, x2): 1; (r2, _&162): -2; (r2, _&163): -2; (r2, _&164): -2; (r2, r2): 1; (r2, x0): 1; (r2, x1): 1; (r2, x2): 1; (r3, r3): 1; (r4, r4): 1; (r5, r5): 1; (x0, _&159): -2; (x0, _&162): -2; (x0, _*100): -2; (x0, x0): 0; (x1, _&157): -2; (x1, _&160): -2; (x1, _&163): -2; (x1, x1): 0; (x2, _&158): -2; (x2, _&161): -2; (x2, _&164): -2; (x2, x2): 0; '

# of nodes: 30	# of branches: 80
Subtraction Expression
{
	y\3q:6\ = (r\4q:U\ - x\3q:U\);
	k\2q:U\ = (y\3q:6\ - z\2q:U\);
}
 Dann5 virtual code:  r0\S\ == _+2150\S\; _+2150\S\ = y0\0\ .+ x0\S\; r1\S\ == _+2151\S\; _+2151\S\ = y1\1\ + x1\S\ + #[_+2150]\S\; r2\S\ == _+2152\S\; _+2152\S\ = y2\1\ + x2\S\ + #[_+2151]\S\; ; y0\0\ == _+2220\S\; _+2220\S\ = k0\S\ .+ z0\S\; y1\1\ == _+2221\S\; _+2221\S\ = k1\S\ + z1\S\ + #[_+2220]\S\; 
 It's generic Qubo is '(#[_+2150], #[_+2150]): 5; (#[_+2150], #[_+2151]): -4; (#[_+2150], _+2151): -2; (#[_+2151], #[_+2151]): 5; (#[_+2151], _+2152): -2; (#[_+2151], _+2153): -4; (#[_+2220], #[_+2220]): 5; (#[_+2220], _+2221): -2; (#[_+2220], _+2222): -4; (_+2150, #[_+2150]): 4; (_+2150, _+2150): 2; (_+2150, r0): -2; (_+2151, #[_+2151]): 4; (_+2151, _+2151): 2; (_+2151, r1): -2; (_+2152, _+2152): 2; (_+2152, _+2153): 4; (_+2152, r2): -2; (_+2153, _+2153): 5; (_+2153, r3): -2; (_+2220, #[_+2220]): 4; (_+2220, _+2220): 2; (_+2220, y0): -2; (_+2221, _+2221): 2; (_+2221, _+2222): 4; (_+2221, y1): -2; (_+2222, _+2222): 5; (_+2222, y2): -2; (k0, #[_+2220]): -4; (k0, _+2220): -2; (k0, k0): 1; (k0, z0): 2; (k1, #[_+2220]): 2; (k1, _+2221): -2; (k1, _+2222): -4; (k1, k1): 1; (k1, z1): 2; (r0, r0): 1; (r1, r1): 1; (r2, r2): 1; (r3, r3): 1; (x0, #[_+2150]): -4; (x0, _+2150): -2; (x0, x0): 1; (x1, #[_+2150]): 2; (x1, #[_+2151]): -4; (x1, _+2151): -2; (x1, x1): 1; (x2, #[_+2151]): 2; (x2, _+2152): -2; (x2, _+2153): -4; (x2, x2): 1; (y0, #[_+2150]): -4; (y0, _+2150): -2; (y0, x0): 2; (y0, y0): 2; (y1, #[_+2150]): 2; (y1, #[_+2151]): -4; (y1, _+2151): -2; (y1, x1): 2; (y1, y1): 2; (y2, #[_+2151]): 2; (y2, _+2152): -2; (y2, _+2153): -4; (y2, x2): 2; (y2, y2): 2; (z0, #[_+2220]): -4; (z0, _+2220): -2; (z0, z0): 1; (z1, #[_+2220]): 2; (z1, _+2221): -2; (z1, _+2222): -4; (z1, z1): 1; '
 & finalized Qubo is '(#[_+2150], #[_+2150]): 7; (#[_+2150], #[_+2151]): -4; (#[_+2150], _+2151): -2; (#[_+2151], #[_+2151]): 3; (#[_+2151], _+2152): -2; (#[_+2151], _+2153): -4; (#[_+2220], #[_+2220]): 5; (#[_+2220], _+2221): -2; (#[_+2220], _+2222): -4; (_+2150, #[_+2150]): 4; (_+2150, _+2150): 2; (_+2150, r0): -2; (_+2151, #[_+2151]): 4; (_+2151, _+2151): 0; (_+2151, r1): -2; (_+2152, _+2152): 0; (_+2152, _+2153): 4; (_+2152, r2): -2; (_+2153, _+2153): 1; (_+2153, r3): -2; (_+2220, #[_+2220]): 4; (_+2220, _+2220): 2; (_+2221, _+2221): 0; (_+2221, _+2222): 4; (_+2222, _+2222): 3; (k0, #[_+2220]): -4; (k0, _+2220): -2; (k0, k0): 1; (k0, z0): 2; (k1, #[_+2220]): 2; (k1, _+2221): -2; (k1, _+2222): -4; (k1, k1): 1; (k1, z1): 2; (r0, r0): 1; (r1, r1): 1; (r2, r2): 1; (r3, r3): 1; (x0, #[_+2150]): -4; (x0, _+2150): -2; (x0, x0): 1; (x1, #[_+2150]): 2; (x1, #[_+2151]): -4; (x1, _+2151): -2; (x1, x1): 3; (x2, #[_+2151]): 2; (x2, _+2152): -2; (x2, _+2153): -4; (x2, x2): 3; (z0, #[_+2220]): -4; (z0, _+2220): -2; (z0, z0): 1; (z1, #[_+2220]): 2; (z1, _+2221): -2; (z1, _+2222): -4; (z1, z1): 1; '
 resulting in :
 y\3b:6\; r\4b:10\; x\3b:4\ k\2b:3\; y\3b:6\; z\2b:3\
 y\3b:6\; r\4b:6\; x\3b:0\ k\2b:3\; y\3b:6\; z\2b:3\
 y\3b:6\; r\4b:11\; x\3b:5\ k\2b:3\; y\3b:6\; z\2b:3\
 y\3b:6\; r\4b:7\; x\3b:1\ k\2b:3\; y\3b:6\; z\2b:3\
 y\3b:6\; r\4b:8\; x\3b:2\ k\2b:3\; y\3b:6\; z\2b:3\
 y\3b:6\; r\4b:12\; x\3b:6\ k\2b:3\; y\3b:6\; z\2b:3\
 y\3b:6\; r\4b:9\; x\3b:3\ k\2b:3\; y\3b:6\; z\2b:3\
 y\3b:6\; r\4b:13\; x\3b:7\ k\2b:3\; y\3b:6\; z\2b:3\

dann5 tests Qwhole addition!

A\5q:21\ = ((((a\4q:U\ + b\2q:U\) + c\2q:U\) + d\1q:U\) + 1_\1q:1\)

A0\1\ = _+2280\S\ + d0\S\ + 1_0\1\; _+2280\S\ = a0\S\ + b0\S\ + c0\S\; A1\0\ = _+2261\S\ + c1\S\ + #[A0]\S\; _+2261\S\ = a1\S\ + b1\S\ + #[_+2280]\S\; A2\1\ = a2\S\ + #[_+2261]\S\ + #[A1]\S\; A3\0\ = a3\S\ .+ #[A2]\S\; A4\1\ = #[_+2283]\S\; 
 It's generic Qubo is '(#[A0], #[A0]): 5; (#[A0], #[A1]): -4; (#[A0], A1): -2; (#[A1], #[A1]): 5; (#[A1], #[A2]): -4; (#[A1], A2): -2; (#[A2], #[A2]): 5; (#[A2], A3): -2; (#[A2], A4): -4; (#[_+2261], #[A1]): 2; (#[_+2261], #[A2]): -4; (#[_+2261], #[_+2261]): 5; (#[_+2261], A2): -2; (#[_+2280], #[_+2261]): -4; (#[_+2280], #[_+2280]): 5; (#[_+2280], _+2261): -2; (1_0, #[A0]): -4; (1_0, 1_0): 1; (1_0, A0): -2; (A0, #[A0]): 4; (A0, A0): 1; (A1, #[A1]): 4; (A1, A1): 1; (A2, #[A2]): 4; (A2, A2): 1; (A3, A3): 1; (A3, A4): 4; (A4, A4): 4; (_+2261, #[A0]): 2; (_+2261, #[A1]): -4; (_+2261, #[_+2261]): 4; (_+2261, A1): -2; (_+2261, _+2261): 2; (_+2261, c1): 2; (_+2280, #[A0]): -4; (_+2280, #[_+2280]): 4; (_+2280, 1_0): 2; (_+2280, A0): -2; (_+2280, _+2280): 2; (_+2280, d0): 2; (a0, #[_+2280]): -4; (a0, _+2280): -2; (a0, a0): 1; (a0, b0): 2; (a0, c0): 2; (a1, #[_+2261]): -4; (a1, #[_+2280]): 2; (a1, _+2261): -2; (a1, a1): 1; (a1, b1): 2; (a2, #[A1]): 2; (a2, #[A2]): -4; (a2, #[_+2261]): 2; (a2, A2): -2; (a2, a2): 1; (a3, #[A2]): 2; (a3, A3): -2; (a3, A4): -4; (a3, a3): 1; (b0, #[_+2280]): -4; (b0, _+2280): -2; (b0, b0): 1; (b0, c0): 2; (b1, #[_+2261]): -4; (b1, #[_+2280]): 2; (b1, _+2261): -2; (b1, b1): 1; (c0, #[_+2280]): -4; (c0, _+2280): -2; (c0, c0): 1; (c1, #[A0]): 2; (c1, #[A1]): -4; (c1, A1): -2; (c1, c1): 1; (d0, #[A0]): -4; (d0, 1_0): 2; (d0, A0): -2; (d0, d0): 1; '
 & finalized Qubo is '(#[A0], #[A0]): 5; (#[A0], #[A1]): -4; (#[A1], #[A1]): 3; (#[A1], #[A2]): -4; (#[A2], #[A2]): 5; (#[_+2261], #[A1]): 2; (#[_+2261], #[A2]): -4; (#[_+2261], #[_+2261]): 3; (#[_+2280], #[_+2261]): -4; (#[_+2280], #[_+2280]): 5; (#[_+2280], _+2261): -2; (_+2261, #[A0]): 2; (_+2261, #[A1]): -4; (_+2261, #[_+2261]): 4; (_+2261, _+2261): 2; (_+2261, c1): 2; (_+2280, #[A0]): -4; (_+2280, #[_+2280]): 4; (_+2280, _+2280): 2; (_+2280, d0): 2; (a0, #[_+2280]): -4; (a0, _+2280): -2; (a0, a0): 1; (a0, b0): 2; (a0, c0): 2; (a1, #[_+2261]): -4; (a1, #[_+2280]): 2; (a1, _+2261): -2; (a1, a1): 1; (a1, b1): 2; (a2, #[A1]): 2; (a2, #[A2]): -4; (a2, #[_+2261]): 2; (a2, a2): -1; (a3, #[A2]): 2; (a3, a3): -3; (b0, #[_+2280]): -4; (b0, _+2280): -2; (b0, b0): 1; (b0, c0): 2; (b1, #[_+2261]): -4; (b1, #[_+2280]): 2; (b1, _+2261): -2; (b1, b1): 1; (c0, #[_+2280]): -4; (c0, _+2280): -2; (c0, c0): 1; (c1, #[A0]): 2; (c1, #[A1]): -4; (c1, c1): 1; (d0, #[A0]): -4; (d0, d0): 1; '

# of nodes: 16	# of branches: 36
 resulting in :
A\5b:21\; _+231\5b:31\; _+228\5b:30\; _+226\5b:31\; a\4b:14\; b\2b:3\; c\2b:3\; d\1b:0\; 1_\1b:1\
A\5b:21\; _+231\5b:31\; _+228\5b:30\; _+226\5b:31\; a\4b:15\; b\2b:2\; c\2b:3\; d\1b:0\; 1_\1b:1\
A\5b:21\; _+231\5b:31\; _+228\5b:30\; _+226\5b:31\; a\4b:15\; b\2b:3\; c\2b:2\; d\1b:0\; 1_\1b:1\
A\5b:21\; _+231\5b:31\; _+228\5b:31\; _+226\5b:29\; a\4b:14\; b\2b:2\; c\2b:3\; d\1b:1\; 1_\1b:1\
A\5b:21\; _+231\5b:31\; _+228\5b:31\; _+226\5b:29\; a\4b:14\; b\2b:3\; c\2b:2\; d\1b:1\; 1_\1b:1\
A\5b:21\; _+231\5b:31\; _+228\5b:31\; _+226\5b:29\; a\4b:15\; b\2b:2\; c\2b:2\; d\1b:1\; 1_\1b:1\
A\5b:21\; _+231\5b:31\; _+228\5b:31\; _+226\5b:29\; a\4b:13\; b\2b:3\; c\2b:3\; d\1b:1\; 1_\1b:1\
A\5b:21\; _+231\5b:31\; _+228\5b:31\; _+226\5b:29\; a\4b:15\; b\2b:1\; c\2b:3\; d\1b:1\; 1_\1b:1\
A\5b:21\; _+231\5b:31\; _+228\5b:31\; _+226\5b:31\; a\4b:15\; b\2b:3\; c\2b:1\; d\1b:1\; 1_\1b:1\

--- Quantum assignment vs. equal expression
A\4q:7\ = (a\3q:U\ + b\2q:U\)
A\4b:7\; a\3b:4\; b\2b:3\
A\4b:7\; a\3b:6\; b\2b:1\
A\4b:7\; a\3b:5\; b\2b:2\
A\4b:7\; a\3b:7\; b\2b:0\

Assignment # of nodes: 7	# of branches: 10

(Ae\4q:7\ == (c\3q:U\ + d\2q:U\))
Ae\4b:7\; _+237\4b:7\; c\3b:4\; d\2b:3\
Ae\4b:7\; _+237\4b:7\; c\3b:6\; d\2b:1\
Ae\4b:7\; _+237\4b:7\; c\3b:5\; d\2b:2\
Ae\4b:7\; _+237\4b:7\; c\3b:7\; d\2b:0\

Equal expression # of nodes: 11	# of branches: 22

 --- Factorial ----

M\7q:42\ = ((p\3q:U\ * q\2q:U\) * r\2q:U\)

M0\0\ = _*110\S\ & r0\S\; _*110\S\ = p0\S\ & q0\S\; M1\1\ = _&173\S\ .+ _&172\S\; _&173\S\ = _*111\S\ & r0\S\; _*111\S\ = _&167\S\ .+ _&166\S\; _&167\S\ = p1\S\ & q0\S\; _&166\S\ = p0\S\ & q1\S\; _&172\S\ = _*110\S\ & r1\S\; _*110\S\ = p0\S\ & q0\S\; M2\0\ = _&175\S\ + _&174\S\ + #[M1]\S\; _&175\S\ = _*112\S\ & r0\S\; _*112\S\ = _&169\S\ + _&168\S\ + #[_*111]\S\; _&169\S\ = p2\S\ & q0\S\; _&168\S\ = p1\S\ & q1\S\; _&174\S\ = _*111\S\ & r1\S\; _*111\S\ = _&167\S\ .+ _&166\S\; _&167\S\ = p1\S\ & q0\S\; _&166\S\ = p0\S\ & q1\S\; M3\1\ = _&177\S\ + _&176\S\ + #[M2]\S\; _&177\S\ = _*113\S\ & r0\S\; _*113\S\ = _&170\S\ .+ #[_*112]\S\; _&170\S\ = p2\S\ & q1\S\; _&176\S\ = _*112\S\ & r1\S\; _*112\S\ = _&169\S\ + _&168\S\ + #[_*111]\S\; _&169\S\ = p2\S\ & q0\S\; _&168\S\ = p1\S\ & q1\S\; M4\0\ = _&179\S\ + _&178\S\ + #[M3]\S\; _&179\S\ = _*114\S\ & r0\S\; _&178\S\ = _*113\S\ & r1\S\; _*113\S\ = _&170\S\ .+ #[_*112]\S\; _&170\S\ = p2\S\ & q1\S\; M5\1\ = _&180\S\ .+ #[M4]\S\; _&180\S\ = _*114\S\ & r1\S\; M6\0\ = #[M5]\1\; 
 It's generic Qubo is '(#[M1], #[M1]): 5; (#[M1], #[M2]): -4; (#[M1], M2): -2; (#[M2], #[M2]): 5; (#[M2], #[M3]): -4; (#[M2], M3): -2; (#[M3], #[M3]): 5; (#[M3], #[M4]): -4; (#[M3], M4): -2; (#[M4], #[M4]): 5; (#[M4], M5): -2; (#[M4], M6): -4; (#[_*111], #[_*111]): 10; (#[_*111], #[_*112]): -8; (#[_*111], _*112): -4; (#[_*112], #[_*112]): 10; (#[_*112], _*113): -4; (#[_*112], _*114): -8; (M0, M0): 3; (M1, #[M1]): 4; (M1, M1): 1; (M2, #[M2]): 4; (M2, M2): 1; (M3, #[M3]): 4; (M3, M3): 1; (M4, #[M4]): 4; (M4, M4): 1; (M5, M5): 1; (M5, M6): 4; (M6, M6): 4; (_&166, #[_*111]): -8; (_&166, _&166): 8; (_&166, _*111): -4; (_&167, #[_*111]): -8; (_&167, _&166): 4; (_&167, _&167): 8; (_&167, _*111): -4; (_&168, #[_*111]): 4; (_&168, #[_*112]): -8; (_&168, _&168): 8; (_&168, _*112): -4; (_&169, #[_*111]): 4; (_&169, #[_*112]): -8; (_&169, _&168): 4; (_&169, _&169): 8; (_&169, _*112): -4; (_&170, #[_*112]): 4; (_&170, _&170): 8; (_&170, _*113): -4; (_&170, _*114): -8; (_&172, #[M1]): -4; (_&172, M1): -2; (_&172, _&172): 4; (_&173, #[M1]): -4; (_&173, M1): -2; (_&173, _&172): 2; (_&173, _&173): 4; (_&174, #[M1]): 2; (_&174, #[M2]): -4; (_&174, M2): -2; (_&174, _&174): 4; (_&175, #[M1]): 2; (_&175, #[M2]): -4; (_&175, M2): -2; (_&175, _&174): 2; (_&175, _&175): 4; (_&176, #[M2]): 2; (_&176, #[M3]): -4; (_&176, M3): -2; (_&176, _&176): 4; (_&177, #[M2]): 2; (_&177, #[M3]): -4; (_&177, M3): -2; (_&177, _&176): 2; (_&177, _&177): 4; (_&178, #[M3]): 2; (_&178, #[M4]): -4; (_&178, M4): -2; (_&178, _&178): 4; (_&179, #[M3]): 2; (_&179, #[M4]): -4; (_&179, M4): -2; (_&179, _&178): 2; (_&179, _&179): 4; (_&180, #[M4]): 2; (_&180, M5): -2; (_&180, M6): -4; (_&180, _&180): 4; (_*110, M0): -2; (_*110, _&172): -2; (_*110, _*110): 6; (_*110, r0): 1; (_*110, r1): 1; (_*111, #[_*111]): 8; (_*111, _&173): -2; (_*111, _&174): -2; (_*111, _*111): 2; (_*111, r0): 1; (_*111, r1): 1; (_*112, #[_*112]): 8; (_*112, _&175): -2; (_*112, _&176): -2; (_*112, _*112): 2; (_*112, r0): 1; (_*112, r1): 1; (_*113, _&177): -2; (_*113, _&178): -2; (_*113, _*113): 2; (_*113, _*114): 8; (_*113, r0): 1; (_*113, r1): 1; (_*114, _&179): -2; (_*114, _&180): -2; (_*114, _*114): 8; (_*114, r0): 1; (_*114, r1): 1; (p0, _&166): -4; (p0, _*110): -4; (p0, p0): 0; (p0, q0): 2; (p0, q1): 2; (p1, _&167): -4; (p1, _&168): -4; (p1, p1): 0; (p1, q0): 2; (p1, q1): 2; (p2, _&169): -4; (p2, _&170): -4; (p2, p2): 0; (p2, q0): 2; (p2, q1): 2; (q0, _&167): -4; (q0, _&169): -4; (q0, _*110): -4; (q0, q0): 0; (q1, _&166): -4; (q1, _&168): -4; (q1, _&170): -4; (q1, q1): 0; (r0, M0): -2; (r0, _&173): -2; (r0, _&175): -2; (r0, _&177): -2; (r0, _&179): -2; (r0, r0): 0; (r1, _&172): -2; (r1, _&174): -2; (r1, _&176): -2; (r1, _&178): -2; (r1, _&180): -2; (r1, r1): 0; '
 & finalized Qubo is '(#[M1], #[M1]): 9; (#[M1], #[M2]): -4; (#[M2], #[M2]): 3; (#[M2], #[M3]): -4; (#[M3], #[M3]): 9; (#[M3], #[M4]): -4; (#[M4], #[M4]): 3; (#[_*111], #[_*111]): 10; (#[_*111], #[_*112]): -8; (#[_*111], _*112): -4; (#[_*112], #[_*112]): 10; (#[_*112], _*113): -4; (#[_*112], _*114): -8; (_&166, #[_*111]): -8; (_&166, _&166): 8; (_&166, _*111): -4; (_&167, #[_*111]): -8; (_&167, _&166): 4; (_&167, _&167): 8; (_&167, _*111): -4; (_&168, #[_*111]): 4; (_&168, #[_*112]): -8; (_&168, _&168): 8; (_&168, _*112): -4; (_&169, #[_*111]): 4; (_&169, #[_*112]): -8; (_&169, _&168): 4; (_&169, _&169): 8; (_&169, _*112): -4; (_&170, #[_*112]): 4; (_&170, _&170): 8; (_&170, _*113): -4; (_&170, _*114): -8; (_&172, #[M1]): -4; (_&172, _&172): 2; (_&173, #[M1]): -4; (_&173, _&172): 2; (_&173, _&173): 2; (_&174, #[M1]): 2; (_&174, #[M2]): -4; (_&174, _&174): 4; (_&175, #[M1]): 2; (_&175, #[M2]): -4; (_&175, _&174): 2; (_&175, _&175): 4; (_&176, #[M2]): 2; (_&176, #[M3]): -4; (_&176, _&176): 2; (_&177, #[M2]): 2; (_&177, #[M3]): -4; (_&177, _&176): 2; (_&177, _&177): 2; (_&178, #[M3]): 2; (_&178, #[M4]): -4; (_&178, _&178): 4; (_&179, #[M3]): 2; (_&179, #[M4]): -4; (_&179, _&178): 2; (_&179, _&179): 4; (_&180, #[M4]): 2; (_&180, _&180): 2; (_*110, _&172): -2; (_*110, _*110): 6; (_*110, r0): 1; (_*110, r1): 1; (_*111, #[_*111]): 8; (_*111, _&173): -2; (_*111, _&174): -2; (_*111, _*111): 2; (_*111, r0): 1; (_*111, r1): 1; (_*112, #[_*112]): 8; (_*112, _&175): -2; (_*112, _&176): -2; (_*112, _*112): 2; (_*112, r0): 1; (_*112, r1): 1; (_*113, _&177): -2; (_*113, _&178): -2; (_*113, _*113): 2; (_*113, _*114): 8; (_*113, r0): 1; (_*113, r1): 1; (_*114, _&179): -2; (_*114, _&180): -2; (_*114, _*114): 8; (_*114, r0): 1; (_*114, r1): 1; (p0, _&166): -4; (p0, _*110): -4; (p0, p0): 0; (p0, q0): 2; (p0, q1): 2; (p1, _&167): -4; (p1, _&168): -4; (p1, p1): 0; (p1, q0): 2; (p1, q1): 2; (p2, _&169): -4; (p2, _&170): -4; (p2, p2): 0; (p2, q0): 2; (p2, q1): 2; (q0, _&167): -4; (q0, _&169): -4; (q0, _*110): -4; (q0, q0): 0; (q1, _&166): -4; (q1, _&168): -4; (q1, _&170): -4; (q1, q1): 0; (r0, _&173): -2; (r0, _&175): -2; (r0, _&177): -2; (r0, _&179): -2; (r0, r0): 0; (r1, _&172): -2; (r1, _&174): -2; (r1, _&176): -2; (r1, _&178): -2; (r1, _&180): -2; (r1, r1): 0; '

# of nodes: 32	# of branches: 90

Running time: 96.181999s
M\7b:42\; _*11\5b:21\; p\3b:7\; q\2b:3\; r\2b:2\
M\7b:42\; _*11\5b:14\; p\3b:7\; q\2b:2\; r\2b:3\

--- Large number factorial:
Preparation time: 0.012000s
M\27q:132560640\ = ((p\8q:U\ * q\8q:U\) * r\8q:U\)

# of nodes: 528	# of branches: 2107

 --- Prime numbers ----
Prime Number
 Code
{
	p\5q:U\ = ((s\2q:U\ * s\2q:U\) + ((2_\2q:2\ * t\1q:U\) * t\1q:U\));
	3_\5q:00011\ = (p\5q:U\ & 7_\3q:111\);
	_1\2q:01\ = (s\2q:U\ & _1\1q:1\);
	_1\1q:1\ = (t\1q:U\ & _1\1q:1\);
	{
	s\3q:U\ = (s\2q:U\ * d\1q:U\);
	t\2q:U\ = (t\1q:U\ * d\1q:U\);
	(d\1q:U\ == _1\1q:1\);
};
}
 Logic:  p0\S\ = _*150\S\ .+ _*170\0\; _*150\S\ = s0\S\ & s0\S\; _*170\0\ = _*160\0\ & t0\S\; _*160\0\ = 2_0\0\ & t0\S\; p1\S\ = _*151\S\ + _*171\S\ + #[p0]\S\; _*151\S\ = _&375\S\ .+ _&374\S\; _&375\S\ = s1\S\ & s0\S\; _&374\S\ = s0\S\ & s1\S\; _*171\S\ = _*161\S\ & t0\S\; _*161\S\ = 2_1\1\ & t0\S\; p2\S\ = _*152\S\ + _*172\0\ + #[p1]\S\; _*152\S\ = _&376\S\ .+ #[_*151]\S\; _&376\S\ = s1\S\ & s1\S\; _*172\0\ = _*162\0\ & t0\S\; p3\S\ = _*153\S\ + _*173\0\ + #[p2]\S\; p4\S\ = #[p3]\S\; ; 3_0\1\ = p0\S\ & 7_0\1\; 3_1\1\ = p1\S\ & 7_1\1\; 3_2\0\ = p2\S\ & 7_2\1\; 3_3\0\ = p3\S\ & 7_3\0\; 3_4\0\ = p4\S\ & 7_4\0\; ; _10\1\ = s0\S\ & _10\1\; _11\0\ = s1\S\ & _11\0\; ; _10\1\ = t0\S\ & _10\1\; ;  s0\S\ = s0\S\ & d0\S\; s1\S\ = s1\S\ & d0\S\; ; ; t0\S\ = t0\S\ & d0\S\; ; ; d0\S\ == _10\1\; 
 It's generic Qubo is '(#[_*151], #[_*151]): 5; (#[_*151], _*152): -2; (#[_*151], _*153): -4; (#[p0], #[p0]): 5; (#[p0], #[p1]): -4; (#[p0], p1): -2; (#[p1], #[p1]): 5; (#[p1], #[p2]): -4; (#[p1], p2): -2; (#[p2], #[p2]): 5; (#[p2], p3): -2; (#[p2], p4): -4; (2_0, 2_0): 0; (2_0, _*160): -2; (2_0, t0): 1; (2_1, 2_1): 0; (2_1, _*161): -2; (2_1, t0): 1; (3_0, 3_0): 3; (3_1, 3_1): 3; (3_2, 3_2): 3; (3_3, 3_3): 3; (3_4, 3_4): 3; (7_0, 3_0): -2; (7_0, 7_0): 0; (7_1, 3_1): -2; (7_1, 7_1): 0; (7_2, 3_2): -2; (7_2, 7_2): 0; (7_3, 3_3): -2; (7_3, 7_3): 0; (7_4, 3_4): -2; (7_4, 7_4): 0; (_&374, #[_*151]): -4; (_&374, _&374): 4; (_&374, _*151): -2; (_&375, #[_*151]): -4; (_&375, _&374): 2; (_&375, _&375): 4; (_&375, _*151): -2; (_&376, #[_*151]): 2; (_&376, _&376): 4; (_&376, _*152): -2; (_&376, _*153): -4; (_*150, #[p0]): -4; (_*150, _*150): 4; (_*150, _*170): 2; (_*150, p0): -2; (_*151, #[_*151]): 4; (_*151, #[p0]): 2; (_*151, #[p1]): -4; (_*151, _*151): 2; (_*151, _*171): 2; (_*151, p1): -2; (_*152, #[p1]): 2; (_*152, #[p2]): -4; (_*152, _*152): 2; (_*152, _*153): 4; (_*152, _*172): 2; (_*152, p2): -2; (_*153, #[p2]): 2; (_*153, _*153): 5; (_*153, _*173): 2; (_*153, p3): -2; (_*153, p4): -4; (_*160, _*160): 3; (_*160, _*170): -2; (_*161, _*161): 3; (_*161, _*171): -2; (_*162, _*162): 0; (_*162, _*172): -2; (_*162, t0): 1; (_*170, #[p0]): -4; (_*170, _*170): 4; (_*170, p0): -2; (_*171, #[p0]): 2; (_*171, #[p1]): -4; (_*171, _*171): 4; (_*171, p1): -2; (_*172, #[p1]): 2; (_*172, #[p2]): -4; (_*172, _*172): 4; (_*172, p2): -2; (_*173, #[p2]): 2; (_*173, _*173): 1; (_*173, p3): -2; (_*173, p4): -4; (_10, _10): 3; (_10, d0): -2; (_11, _11): 1; (d0, d0): 1; (d0, s0): -1; (d0, s1): -1; (d0, t0): -1; (p0, #[p0]): 4; (p0, 3_0): -2; (p0, 7_0): 1; (p0, p0): 1; (p1, #[p1]): 4; (p1, 3_1): -2; (p1, 7_1): 1; (p1, p1): 1; (p2, #[p2]): 4; (p2, 3_2): -2; (p2, 7_2): 1; (p2, p2): 1; (p3, 3_3): -2; (p3, 7_3): 1; (p3, p3): 1; (p3, p4): 4; (p4, 3_4): -2; (p4, 7_4): 1; (p4, p4): 4; (s0, _&374): -2; (s0, _&375): -2; (s0, _*150): -4; (s0, _10): -1; (s0, s0): 2; (s1, _&374): -2; (s1, _&375): -2; (s1, _&376): -4; (s1, _11): -1; (s1, s0): 2; (s1, s1): 2; (t0, _*160): -1; (t0, _*161): -1; (t0, _*170): -2; (t0, _*171): -2; (t0, _*172): -2; (t0, _10): -1; (t0, t0): 1; '
 & finalized Qubo is '(#[_*151], #[_*151]): 5; (#[_*151], _*152): -2; (#[_*151], _*153): -4; (#[p0], #[p0]): 5; (#[p0], #[p1]): -4; (#[p0], p1): -2; (#[p1], #[p1]): 5; (#[p1], #[p2]): -4; (#[p1], p2): -2; (#[p2], #[p2]): 5; (#[p2], p3): -2; (#[p2], p4): -4; (_&374, #[_*151]): -4; (_&374, _&374): 4; (_&374, _*151): -2; (_&375, #[_*151]): -4; (_&375, _&374): 2; (_&375, _&375): 4; (_&375, _*151): -2; (_&376, #[_*151]): 2; (_&376, _&376): 4; (_&376, _*152): -2; (_&376, _*153): -4; (_*150, #[p0]): -4; (_*150, _*150): 4; (_*150, p0): -2; (_*151, #[_*151]): 4; (_*151, #[p0]): 2; (_*151, #[p1]): -4; (_*151, _*151): 2; (_*151, _*171): 2; (_*151, p1): -2; (_*152, #[p1]): 2; (_*152, #[p2]): -4; (_*152, _*152): 2; (_*152, _*153): 4; (_*152, p2): -2; (_*153, #[p2]): 2; (_*153, _*153): 5; (_*153, p3): -2; (_*153, p4): -4; (_*161, _*161): 1; (_*161, _*171): -2; (_*171, #[p0]): 2; (_*171, #[p1]): -4; (_*171, _*171): 4; (_*171, p1): -2; (d0, d0): -1; (d0, s0): -1; (d0, s1): -1; (d0, t0): -1; (p0, #[p0]): 4; (p0, p0): 0; (p1, #[p1]): 4; (p1, p1): 0; (p2, #[p2]): 4; (p2, p2): 2; (p3, p3): 1; (p3, p4): 4; (p4, p4): 4; (s0, _&374): -2; (s0, _&375): -2; (s0, _*150): -4; (s0, s0): 1; (s1, _&374): -2; (s1, _&375): -2; (s1, _&376): -4; (s1, s0): 2; (s1, s1): 2; (t0, _*161): -1; (t0, _*171): -2; (t0, t0): 1; '

*** Prime number p = s^2 + 2t^2, p mod 8 = 3, gcd(s,t) = 1 has: 22 # of node and # of branches: 50
 resulting in :
p\5b:3\ s\2b:1\ t\1b:1\ 
p\5b:11\ s\2b:3\ t\1b:1\ 

Prime Number
 Code
{
	p\6q:U\ = ((s\2q:U\ * s\2q:U\) + ((4_\3q:4\ * t\1q:U\) * t\1q:U\));
	5_\5q:00101\ = (p\5q:U\ & 7_\3q:111\);
	_1\2q:01\ = (s\2q:U\ & _1\1q:1\);
	_1\1q:1\ = (t\1q:U\ & _1\1q:1\);
	{
	s\3q:U\ = (s\2q:U\ * d\1q:U\);
	t\2q:U\ = (t\1q:U\ * d\1q:U\);
	(d\1q:U\ == _1\1q:1\);
};
}
 Logic:  p0\S\ = _*200\S\ .+ _*220\0\; _*200\S\ = s0\S\ & s0\S\; _*220\0\ = _*210\0\ & t0\S\; _*210\0\ = 4_0\0\ & t0\S\; p1\S\ = _*201\S\ + _*221\0\ + #[p0]\S\; _*201\S\ = _&390\S\ .+ _&389\S\; _&390\S\ = s1\S\ & s0\S\; _&389\S\ = s0\S\ & s1\S\; _*221\0\ = _*211\0\ & t0\S\; _*211\0\ = 4_1\0\ & t0\S\; p2\S\ = _*202\S\ + _*222\S\ + #[p1]\S\; _*202\S\ = _&391\S\ .+ #[_*201]\S\; _&391\S\ = s1\S\ & s1\S\; _*222\S\ = _*212\S\ & t0\S\; _*212\S\ = 4_2\1\ & t0\S\; p3\S\ = _*203\S\ + _*223\0\ + #[p2]\S\; _*223\0\ = _*213\0\ & t0\S\; p4\S\ = _*224\0\ .+ #[p3]\S\; p5\S\ = #[p4]\S\; ; 5_0\1\ = p0\S\ & 7_0\1\; 5_1\0\ = p1\S\ & 7_1\1\; 5_2\1\ = p2\S\ & 7_2\1\; 5_3\0\ = p3\S\ & 7_3\0\; 5_4\0\ = p4\S\ & 7_4\0\; ; _10\1\ = s0\S\ & _10\1\; _11\0\ = s1\S\ & _11\0\; ; _10\1\ = t0\S\ & _10\1\; ;  s0\S\ = s0\S\ & d0\S\; s1\S\ = s1\S\ & d0\S\; ; ; t0\S\ = t0\S\ & d0\S\; ; ; d0\S\ == _10\1\; 
 It's generic Qubo is '(#[_*201], #[_*201]): 5; (#[_*201], _*202): -2; (#[_*201], _*203): -4; (#[p0], #[p0]): 5; (#[p0], #[p1]): -4; (#[p0], p1): -2; (#[p1], #[p1]): 5; (#[p1], #[p2]): -4; (#[p1], p2): -2; (#[p2], #[p2]): 5; (#[p2], #[p3]): -4; (#[p2], p3): -2; (#[p3], #[p3]): 5; (#[p3], p4): -2; (#[p3], p5): -4; (4_0, 4_0): 0; (4_0, _*210): -2; (4_0, t0): 1; (4_1, 4_1): 0; (4_1, _*211): -2; (4_1, t0): 1; (4_2, 4_2): 0; (4_2, _*212): -2; (4_2, t0): 1; (5_0, 5_0): 3; (5_1, 5_1): 3; (5_2, 5_2): 3; (5_3, 5_3): 3; (5_4, 5_4): 3; (7_0, 5_0): -2; (7_0, 7_0): 0; (7_1, 5_1): -2; (7_1, 7_1): 0; (7_2, 5_2): -2; (7_2, 7_2): 0; (7_3, 5_3): -2; (7_3, 7_3): 0; (7_4, 5_4): -2; (7_4, 7_4): 0; (_&389, #[_*201]): -4; (_&389, _&389): 4; (_&389, _*201): -2; (_&390, #[_*201]): -4; (_&390, _&389): 2; (_&390, _&390): 4; (_&390, _*201): -2; (_&391, #[_*201]): 2; (_&391, _&391): 4; (_&391, _*202): -2; (_&391, _*203): -4; (_*200, #[p0]): -4; (_*200, _*200): 4; (_*200, _*220): 2; (_*200, p0): -2; (_*201, #[_*201]): 4; (_*201, #[p0]): 2; (_*201, #[p1]): -4; (_*201, _*201): 2; (_*201, _*221): 2; (_*201, p1): -2; (_*202, #[p1]): 2; (_*202, #[p2]): -4; (_*202, _*202): 2; (_*202, _*203): 4; (_*202, _*222): 2; (_*202, p2): -2; (_*203, #[p2]): 2; (_*203, #[p3]): -4; (_*203, _*203): 5; (_*203, _*223): 2; (_*203, p3): -2; (_*210, _*210): 3; (_*210, _*220): -2; (_*211, _*211): 3; (_*211, _*221): -2; (_*212, _*212): 3; (_*212, _*222): -2; (_*213, _*213): 0; (_*213, _*223): -2; (_*213, t0): 1; (_*220, #[p0]): -4; (_*220, _*220): 4; (_*220, p0): -2; (_*221, #[p0]): 2; (_*221, #[p1]): -4; (_*221, _*221): 4; (_*221, p1): -2; (_*222, #[p1]): 2; (_*222, #[p2]): -4; (_*222, _*222): 4; (_*222, p2): -2; (_*223, #[p2]): 2; (_*223, #[p3]): -4; (_*223, _*223): 4; (_*223, p3): -2; (_*224, #[p3]): 2; (_*224, _*224): 1; (_*224, p4): -2; (_*224, p5): -4; (_10, _10): 3; (_10, d0): -2; (_11, _11): 1; (d0, d0): 1; (d0, s0): -1; (d0, s1): -1; (d0, t0): -1; (p0, #[p0]): 4; (p0, 5_0): -2; (p0, 7_0): 1; (p0, p0): 1; (p1, #[p1]): 4; (p1, 5_1): -2; (p1, 7_1): 1; (p1, p1): 1; (p2, #[p2]): 4; (p2, 5_2): -2; (p2, 7_2): 1; (p2, p2): 1; (p3, #[p3]): 4; (p3, 5_3): -2; (p3, 7_3): 1; (p3, p3): 1; (p4, 5_4): -2; (p4, 7_4): 1; (p4, p4): 1; (p4, p5): 4; (p5, p5): 4; (s0, _&389): -2; (s0, _&390): -2; (s0, _*200): -4; (s0, _10): -1; (s0, s0): 2; (s1, _&389): -2; (s1, _&390): -2; (s1, _&391): -4; (s1, _11): -1; (s1, s0): 2; (s1, s1): 2; (t0, _*210): -1; (t0, _*211): -1; (t0, _*212): -1; (t0, _*220): -2; (t0, _*221): -2; (t0, _*222): -2; (t0, _*223): -2; (t0, _10): -1; (t0, t0): 1; '
 & finalized Qubo is '(#[_*201], #[_*201]): 5; (#[_*201], _*202): -2; (#[_*201], _*203): -4; (#[p0], #[p0]): 5; (#[p0], #[p1]): -4; (#[p0], p1): -2; (#[p1], #[p1]): 5; (#[p1], #[p2]): -4; (#[p1], p2): -2; (#[p2], #[p2]): 5; (#[p2], #[p3]): -4; (#[p2], p3): -2; (#[p3], #[p3]): 5; (#[p3], p4): -2; (#[p3], p5): -4; (_&389, #[_*201]): -4; (_&389, _&389): 4; (_&389, _*201): -2; (_&390, #[_*201]): -4; (_&390, _&389): 2; (_&390, _&390): 4; (_&390, _*201): -2; (_&391, #[_*201]): 2; (_&391, _&391): 4; (_&391, _*202): -2; (_&391, _*203): -4; (_*200, #[p0]): -4; (_*200, _*200): 4; (_*200, p0): -2; (_*201, #[_*201]): 4; (_*201, #[p0]): 2; (_*201, #[p1]): -4; (_*201, _*201): 2; (_*201, p1): -2; (_*202, #[p1]): 2; (_*202, #[p2]): -4; (_*202, _*202): 2; (_*202, _*203): 4; (_*202, _*222): 2; (_*202, p2): -2; (_*203, #[p2]): 2; (_*203, #[p3]): -4; (_*203, _*203): 5; (_*203, p3): -2; (_*212, _*212): 1; (_*212, _*222): -2; (_*222, #[p1]): 2; (_*222, #[p2]): -4; (_*222, _*222): 4; (_*222, p2): -2; (d0, d0): -1; (d0, s0): -1; (d0, s1): -1; (d0, t0): -1; (p0, #[p0]): 4; (p0, p0): 0; (p1, #[p1]): 4; (p1, p1): 2; (p2, #[p2]): 4; (p2, p2): 0; (p3, #[p3]): 4; (p3, p3): 1; (p4, p4): 1; (p4, p5): 4; (p5, p5): 4; (s0, _&389): -2; (s0, _&390): -2; (s0, _*200): -4; (s0, s0): 1; (s1, _&389): -2; (s1, _&390): -2; (s1, _&391): -4; (s1, s0): 2; (s1, s1): 2; (t0, _*212): -1; (t0, _*222): -2; (t0, t0): 1; '

*** Prime number p = s^2 + 4t^2, p mod 8 = 5, gcd(s,t) = 1 has: 24 # of node and # of branches: 53
 resulting in :
p\5b:5\ s\2b:1\ t\1b:1\ 
p\5b:13\ s\2b:3\ t\1b:1\ 

Prime Number
 Code
{
	p\7q:U\ = ((s\2q:U\ * s\2q:U\) + ((8_\4q:8\ * t\1q:U\) * t\1q:U\));
	_1\5q:00001\ = (p\5q:U\ & 7_\3q:111\);
	_1\2q:01\ = (s\2q:U\ & _1\1q:1\);
	_1\1q:1\ = (t\1q:U\ & _1\1q:1\);
	{
	s\3q:U\ = (s\2q:U\ * d\1q:U\);
	t\2q:U\ = (t\1q:U\ * d\1q:U\);
	(d\1q:U\ == _1\1q:1\);
};
}
 Logic:  p0\S\ = _*250\S\ .+ _*270\0\; _*250\S\ = s0\S\ & s0\S\; _*270\0\ = _*260\0\ & t0\S\; _*260\0\ = 8_0\0\ & t0\S\; p1\S\ = _*251\S\ + _*271\0\ + #[p0]\S\; _*251\S\ = _&407\S\ .+ _&406\S\; _&407\S\ = s1\S\ & s0\S\; _&406\S\ = s0\S\ & s1\S\; _*271\0\ = _*261\0\ & t0\S\; _*261\0\ = 8_1\0\ & t0\S\; p2\S\ = _*252\S\ + _*272\0\ + #[p1]\S\; _*252\S\ = _&408\S\ .+ #[_*251]\S\; _&408\S\ = s1\S\ & s1\S\; _*272\0\ = _*262\0\ & t0\S\; _*262\0\ = 8_2\0\ & t0\S\; p3\S\ = _*253\S\ + _*273\S\ + #[p2]\S\; _*273\S\ = _*263\S\ & t0\S\; _*263\S\ = 8_3\1\ & t0\S\; p4\S\ = _*274\0\ .+ #[p3]\S\; _*274\0\ = _*264\0\ & t0\S\; p5\S\ = _*275\0\ .+ #[p4]\S\; p6\S\ = #[p5]\S\; ; _10\1\ = p0\S\ & 7_0\1\; _11\0\ = p1\S\ & 7_1\1\; _12\0\ = p2\S\ & 7_2\1\; _13\0\ = p3\S\ & 7_3\0\; _14\0\ = p4\S\ & 7_4\0\; ; _10\1\ = s0\S\ & _10\1\; _11\0\ = s1\S\ & _11\0\; ; _10\1\ = t0\S\ & _10\1\; ;  s0\S\ = s0\S\ & d0\S\; s1\S\ = s1\S\ & d0\S\; ; ; t0\S\ = t0\S\ & d0\S\; ; ; d0\S\ == _10\1\; 
 It's generic Qubo is '(#[_*251], #[_*251]): 5; (#[_*251], _*252): -2; (#[_*251], _*253): -4; (#[p0], #[p0]): 5; (#[p0], #[p1]): -4; (#[p0], p1): -2; (#[p1], #[p1]): 5; (#[p1], #[p2]): -4; (#[p1], p2): -2; (#[p2], #[p2]): 5; (#[p2], #[p3]): -4; (#[p2], p3): -2; (#[p3], #[p3]): 5; (#[p3], #[p4]): -4; (#[p3], p4): -2; (#[p4], #[p4]): 5; (#[p4], p5): -2; (#[p4], p6): -4; (7_0, 7_0): 0; (7_0, _10): -2; (7_1, 7_1): 0; (7_1, _11): -2; (7_2, 7_2): 0; (7_2, _12): -2; (7_3, 7_3): 0; (7_3, _13): -2; (7_4, 7_4): 0; (7_4, _14): -2; (8_0, 8_0): 0; (8_0, _*260): -2; (8_0, t0): 1; (8_1, 8_1): 0; (8_1, _*261): -2; (8_1, t0): 1; (8_2, 8_2): 0; (8_2, _*262): -2; (8_2, t0): 1; (8_3, 8_3): 0; (8_3, _*263): -2; (8_3, t0): 1; (_&406, #[_*251]): -4; (_&406, _&406): 4; (_&406, _*251): -2; (_&407, #[_*251]): -4; (_&407, _&406): 2; (_&407, _&407): 4; (_&407, _*251): -2; (_&408, #[_*251]): 2; (_&408, _&408): 4; (_&408, _*252): -2; (_&408, _*253): -4; (_*250, #[p0]): -4; (_*250, _*250): 4; (_*250, _*270): 2; (_*250, p0): -2; (_*251, #[_*251]): 4; (_*251, #[p0]): 2; (_*251, #[p1]): -4; (_*251, _*251): 2; (_*251, _*271): 2; (_*251, p1): -2; (_*252, #[p1]): 2; (_*252, #[p2]): -4; (_*252, _*252): 2; (_*252, _*253): 4; (_*252, _*272): 2; (_*252, p2): -2; (_*253, #[p2]): 2; (_*253, #[p3]): -4; (_*253, _*253): 5; (_*253, _*273): 2; (_*253, p3): -2; (_*260, _*260): 3; (_*260, _*270): -2; (_*261, _*261): 3; (_*261, _*271): -2; (_*262, _*262): 3; (_*262, _*272): -2; (_*263, _*263): 3; (_*263, _*273): -2; (_*264, _*264): 0; (_*264, _*274): -2; (_*264, t0): 1; (_*270, #[p0]): -4; (_*270, _*270): 4; (_*270, p0): -2; (_*271, #[p0]): 2; (_*271, #[p1]): -4; (_*271, _*271): 4; (_*271, p1): -2; (_*272, #[p1]): 2; (_*272, #[p2]): -4; (_*272, _*272): 4; (_*272, p2): -2; (_*273, #[p2]): 2; (_*273, #[p3]): -4; (_*273, _*273): 4; (_*273, p3): -2; (_*274, #[p3]): 2; (_*274, #[p4]): -4; (_*274, _*274): 4; (_*274, p4): -2; (_*275, #[p4]): 2; (_*275, _*275): 1; (_*275, p5): -2; (_*275, p6): -4; (_10, _10): 6; (_10, d0): -2; (_11, _11): 4; (_12, _12): 3; (_13, _13): 3; (_14, _14): 3; (d0, d0): 1; (d0, s0): -1; (d0, s1): -1; (d0, t0): -1; (p0, #[p0]): 4; (p0, 7_0): 1; (p0, _10): -2; (p0, p0): 1; (p1, #[p1]): 4; (p1, 7_1): 1; (p1, _11): -2; (p1, p1): 1; (p2, #[p2]): 4; (p2, 7_2): 1; (p2, _12): -2; (p2, p2): 1; (p3, #[p3]): 4; (p3, 7_3): 1; (p3, _13): -2; (p3, p3): 1; (p4, #[p4]): 4; (p4, 7_4): 1; (p4, _14): -2; (p4, p4): 1; (p5, p5): 1; (p5, p6): 4; (p6, p6): 4; (s0, _&406): -2; (s0, _&407): -2; (s0, _*250): -4; (s0, _10): -1; (s0, s0): 2; (s1, _&406): -2; (s1, _&407): -2; (s1, _&408): -4; (s1, _11): -1; (s1, s0): 2; (s1, s1): 2; (t0, _*260): -1; (t0, _*261): -1; (t0, _*262): -1; (t0, _*263): -1; (t0, _*270): -2; (t0, _*271): -2; (t0, _*272): -2; (t0, _*273): -2; (t0, _*274): -2; (t0, _10): -1; (t0, t0): 1; '
 & finalized Qubo is '(#[_*251], #[_*251]): 5; (#[_*251], _*252): -2; (#[_*251], _*253): -4; (#[p0], #[p0]): 5; (#[p0], #[p1]): -4; (#[p0], p1): -2; (#[p1], #[p1]): 5; (#[p1], #[p2]): -4; (#[p1], p2): -2; (#[p2], #[p2]): 5; (#[p2], #[p3]): -4; (#[p2], p3): -2; (#[p3], #[p3]): 5; (#[p3], #[p4]): -4; (#[p3], p4): -2; (#[p4], #[p4]): 5; (#[p4], p5): -2; (#[p4], p6): -4; (_&406, #[_*251]): -4; (_&406, _&406): 4; (_&406, _*251): -2; (_&407, #[_*251]): -4; (_&407, _&406): 2; (_&407, _&407): 4; (_&407, _*251): -2; (_&408, #[_*251]): 2; (_&408, _&408): 4; (_&408, _*252): -2; (_&408, _*253): -4; (_*250, #[p0]): -4; (_*250, _*250): 4; (_*250, p0): -2; (_*251, #[_*251]): 4; (_*251, #[p0]): 2; (_*251, #[p1]): -4; (_*251, _*251): 2; (_*251, p1): -2; (_*252, #[p1]): 2; (_*252, #[p2]): -4; (_*252, _*252): 2; (_*252, _*253): 4; (_*252, p2): -2; (_*253, #[p2]): 2; (_*253, #[p3]): -4; (_*253, _*253): 5; (_*253, _*273): 2; (_*253, p3): -2; (_*263, _*263): 1; (_*263, _*273): -2; (_*273, #[p2]): 2; (_*273, #[p3]): -4; (_*273, _*273): 4; (_*273, p3): -2; (d0, d0): -1; (d0, s0): -1; (d0, s1): -1; (d0, t0): -1; (p0, #[p0]): 4; (p0, p0): 0; (p1, #[p1]): 4; (p1, p1): 2; (p2, #[p2]): 4; (p2, p2): 2; (p3, #[p3]): 4; (p3, p3): 1; (p4, #[p4]): 4; (p4, p4): 1; (p5, p5): 1; (p5, p6): 4; (p6, p6): 4; (s0, _&406): -2; (s0, _&407): -2; (s0, _*250): -4; (s0, s0): 1; (s1, _&406): -2; (s1, _&407): -2; (s1, _&408): -4; (s1, s0): 2; (s1, s1): 2; (t0, _*263): -1; (t0, _*273): -2; (t0, t0): 1; '

*** Prime number p = s^2 + 8t^2, p mod 8 = 1, gcd(s,t) = 1 has: 26 # of node and # of branches: 56
 resulting in :
p\5b:9\ s\2b:1\ t\1b:1\ 
p\5b:17\ s\2b:3\ t\1b:1\ 

Prime Number
 Code
prime : {
	p\8q:U\ = ((s\2q:U\ * s\2q:U\) + ((16_\5q:16\ * t\1q:U\) * t\1q:U\));
	_1\5q:00001\ = (p\5q:U\ & 7_\3q:111\);
	_1\2q:01\ = (s\2q:U\ & _1\1q:1\);
	_1\1q:1\ = (t\1q:U\ & _1\1q:1\);
	{
	s\3q:U\ = (s\2q:U\ * d\1q:U\);
	t\2q:U\ = (t\1q:U\ * d\1q:U\);
	(d\1q:U\ == _1\1q:1\);
};
}
 Logic:  p0\S\ = _*300\S\ .+ _*320\0\; _*300\S\ = s0\S\ & s0\S\; _*320\0\ = _*310\0\ & t0\S\; _*310\0\ = 16_0\0\ & t0\S\; p1\S\ = _*301\S\ + _*321\0\ + #[p0]\S\; _*301\S\ = _&426\S\ .+ _&425\S\; _&426\S\ = s1\S\ & s0\S\; _&425\S\ = s0\S\ & s1\S\; _*321\0\ = _*311\0\ & t0\S\; _*311\0\ = 16_1\0\ & t0\S\; p2\S\ = _*302\S\ + _*322\0\ + #[p1]\S\; _*302\S\ = _&427\S\ .+ #[_*301]\S\; _&427\S\ = s1\S\ & s1\S\; _*322\0\ = _*312\0\ & t0\S\; _*312\0\ = 16_2\0\ & t0\S\; p3\S\ = _*303\S\ + _*323\0\ + #[p2]\S\; _*323\0\ = _*313\0\ & t0\S\; _*313\0\ = 16_3\0\ & t0\S\; p4\S\ = _*324\S\ .+ #[p3]\S\; _*324\S\ = _*314\S\ & t0\S\; _*314\S\ = 16_4\1\ & t0\S\; p5\S\ = _*325\0\ .+ #[p4]\S\; _*325\0\ = _*315\0\ & t0\S\; p6\S\ = _*326\0\ .+ #[p5]\S\; p7\S\ = #[p6]\S\; ; _10\1\ = p0\S\ & 7_0\1\; _11\0\ = p1\S\ & 7_1\1\; _12\0\ = p2\S\ & 7_2\1\; _13\0\ = p3\S\ & 7_3\0\; _14\0\ = p4\S\ & 7_4\0\; ; _10\1\ = s0\S\ & _10\1\; _11\0\ = s1\S\ & _11\0\; ; _10\1\ = t0\S\ & _10\1\; ;  s0\S\ = s0\S\ & d0\S\; s1\S\ = s1\S\ & d0\S\; ; ; t0\S\ = t0\S\ & d0\S\; ; ; d0\S\ == _10\1\; 
 It's generic Qubo is '(#[_*301], #[_*301]): 5; (#[_*301], _*302): -2; (#[_*301], _*303): -4; (#[p0], #[p0]): 5; (#[p0], #[p1]): -4; (#[p0], p1): -2; (#[p1], #[p1]): 5; (#[p1], #[p2]): -4; (#[p1], p2): -2; (#[p2], #[p2]): 5; (#[p2], #[p3]): -4; (#[p2], p3): -2; (#[p3], #[p3]): 5; (#[p3], #[p4]): -4; (#[p3], p4): -2; (#[p4], #[p4]): 5; (#[p4], #[p5]): -4; (#[p4], p5): -2; (#[p5], #[p5]): 5; (#[p5], p6): -2; (#[p5], p7): -4; (16_0, 16_0): 0; (16_0, _*310): -2; (16_0, t0): 1; (16_1, 16_1): 0; (16_1, _*311): -2; (16_1, t0): 1; (16_2, 16_2): 0; (16_2, _*312): -2; (16_2, t0): 1; (16_3, 16_3): 0; (16_3, _*313): -2; (16_3, t0): 1; (16_4, 16_4): 0; (16_4, _*314): -2; (16_4, t0): 1; (7_0, 7_0): 0; (7_0, _10): -2; (7_1, 7_1): 0; (7_1, _11): -2; (7_2, 7_2): 0; (7_2, _12): -2; (7_3, 7_3): 0; (7_3, _13): -2; (7_4, 7_4): 0; (7_4, _14): -2; (_&425, #[_*301]): -4; (_&425, _&425): 4; (_&425, _*301): -2; (_&426, #[_*301]): -4; (_&426, _&425): 2; (_&426, _&426): 4; (_&426, _*301): -2; (_&427, #[_*301]): 2; (_&427, _&427): 4; (_&427, _*302): -2; (_&427, _*303): -4; (_*300, #[p0]): -4; (_*300, _*300): 4; (_*300, _*320): 2; (_*300, p0): -2; (_*301, #[_*301]): 4; (_*301, #[p0]): 2; (_*301, #[p1]): -4; (_*301, _*301): 2; (_*301, _*321): 2; (_*301, p1): -2; (_*302, #[p1]): 2; (_*302, #[p2]): -4; (_*302, _*302): 2; (_*302, _*303): 4; (_*302, _*322): 2; (_*302, p2): -2; (_*303, #[p2]): 2; (_*303, #[p3]): -4; (_*303, _*303): 5; (_*303, _*323): 2; (_*303, p3): -2; (_*310, _*310): 3; (_*310, _*320): -2; (_*311, _*311): 3; (_*311, _*321): -2; (_*312, _*312): 3; (_*312, _*322): -2; (_*313, _*313): 3; (_*313, _*323): -2; (_*314, _*314): 3; (_*314, _*324): -2; (_*315, _*315): 0; (_*315, _*325): -2; (_*315, t0): 1; (_*320, #[p0]): -4; (_*320, _*320): 4; (_*320, p0): -2; (_*321, #[p0]): 2; (_*321, #[p1]): -4; (_*321, _*321): 4; (_*321, p1): -2; (_*322, #[p1]): 2; (_*322, #[p2]): -4; (_*322, _*322): 4; (_*322, p2): -2; (_*323, #[p2]): 2; (_*323, #[p3]): -4; (_*323, _*323): 4; (_*323, p3): -2; (_*324, #[p3]): 2; (_*324, #[p4]): -4; (_*324, _*324): 4; (_*324, p4): -2; (_*325, #[p4]): 2; (_*325, #[p5]): -4; (_*325, _*325): 4; (_*325, p5): -2; (_*326, #[p5]): 2; (_*326, _*326): 1; (_*326, p6): -2; (_*326, p7): -4; (_10, _10): 6; (_10, d0): -2; (_11, _11): 4; (_12, _12): 3; (_13, _13): 3; (_14, _14): 3; (d0, d0): 1; (d0, s0): -1; (d0, s1): -1; (d0, t0): -1; (p0, #[p0]): 4; (p0, 7_0): 1; (p0, _10): -2; (p0, p0): 1; (p1, #[p1]): 4; (p1, 7_1): 1; (p1, _11): -2; (p1, p1): 1; (p2, #[p2]): 4; (p2, 7_2): 1; (p2, _12): -2; (p2, p2): 1; (p3, #[p3]): 4; (p3, 7_3): 1; (p3, _13): -2; (p3, p3): 1; (p4, #[p4]): 4; (p4, 7_4): 1; (p4, _14): -2; (p4, p4): 1; (p5, #[p5]): 4; (p5, p5): 1; (p6, p6): 1; (p6, p7): 4; (p7, p7): 4; (s0, _&425): -2; (s0, _&426): -2; (s0, _*300): -4; (s0, _10): -1; (s0, s0): 2; (s1, _&425): -2; (s1, _&426): -2; (s1, _&427): -4; (s1, _11): -1; (s1, s0): 2; (s1, s1): 2; (t0, _*310): -1; (t0, _*311): -1; (t0, _*312): -1; (t0, _*313): -1; (t0, _*314): -1; (t0, _*320): -2; (t0, _*321): -2; (t0, _*322): -2; (t0, _*323): -2; (t0, _*324): -2; (t0, _*325): -2; (t0, _10): -1; (t0, t0): 1; '
 & finalized Qubo is '(#[_*301], #[_*301]): 5; (#[_*301], _*302): -2; (#[_*301], _*303): -4; (#[p0], #[p0]): 5; (#[p0], #[p1]): -4; (#[p0], p1): -2; (#[p1], #[p1]): 5; (#[p1], #[p2]): -4; (#[p1], p2): -2; (#[p2], #[p2]): 5; (#[p2], #[p3]): -4; (#[p2], p3): -2; (#[p3], #[p3]): 5; (#[p3], #[p4]): -4; (#[p3], p4): -2; (#[p4], #[p4]): 5; (#[p4], #[p5]): -4; (#[p4], p5): -2; (#[p5], #[p5]): 5; (#[p5], p6): -2; (#[p5], p7): -4; (_&425, #[_*301]): -4; (_&425, _&425): 4; (_&425, _*301): -2; (_&426, #[_*301]): -4; (_&426, _&425): 2; (_&426, _&426): 4; (_&426, _*301): -2; (_&427, #[_*301]): 2; (_&427, _&427): 4; (_&427, _*302): -2; (_&427, _*303): -4; (_*300, #[p0]): -4; (_*300, _*300): 4; (_*300, p0): -2; (_*301, #[_*301]): 4; (_*301, #[p0]): 2; (_*301, #[p1]): -4; (_*301, _*301): 2; (_*301, p1): -2; (_*302, #[p1]): 2; (_*302, #[p2]): -4; (_*302, _*302): 2; (_*302, _*303): 4; (_*302, p2): -2; (_*303, #[p2]): 2; (_*303, #[p3]): -4; (_*303, _*303): 5; (_*303, p3): -2; (_*314, _*314): 1; (_*314, _*324): -2; (_*324, #[p3]): 2; (_*324, #[p4]): -4; (_*324, _*324): 4; (_*324, p4): -2; (d0, d0): -1; (d0, s0): -1; (d0, s1): -1; (d0, t0): -1; (p0, #[p0]): 4; (p0, p0): 0; (p1, #[p1]): 4; (p1, p1): 2; (p2, #[p2]): 4; (p2, p2): 2; (p3, #[p3]): 4; (p3, p3): 1; (p4, #[p4]): 4; (p4, p4): 1; (p5, #[p5]): 4; (p5, p5): 1; (p6, p6): 1; (p6, p7): 4; (p7, p7): 4; (s0, _&425): -2; (s0, _&426): -2; (s0, _*300): -4; (s0, s0): 1; (s1, _&425): -2; (s1, _&426): -2; (s1, _&427): -4; (s1, s0): 2; (s1, s1): 2; (t0, _*314): -1; (t0, _*324): -2; (t0, t0): 1; '

*** Prime number p = s^2 + 16t^2, p mod 8 = 1, gcd(s,t) = 1 has: 28 # of node and # of branches: 58
 resulting in :
p\5b:17\ s\2b:1\ t\1b:1\ 
p\5b:25\ s\2b:3\ t\1b:1\ 

Prime Number
 Code
{
	p\8q:U\ = (((s\2q:U\ * s\2q:U\) + ((8_\4q:8\ * s\2q:U\) * t\1q:U\)) + ((8_\4q:8\ * t\1q:U\) * t\1q:U\));
	_1\5q:00001\ = (p\5q:U\ & 7_\3q:111\);
	_1\2q:01\ = (s\2q:U\ & _1\1q:1\);
	_1\1q:1\ = (t\1q:U\ & _1\1q:1\);
	{
	s\3q:U\ = (s\2q:U\ * d\1q:U\);
	t\2q:U\ = (t\1q:U\ * d\1q:U\);
	(d\1q:U\ == _1\1q:1\);
};
}
 Logic:  p0\S\ = _*350\S\ + _*370\0\ + _*390\0\; _*350\S\ = s0\S\ & s0\S\; _*370\0\ = _*360\0\ & t0\S\; _*360\0\ = 8_0\0\ & s0\S\; _*390\0\ = _*380\0\ & t0\S\; _*380\0\ = 8_0\0\ & t0\S\; p1\S\ = _+4131\S\ .+ _*391\0\; _+4131\S\ = _*351\S\ + _*371\0\ + #[p0]\S\; _*351\S\ = _&447\S\ .+ _&446\S\; _&447\S\ = s1\S\ & s0\S\; _&446\S\ = s0\S\ & s1\S\; _*371\0\ = _*361\0\ & t0\S\; _*361\0\ = _&451\0\ .+ _&450\0\; _&451\0\ = 8_1\0\ & s0\S\; _&450\0\ = 8_0\0\ & s1\S\; _*391\0\ = _*381\0\ & t0\S\; _*381\0\ = 8_1\0\ & t0\S\; p2\S\ = _+4132\S\ + _*392\0\ + #[p1]\S\; _+4132\S\ = _*352\S\ + _*372\0\ + #[_+4131]\S\; _*352\S\ = _&448\S\ .+ #[_*351]\S\; _&448\S\ = s1\S\ & s1\S\; _*372\0\ = _*362\0\ & t0\S\; _*362\0\ = _&453\0\ + _&452\0\ + #[_*361]\0\; _&453\0\ = 8_2\0\ & s0\S\; _&452\0\ = 8_1\0\ & s1\S\; _*392\0\ = _*382\0\ & t0\S\; _*382\0\ = 8_2\0\ & t0\S\; p3\S\ = _+4133\S\ + _*393\S\ + #[p2]\S\; _+4133\S\ = _*353\S\ + _*373\S\ + #[_+4132]\S\; _*373\S\ = _*363\S\ & t0\S\; _*363\S\ = _&455\S\ + _&454\0\ + #[_*362]\0\; _&455\S\ = 8_3\1\ & s0\S\; _&454\0\ = 8_2\0\ & s1\S\; _*393\S\ = _*383\S\ & t0\S\; _*383\S\ = 8_3\1\ & t0\S\; p4\S\ = _+4134\S\ + _*394\0\ + #[p3]\S\; _+4134\S\ = _*374\S\ .+ #[_+4133]\S\; _*374\S\ = _*364\S\ & t0\S\; _*364\S\ = _&456\S\ .+ #[_*363]\S\; _&456\S\ = 8_3\1\ & s1\S\; _*394\0\ = _*384\0\ & t0\S\; p5\S\ = _+4135\S\ + _*395\0\ + #[p4]\S\; _+4135\S\ = _*375\S\ .+ #[_+4134]\S\; _*375\S\ = _*365\S\ & t0\S\; ; p6\S\ = _*376\0\ + #[_+4135]\S\ + #[p5]\S\; p7\S\ = #[p6]\S\; ; _10\1\ = p0\S\ & 7_0\1\; _11\0\ = p1\S\ & 7_1\1\; _12\0\ = p2\S\ & 7_2\1\; _13\0\ = p3\S\ & 7_3\0\; _14\0\ = p4\S\ & 7_4\0\; ; _10\1\ = s0\S\ & _10\1\; _11\0\ = s1\S\ & _11\0\; ; _10\1\ = t0\S\ & _10\1\; ;  s0\S\ = s0\S\ & d0\S\; s1\S\ = s1\S\ & d0\S\; ; ; t0\S\ = t0\S\ & d0\S\; ; ; d0\S\ == _10\1\; 
 It's generic Qubo is '(#[_*351], #[_*351]): 5; (#[_*351], _*352): -2; (#[_*351], _*353): -4; (#[_*361], #[_*361]): 5; (#[_*361], #[_*362]): -4; (#[_*361], _*362): -2; (#[_*362], #[_*362]): 5; (#[_*362], #[_*363]): -4; (#[_*362], _*363): -2; (#[_*363], #[_*363]): 5; (#[_*363], _*364): -2; (#[_*363], _*365): -4; (#[_+4131], #[_+4131]): 5; (#[_+4131], #[_+4132]): -4; (#[_+4131], _+4132): -2; (#[_+4132], #[_+4132]): 5; (#[_+4132], #[_+4133]): -4; (#[_+4132], _+4133): -2; (#[_+4133], #[_+4133]): 5; (#[_+4133], #[_+4134]): -4; (#[_+4133], _+4134): -2; (#[_+4134], #[_+4134]): 5; (#[_+4134], #[_+4135]): -4; (#[_+4134], _+4135): -2; (#[_+4135], #[_+4135]): 5; (#[_+4135], #[p5]): 2; (#[_+4135], p6): -2; (#[_+4135], p7): -4; (#[p0], #[_+4131]): -4; (#[p0], #[p0]): 5; (#[p0], _+4131): -2; (#[p1], #[p1]): 5; (#[p1], #[p2]): -4; (#[p1], p2): -2; (#[p2], #[p2]): 5; (#[p2], #[p3]): -4; (#[p2], p3): -2; (#[p3], #[p3]): 5; (#[p3], #[p4]): -4; (#[p3], p4): -2; (#[p4], #[p4]): 5; (#[p4], #[p5]): -4; (#[p4], p5): -2; (#[p5], #[p5]): 5; (#[p5], p6): -2; (#[p5], p7): -4; (7_0, 7_0): 0; (7_0, _10): -2; (7_1, 7_1): 0; (7_1, _11): -2; (7_2, 7_2): 0; (7_2, _12): -2; (7_3, 7_3): 0; (7_3, _13): -2; (7_4, 7_4): 0; (7_4, _14): -2; (8_0, 8_0): 0; (8_0, _&450): -2; (8_0, _*360): -2; (8_0, _*380): -2; (8_0, s0): 1; (8_0, s1): 1; (8_0, t0): 1; (8_1, 8_1): 0; (8_1, _&451): -2; (8_1, _&452): -2; (8_1, _*381): -2; (8_1, s0): 1; (8_1, s1): 1; (8_1, t0): 1; (8_2, 8_2): 0; (8_2, _&453): -2; (8_2, _&454): -2; (8_2, _*382): -2; (8_2, s0): 1; (8_2, s1): 1; (8_2, t0): 1; (8_3, 8_3): 0; (8_3, _&455): -2; (8_3, _&456): -2; (8_3, _*383): -2; (8_3, s0): 1; (8_3, s1): 1; (8_3, t0): 1; (_&446, #[_*351]): -4; (_&446, _&446): 4; (_&446, _*351): -2; (_&447, #[_*351]): -4; (_&447, _&446): 2; (_&447, _&447): 4; (_&447, _*351): -2; (_&448, #[_*351]): 2; (_&448, _&448): 4; (_&448, _*352): -2; (_&448, _*353): -4; (_&450, #[_*361]): -4; (_&450, _&450): 4; (_&450, _*361): -2; (_&451, #[_*361]): -4; (_&451, _&450): 2; (_&451, _&451): 4; (_&451, _*361): -2; (_&452, #[_*361]): 2; (_&452, #[_*362]): -4; (_&452, _&452): 4; (_&452, _*362): -2; (_&453, #[_*361]): 2; (_&453, #[_*362]): -4; (_&453, _&452): 2; (_&453, _&453): 4; (_&453, _*362): -2; (_&454, #[_*362]): 2; (_&454, #[_*363]): -4; (_&454, _&454): 4; (_&454, _*363): -2; (_&455, #[_*362]): 2; (_&455, #[_*363]): -4; (_&455, _&454): 2; (_&455, _&455): 4; (_&455, _*363): -2; (_&456, #[_*363]): 2; (_&456, _&456): 4; (_&456, _*364): -2; (_&456, _*365): -4; (_*350, #[p0]): -4; (_*350, _*350): 4; (_*350, _*370): 2; (_*350, _*390): 2; (_*350, p0): -2; (_*351, #[_*351]): 4; (_*351, #[_+4131]): -4; (_*351, #[p0]): 2; (_*351, _*351): 2; (_*351, _*371): 2; (_*351, _+4131): -2; (_*352, #[_+4131]): 2; (_*352, #[_+4132]): -4; (_*352, _*352): 2; (_*352, _*353): 4; (_*352, _*372): 2; (_*352, _+4132): -2; (_*353, #[_+4132]): 2; (_*353, #[_+4133]): -4; (_*353, _*353): 5; (_*353, _*373): 2; (_*353, _+4133): -2; (_*360, _*360): 3; (_*360, _*370): -2; (_*360, t0): 1; (_*361, #[_*361]): 4; (_*361, _*361): 1; (_*361, _*371): -2; (_*361, t0): 1; (_*362, #[_*362]): 4; (_*362, _*362): 1; (_*362, _*372): -2; (_*362, t0): 1; (_*363, #[_*363]): 4; (_*363, _*363): 1; (_*363, _*373): -2; (_*363, t0): 1; (_*364, _*364): 1; (_*364, _*365): 4; (_*364, _*374): -2; (_*364, t0): 1; (_*365, _*365): 4; (_*365, _*375): -2; (_*365, t0): 1; (_*370, #[p0]): -4; (_*370, _*370): 4; (_*370, _*390): 2; (_*370, p0): -2; (_*371, #[_+4131]): -4; (_*371, #[p0]): 2; (_*371, _*371): 4; (_*371, _+4131): -2; (_*372, #[_+4131]): 2; (_*372, #[_+4132]): -4; (_*372, _*372): 4; (_*372, _+4132): -2; (_*373, #[_+4132]): 2; (_*373, #[_+4133]): -4; (_*373, _*373): 4; (_*373, _+4133): -2; (_*374, #[_+4133]): 2; (_*374, #[_+4134]): -4; (_*374, _*374): 4; (_*374, _+4134): -2; (_*375, #[_+4134]): 2; (_*375, #[_+4135]): -4; (_*375, _*375): 4; (_*375, _+4135): -2; (_*376, #[_+4135]): 2; (_*376, #[p5]): 2; (_*376, _*376): 1; (_*376, p6): -2; (_*376, p7): -4; (_*380, _*380): 3; (_*380, _*390): -2; (_*381, _*381): 3; (_*381, _*391): -2; (_*382, _*382): 3; (_*382, _*392): -2; (_*383, _*383): 3; (_*383, _*393): -2; (_*384, _*384): 0; (_*384, _*394): -2; (_*384, t0): 1; (_*390, #[p0]): -4; (_*390, _*390): 4; (_*390, p0): -2; (_*391, #[p1]): -4; (_*391, _*391): 4; (_*391, p1): -2; (_*392, #[p1]): 2; (_*392, #[p2]): -4; (_*392, _*392): 4; (_*392, p2): -2; (_*393, #[p2]): 2; (_*393, #[p3]): -4; (_*393, _*393): 4; (_*393, p3): -2; (_*394, #[p3]): 2; (_*394, #[p4]): -4; (_*394, _*394): 4; (_*394, p4): -2; (_*395, #[p4]): 2; (_*395, #[p5]): -4; (_*395, _*395): 1; (_*395, p5): -2; (_+4131, #[_+4131]): 4; (_+4131, #[p1]): -4; (_+4131, _*391): 2; (_+4131, _+4131): 2; (_+4131, p1): -2; (_+4132, #[_+4132]): 4; (_+4132, #[p1]): 2; (_+4132, #[p2]): -4; (_+4132, _*392): 2; (_+4132, _+4132): 2; (_+4132, p2): -2; (_+4133, #[_+4133]): 4; (_+4133, #[p2]): 2; (_+4133, #[p3]): -4; (_+4133, _*393): 2; (_+4133, _+4133): 2; (_+4133, p3): -2; (_+4134, #[_+4134]): 4; (_+4134, #[p3]): 2; (_+4134, #[p4]): -4; (_+4134, _*394): 2; (_+4134, _+4134): 2; (_+4134, p4): -2; (_+4135, #[_+4135]): 4; (_+4135, #[p4]): 2; (_+4135, #[p5]): -4; (_+4135, _*395): 2; (_+4135, _+4135): 2; (_+4135, p5): -2; (_10, _10): 6; (_10, d0): -2; (_11, _11): 4; (_12, _12): 3; (_13, _13): 3; (_14, _14): 3; (d0, d0): 1; (d0, s0): -1; (d0, s1): -1; (d0, t0): -1; (p0, #[p0]): 4; (p0, 7_0): 1; (p0, _10): -2; (p0, p0): 1; (p1, #[p1]): 4; (p1, 7_1): 1; (p1, _11): -2; (p1, p1): 1; (p2, #[p2]): 4; (p2, 7_2): 1; (p2, _12): -2; (p2, p2): 1; (p3, #[p3]): 4; (p3, 7_3): 1; (p3, _13): -2; (p3, p3): 1; (p4, #[p4]): 4; (p4, 7_4): 1; (p4, _14): -2; (p4, p4): 1; (p5, #[p5]): 4; (p5, p5): 1; (p6, p6): 1; (p6, p7): 4; (p7, p7): 4; (s0, _&446): -2; (s0, _&447): -2; (s0, _&451): -2; (s0, _&453): -2; (s0, _&455): -2; (s0, _*350): -4; (s0, _*360): -2; (s0, _10): -1; (s0, s0): 2; (s1, _&446): -2; (s1, _&447): -2; (s1, _&448): -4; (s1, _&450): -2; (s1, _&452): -2; (s1, _&454): -2; (s1, _&456): -2; (s1, _11): -1; (s1, s0): 2; (s1, s1): 2; (t0, _*370): -2; (t0, _*371): -2; (t0, _*372): -2; (t0, _*373): -2; (t0, _*374): -2; (t0, _*375): -2; (t0, _*380): -1; (t0, _*381): -1; (t0, _*382): -1; (t0, _*383): -1; (t0, _*390): -2; (t0, _*391): -2; (t0, _*392): -2; (t0, _*393): -2; (t0, _*394): -2; (t0, _10): -1; (t0, t0): 1; '
 & finalized Qubo is '(#[_*351], #[_*351]): 5; (#[_*351], _*352): -2; (#[_*351], _*353): -4; (#[_*363], #[_*363]): 5; (#[_*363], _*364): -2; (#[_*363], _*365): -4; (#[_+4131], #[_+4131]): 5; (#[_+4131], #[_+4132]): -4; (#[_+4131], _+4132): -2; (#[_+4132], #[_+4132]): 5; (#[_+4132], #[_+4133]): -4; (#[_+4132], _+4133): -2; (#[_+4133], #[_+4133]): 5; (#[_+4133], #[_+4134]): -4; (#[_+4133], _+4134): -2; (#[_+4134], #[_+4134]): 5; (#[_+4134], #[_+4135]): -4; (#[_+4134], _+4135): -2; (#[_+4135], #[_+4135]): 5; (#[_+4135], #[p5]): 2; (#[_+4135], p6): -2; (#[_+4135], p7): -4; (#[p0], #[_+4131]): -4; (#[p0], #[p0]): 5; (#[p0], _+4131): -2; (#[p1], #[p1]): 5; (#[p1], #[p2]): -4; (#[p1], p2): -2; (#[p2], #[p2]): 5; (#[p2], #[p3]): -4; (#[p2], p3): -2; (#[p3], #[p3]): 5; (#[p3], #[p4]): -4; (#[p3], p4): -2; (#[p4], #[p4]): 5; (#[p4], #[p5]): -4; (#[p4], p5): -2; (#[p5], #[p5]): 5; (#[p5], p6): -2; (#[p5], p7): -4; (_&446, #[_*351]): -4; (_&446, _&446): 4; (_&446, _*351): -2; (_&447, #[_*351]): -4; (_&447, _&446): 2; (_&447, _&447): 4; (_&447, _*351): -2; (_&448, #[_*351]): 2; (_&448, _&448): 4; (_&448, _*352): -2; (_&448, _*353): -4; (_&455, #[_*363]): -4; (_&455, _&455): 2; (_&455, _*363): -2; (_&456, #[_*363]): 2; (_&456, _&456): 2; (_&456, _*364): -2; (_&456, _*365): -4; (_*350, #[p0]): -4; (_*350, _*350): 4; (_*350, p0): -2; (_*351, #[_*351]): 4; (_*351, #[_+4131]): -4; (_*351, #[p0]): 2; (_*351, _*351): 2; (_*351, _+4131): -2; (_*352, #[_+4131]): 2; (_*352, #[_+4132]): -4; (_*352, _*352): 2; (_*352, _*353): 4; (_*352, _+4132): -2; (_*353, #[_+4132]): 2; (_*353, #[_+4133]): -4; (_*353, _*353): 5; (_*353, _*373): 2; (_*353, _+4133): -2; (_*363, #[_*363]): 4; (_*363, _*363): 1; (_*363, _*373): -2; (_*363, t0): 1; (_*364, _*364): 1; (_*364, _*365): 4; (_*364, _*374): -2; (_*364, t0): 1; (_*365, _*365): 4; (_*365, _*375): -2; (_*365, t0): 1; (_*373, #[_+4132]): 2; (_*373, #[_+4133]): -4; (_*373, _*373): 4; (_*373, _+4133): -2; (_*374, #[_+4133]): 2; (_*374, #[_+4134]): -4; (_*374, _*374): 4; (_*374, _+4134): -2; (_*375, #[_+4134]): 2; (_*375, #[_+4135]): -4; (_*375, _*375): 4; (_*375, _+4135): -2; (_*383, _*383): 1; (_*383, _*393): -2; (_*393, #[p2]): 2; (_*393, #[p3]): -4; (_*393, _*393): 4; (_*393, p3): -2; (_+4131, #[_+4131]): 4; (_+4131, #[p1]): -4; (_+4131, _+4131): 2; (_+4131, p1): -2; (_+4132, #[_+4132]): 4; (_+4132, #[p1]): 2; (_+4132, #[p2]): -4; (_+4132, _+4132): 2; (_+4132, p2): -2; (_+4133, #[_+4133]): 4; (_+4133, #[p2]): 2; (_+4133, #[p3]): -4; (_+4133, _*393): 2; (_+4133, _+4133): 2; (_+4133, p3): -2; (_+4134, #[_+4134]): 4; (_+4134, #[p3]): 2; (_+4134, #[p4]): -4; (_+4134, _+4134): 2; (_+4134, p4): -2; (_+4135, #[_+4135]): 4; (_+4135, #[p4]): 2; (_+4135, #[p5]): -4; (_+4135, _+4135): 2; (_+4135, p5): -2; (d0, d0): -1; (d0, s0): -1; (d0, s1): -1; (d0, t0): -1; (p0, #[p0]): 4; (p0, p0): 0; (p1, #[p1]): 4; (p1, p1): 2; (p2, #[p2]): 4; (p2, p2): 2; (p3, #[p3]): 4; (p3, p3): 1; (p4, #[p4]): 4; (p4, p4): 1; (p5, #[p5]): 4; (p5, p5): 1; (p6, p6): 1; (p6, p7): 4; (p7, p7): 4; (s0, _&446): -2; (s0, _&447): -2; (s0, _&455): -2; (s0, _*350): -4; (s0, s0): 2; (s1, _&446): -2; (s1, _&447): -2; (s1, _&448): -4; (s1, _&456): -2; (s1, s0): 2; (s1, s1): 3; (t0, _*373): -2; (t0, _*374): -2; (t0, _*375): -2; (t0, _*383): -1; (t0, _*393): -2; (t0, t0): 1; '

*** Prime number p = s2 + 8st + 8t2, p mod 8 = 1, gcd(s,t) = 1 has: 47 # of node and # of branches: 119
Prime Number
 Code
{
	p\7q:U\ = (((s\2q:U\ * s\2q:U\) + ((4_\3q:4\ * s\2q:U\) * t\1q:U\)) + ((2_\2q:2\ * t\1q:U\) * t\1q:U\));
	7_\5q:00111\ = (p\5q:U\ & 7_\3q:111\);
	_1\2q:01\ = (s\2q:U\ & _1\1q:1\);
	_1\1q:1\ = (t\1q:U\ & _1\1q:1\);
	{
	s\3q:U\ = (s\2q:U\ * d\1q:U\);
	t\2q:U\ = (t\1q:U\ * d\1q:U\);
	(d\1q:U\ == _1\1q:1\);
};
}
 Logic:  p0\S\ = _*420\S\ + _*440\0\ + _*460\0\; _*420\S\ = s0\S\ & s0\S\; _*440\0\ = _*430\0\ & t0\S\; _*430\0\ = 4_0\0\ & s0\S\; _*460\0\ = _*450\0\ & t0\S\; _*450\0\ = 2_0\0\ & t0\S\; p1\S\ = _+4251\S\ .+ _*461\S\; _+4251\S\ = _*421\S\ + _*441\0\ + #[p0]\S\; _*421\S\ = _&480\S\ .+ _&479\S\; _&480\S\ = s1\S\ & s0\S\; _&479\S\ = s0\S\ & s1\S\; _*441\0\ = _*431\0\ & t0\S\; _*431\0\ = _&484\0\ .+ _&483\0\; _&484\0\ = 4_1\0\ & s0\S\; _&483\0\ = 4_0\0\ & s1\S\; _*461\S\ = _*451\S\ & t0\S\; _*451\S\ = 2_1\1\ & t0\S\; p2\S\ = _+4252\S\ + _*462\0\ + #[p1]\S\; _+4252\S\ = _*422\S\ + _*442\S\ + #[_+4251]\S\; _*422\S\ = _&481\S\ .+ #[_*421]\S\; _&481\S\ = s1\S\ & s1\S\; _*442\S\ = _*432\S\ & t0\S\; _*432\S\ = _&486\S\ + _&485\0\ + #[_*431]\0\; _&486\S\ = 4_2\1\ & s0\S\; _&485\0\ = 4_1\0\ & s1\S\; _*462\0\ = _*452\0\ & t0\S\; p3\S\ = _+4253\S\ + _*463\0\ + #[p2]\S\; _+4253\S\ = _*423\S\ + _*443\S\ + #[_+4252]\S\; _*443\S\ = _*433\S\ & t0\S\; _*433\S\ = _&487\S\ .+ #[_*432]\S\; _&487\S\ = 4_2\1\ & s1\S\; ; p4\S\ = _*444\S\ + #[_+4253]\S\ + #[p3]\S\; _*444\S\ = _*434\S\ & t0\S\; p5\S\ = _*445\0\ .+ #[p4]\S\; p6\S\ = #[p5]\S\; ; 7_0\1\ = p0\S\ & 7_0\1\; 7_1\1\ = p1\S\ & 7_1\1\; 7_2\1\ = p2\S\ & 7_2\1\; 7_3\0\ = p3\S\ & 7_3\0\; 7_4\0\ = p4\S\ & 7_4\0\; ; _10\1\ = s0\S\ & _10\1\; _11\0\ = s1\S\ & _11\0\; ; _10\1\ = t0\S\ & _10\1\; ;  s0\S\ = s0\S\ & d0\S\; s1\S\ = s1\S\ & d0\S\; ; ; t0\S\ = t0\S\ & d0\S\; ; ; d0\S\ == _10\1\; 
 It's generic Qubo is '(#[_*421], #[_*421]): 5; (#[_*421], _*422): -2; (#[_*421], _*423): -4; (#[_*431], #[_*431]): 5; (#[_*431], #[_*432]): -4; (#[_*431], _*432): -2; (#[_*432], #[_*432]): 5; (#[_*432], _*433): -2; (#[_*432], _*434): -4; (#[_+4251], #[_+4251]): 5; (#[_+4251], #[_+4252]): -4; (#[_+4251], _+4252): -2; (#[_+4252], #[_+4252]): 5; (#[_+4252], #[_+4253]): -4; (#[_+4252], _+4253): -2; (#[_+4253], #[_+4253]): 5; (#[_+4253], #[p3]): 2; (#[_+4253], #[p4]): -4; (#[_+4253], p4): -2; (#[p0], #[_+4251]): -4; (#[p0], #[p0]): 5; (#[p0], _+4251): -2; (#[p1], #[p1]): 5; (#[p1], #[p2]): -4; (#[p1], p2): -2; (#[p2], #[p2]): 5; (#[p2], #[p3]): -4; (#[p2], p3): -2; (#[p3], #[p3]): 5; (#[p3], #[p4]): -4; (#[p3], p4): -2; (#[p4], #[p4]): 5; (#[p4], p5): -2; (#[p4], p6): -4; (2_0, 2_0): 0; (2_0, _*450): -2; (2_0, t0): 1; (2_1, 2_1): 0; (2_1, _*451): -2; (2_1, t0): 1; (4_0, 4_0): 0; (4_0, _&483): -2; (4_0, _*430): -2; (4_0, s0): 1; (4_0, s1): 1; (4_1, 4_1): 0; (4_1, _&484): -2; (4_1, _&485): -2; (4_1, s0): 1; (4_1, s1): 1; (4_2, 4_2): 0; (4_2, _&486): -2; (4_2, _&487): -2; (4_2, s0): 1; (4_2, s1): 1; (7_0, 7_0): 1; (7_1, 7_1): 1; (7_2, 7_2): 1; (7_3, 7_3): 1; (7_4, 7_4): 1; (_&479, #[_*421]): -4; (_&479, _&479): 4; (_&479, _*421): -2; (_&480, #[_*421]): -4; (_&480, _&479): 2; (_&480, _&480): 4; (_&480, _*421): -2; (_&481, #[_*421]): 2; (_&481, _&481): 4; (_&481, _*422): -2; (_&481, _*423): -4; (_&483, #[_*431]): -4; (_&483, _&483): 4; (_&483, _*431): -2; (_&484, #[_*431]): -4; (_&484, _&483): 2; (_&484, _&484): 4; (_&484, _*431): -2; (_&485, #[_*431]): 2; (_&485, #[_*432]): -4; (_&485, _&485): 4; (_&485, _*432): -2; (_&486, #[_*431]): 2; (_&486, #[_*432]): -4; (_&486, _&485): 2; (_&486, _&486): 4; (_&486, _*432): -2; (_&487, #[_*432]): 2; (_&487, _&487): 4; (_&487, _*433): -2; (_&487, _*434): -4; (_*420, #[p0]): -4; (_*420, _*420): 4; (_*420, _*440): 2; (_*420, _*460): 2; (_*420, p0): -2; (_*421, #[_*421]): 4; (_*421, #[_+4251]): -4; (_*421, #[p0]): 2; (_*421, _*421): 2; (_*421, _*441): 2; (_*421, _+4251): -2; (_*422, #[_+4251]): 2; (_*422, #[_+4252]): -4; (_*422, _*422): 2; (_*422, _*423): 4; (_*422, _*442): 2; (_*422, _+4252): -2; (_*423, #[_+4252]): 2; (_*423, #[_+4253]): -4; (_*423, _*423): 5; (_*423, _*443): 2; (_*423, _+4253): -2; (_*430, _*430): 3; (_*430, _*440): -2; (_*430, t0): 1; (_*431, #[_*431]): 4; (_*431, _*431): 1; (_*431, _*441): -2; (_*431, t0): 1; (_*432, #[_*432]): 4; (_*432, _*432): 1; (_*432, _*442): -2; (_*432, t0): 1; (_*433, _*433): 1; (_*433, _*434): 4; (_*433, _*443): -2; (_*433, t0): 1; (_*434, _*434): 4; (_*434, _*444): -2; (_*434, t0): 1; (_*440, #[p0]): -4; (_*440, _*440): 4; (_*440, _*460): 2; (_*440, p0): -2; (_*441, #[_+4251]): -4; (_*441, #[p0]): 2; (_*441, _*441): 4; (_*441, _+4251): -2; (_*442, #[_+4251]): 2; (_*442, #[_+4252]): -4; (_*442, _*442): 4; (_*442, _+4252): -2; (_*443, #[_+4252]): 2; (_*443, #[_+4253]): -4; (_*443, _*443): 4; (_*443, _+4253): -2; (_*444, #[_+4253]): 2; (_*444, #[p3]): 2; (_*444, #[p4]): -4; (_*444, _*444): 4; (_*444, p4): -2; (_*445, #[p4]): 2; (_*445, _*445): 1; (_*445, p5): -2; (_*445, p6): -4; (_*450, _*450): 3; (_*450, _*460): -2; (_*451, _*451): 3; (_*451, _*461): -2; (_*452, _*452): 0; (_*452, _*462): -2; (_*452, t0): 1; (_*460, #[p0]): -4; (_*460, _*460): 4; (_*460, p0): -2; (_*461, #[p1]): -4; (_*461, _*461): 4; (_*461, p1): -2; (_*462, #[p1]): 2; (_*462, #[p2]): -4; (_*462, _*462): 4; (_*462, p2): -2; (_*463, #[p2]): 2; (_*463, #[p3]): -4; (_*463, _*463): 1; (_*463, p3): -2; (_+4251, #[_+4251]): 4; (_+4251, #[p1]): -4; (_+4251, _*461): 2; (_+4251, _+4251): 2; (_+4251, p1): -2; (_+4252, #[_+4252]): 4; (_+4252, #[p1]): 2; (_+4252, #[p2]): -4; (_+4252, _*462): 2; (_+4252, _+4252): 2; (_+4252, p2): -2; (_+4253, #[_+4253]): 4; (_+4253, #[p2]): 2; (_+4253, #[p3]): -4; (_+4253, _*463): 2; (_+4253, _+4253): 2; (_+4253, p3): -2; (_10, _10): 3; (_10, d0): -2; (_11, _11): 1; (d0, d0): 1; (d0, s0): -1; (d0, s1): -1; (d0, t0): -1; (p0, #[p0]): 4; (p0, 7_0): -1; (p0, p0): 1; (p1, #[p1]): 4; (p1, 7_1): -1; (p1, p1): 1; (p2, #[p2]): 4; (p2, 7_2): -1; (p2, p2): 1; (p3, #[p3]): 4; (p3, 7_3): -1; (p3, p3): 1; (p4, #[p4]): 4; (p4, 7_4): -1; (p4, p4): 1; (p5, p5): 1; (p5, p6): 4; (p6, p6): 4; (s0, _&479): -2; (s0, _&480): -2; (s0, _&484): -2; (s0, _&486): -2; (s0, _*420): -4; (s0, _*430): -2; (s0, _10): -1; (s0, s0): 2; (s1, _&479): -2; (s1, _&480): -2; (s1, _&481): -4; (s1, _&483): -2; (s1, _&485): -2; (s1, _&487): -2; (s1, _11): -1; (s1, s0): 2; (s1, s1): 2; (t0, _*440): -2; (t0, _*441): -2; (t0, _*442): -2; (t0, _*443): -2; (t0, _*444): -2; (t0, _*450): -1; (t0, _*451): -1; (t0, _*460): -2; (t0, _*461): -2; (t0, _*462): -2; (t0, _10): -1; (t0, t0): 1; '
 & finalized Qubo is '(#[_*421], #[_*421]): 5; (#[_*421], _*422): -2; (#[_*421], _*423): -4; (#[_*432], #[_*432]): 5; (#[_*432], _*433): -2; (#[_*432], _*434): -4; (#[_+4251], #[_+4251]): 5; (#[_+4251], #[_+4252]): -4; (#[_+4251], _+4252): -2; (#[_+4252], #[_+4252]): 5; (#[_+4252], #[_+4253]): -4; (#[_+4252], _+4253): -2; (#[_+4253], #[_+4253]): 5; (#[_+4253], #[p3]): 2; (#[_+4253], #[p4]): -4; (#[_+4253], p4): -2; (#[p0], #[_+4251]): -4; (#[p0], #[p0]): 5; (#[p0], _+4251): -2; (#[p1], #[p1]): 5; (#[p1], #[p2]): -4; (#[p1], p2): -2; (#[p2], #[p2]): 5; (#[p2], #[p3]): -4; (#[p2], p3): -2; (#[p3], #[p3]): 5; (#[p3], #[p4]): -4; (#[p3], p4): -2; (#[p4], #[p4]): 5; (#[p4], p5): -2; (#[p4], p6): -4; (_&479, #[_*421]): -4; (_&479, _&479): 4; (_&479, _*421): -2; (_&480, #[_*421]): -4; (_&480, _&479): 2; (_&480, _&480): 4; (_&480, _*421): -2; (_&481, #[_*421]): 2; (_&481, _&481): 4; (_&481, _*422): -2; (_&481, _*423): -4; (_&486, #[_*432]): -4; (_&486, _&486): 2; (_&486, _*432): -2; (_&487, #[_*432]): 2; (_&487, _&487): 2; (_&487, _*433): -2; (_&487, _*434): -4; (_*420, #[p0]): -4; (_*420, _*420): 4; (_*420, p0): -2; (_*421, #[_*421]): 4; (_*421, #[_+4251]): -4; (_*421, #[p0]): 2; (_*421, _*421): 2; (_*421, _+4251): -2; (_*422, #[_+4251]): 2; (_*422, #[_+4252]): -4; (_*422, _*422): 2; (_*422, _*423): 4; (_*422, _*442): 2; (_*422, _+4252): -2; (_*423, #[_+4252]): 2; (_*423, #[_+4253]): -4; (_*423, _*423): 5; (_*423, _*443): 2; (_*423, _+4253): -2; (_*432, #[_*432]): 4; (_*432, _*432): 1; (_*432, _*442): -2; (_*432, t0): 1; (_*433, _*433): 1; (_*433, _*434): 4; (_*433, _*443): -2; (_*433, t0): 1; (_*434, _*434): 4; (_*434, _*444): -2; (_*434, t0): 1; (_*442, #[_+4251]): 2; (_*442, #[_+4252]): -4; (_*442, _*442): 4; (_*442, _+4252): -2; (_*443, #[_+4252]): 2; (_*443, #[_+4253]): -4; (_*443, _*443): 4; (_*443, _+4253): -2; (_*444, #[_+4253]): 2; (_*444, #[p3]): 2; (_*444, #[p4]): -4; (_*444, _*444): 4; (_*444, p4): -2; (_*451, _*451): 1; (_*451, _*461): -2; (_*461, #[p1]): -4; (_*461, _*461): 4; (_*461, p1): -2; (_+4251, #[_+4251]): 4; (_+4251, #[p1]): -4; (_+4251, _*461): 2; (_+4251, _+4251): 2; (_+4251, p1): -2; (_+4252, #[_+4252]): 4; (_+4252, #[p1]): 2; (_+4252, #[p2]): -4; (_+4252, _+4252): 2; (_+4252, p2): -2; (_+4253, #[_+4253]): 4; (_+4253, #[p2]): 2; (_+4253, #[p3]): -4; (_+4253, _+4253): 2; (_+4253, p3): -2; (d0, d0): -1; (d0, s0): -1; (d0, s1): -1; (d0, t0): -1; (p0, #[p0]): 4; (p0, p0): 0; (p1, #[p1]): 4; (p1, p1): 0; (p2, #[p2]): 4; (p2, p2): 0; (p3, #[p3]): 4; (p3, p3): 1; (p4, #[p4]): 4; (p4, p4): 1; (p5, p5): 1; (p5, p6): 4; (p6, p6): 4; (s0, _&479): -2; (s0, _&480): -2; (s0, _&486): -2; (s0, _*420): -4; (s0, s0): 2; (s1, _&479): -2; (s1, _&480): -2; (s1, _&481): -4; (s1, _&487): -2; (s1, s0): 2; (s1, s1): 3; (t0, _*442): -2; (t0, _*443): -2; (t0, _*444): -2; (t0, _*451): -1; (t0, _*461): -2; (t0, t0): 1; '

*** Prime number p = s2 + 4st + 2t2, p mod 8 = 7, gcd(s,t) = 1 has: 41 # of node and # of branches: 105

 --- Prime numbers (6 * Qwhole +/- 1) algorithm ----
Prime Number
 Code
{
	p\4q:U\ = ((6_\3q:6\ * s\2q:U\) - _1\1q:1\);
}
 Logic:  _*490\0\ == ; _*490\0\ = 6_0\0\ & s0\S\ = p0\S\ .+ _10\1\; 
 It's generic Qubo is '(#[?null-op!], #[?null-op!]): 7; (#[?null-op!], _*491): 2; (#[?null-op!], _*492): 2; (#[?null-op!], _*493): -2; (#[?null-op!], _*494): -4; (#[_*491], #[_*491]): 5; (#[_*491], #[_*492]): -4; (#[_*491], _*492): -2; (#[_*492], #[_*492]): 5; (#[_*492], _*493): -2; (#[_*492], _*494): -4; (6_0, 6_0): 0; (6_0, _&505): -2; (6_0, _*490): -2; (6_0, s0): 1; (6_0, s1): 1; (6_1, 6_1): 0; (6_1, _&506): -2; (6_1, _&507): -2; (6_1, s0): 1; (6_1, s1): 1; (6_2, 6_2): 0; (6_2, _&508): -2; (6_2, _&509): -2; (6_2, s0): 1; (6_2, s1): 1; (_&505, #[_*491]): -4; (_&505, _&505): 4; (_&505, _*491): -2; (_&506, #[_*491]): -4; (_&506, _&505): 2; (_&506, _&506): 4; (_&506, _*491): -2; (_&507, #[_*491]): 2; (_&507, #[_*492]): -4; (_&507, _&507): 4; (_&507, _*492): -2; (_&508, #[_*491]): 2; (_&508, #[_*492]): -4; (_&508, _&507): 2; (_&508, _&508): 4; (_&508, _*492): -2; (_&509, #[_*492]): 2; (_&509, _&509): 4; (_&509, _*493): -2; (_&509, _*494): -4; (_*490, #[?null-op!]): 4; (_*490, _*490): 4; (_*491, #[_*491]): 4; (_*491, _*491): 2; (_*492, #[_*492]): 4; (_*492, _*492): 2; (_*493, _*493): 2; (_*493, _*494): 8; (_*494, _*494): 8; (_10, #[?null-op!]): -4; (_10, _*490): -2; (_10, _10): 1; (p0, #[?null-op!]): -4; (p0, _*490): -2; (p0, _10): 2; (p0, p0): 1; (p1, #[?null-op!]): -2; (p1, _*491): -2; (p1, p1): 1; (p2, #[?null-op!]): -2; (p2, _*492): -2; (p2, p2): 1; (p3, #[?null-op!]): 2; (p3, _*493): -2; (p3, _*494): -4; (p3, p3): 1; (s0, _&506): -2; (s0, _&508): -2; (s0, _*490): -2; (s0, s0): 0; (s1, _&505): -2; (s1, _&507): -2; (s1, _&509): -2; (s1, s1): 0; '
 & finalized Qubo is '(#[?null-op!], #[?null-op!]): 3; (#[_*491], #[_*491]): 5; (#[_*491], #[_*492]): -4; (#[_*492], #[_*492]): 5; (_&506, #[_*491]): -4; (_&506, _&506): 2; (_&507, #[_*491]): 2; (_&507, #[_*492]): -4; (_&507, _&507): 2; (_&508, #[_*491]): 2; (_&508, #[_*492]): -4; (_&508, _&507): 2; (_&508, _&508): 2; (_&509, #[_*492]): 2; (_&509, _&509): 2; (p0, #[?null-op!]): -4; (p0, p0): 3; (p1, #[?null-op!]): -2; (p1, p1): 1; (p2, #[?null-op!]): -2; (p2, p2): 1; (p3, #[?null-op!]): 2; (p3, p3): 1; (s0, _&506): -2; (s0, _&508): -2; (s0, s0): 2; (s1, _&507): -2; (s1, _&509): -2; (s1, s1): 2; '

*** Prime number p = 6s - 1 has: 13 # of node and # of branches: 16
 resulting in :
p\4b:5\ s\2b:1\ 
p\4b:11\ s\2b:2\ 

Prime Number
 Code
((6_\3q:6\ * s\2q:U\) == (p\4q:U\ + _1\1q:1\))
 Logic: _*500\0\ == _+4370\S\; _*500\0\ = 6_0\0\ & s0\S\_+4370\S\ = p0\S\ .+ _10\1\; _*501\S\ == _+4371\S\; _*501\S\ = _&512\S\ .+ _&511\0\; _&512\S\ = 6_1\1\ & s0\S\; _&511\0\ = 6_0\0\ & s1\S\_+4371\S\ = p1\S\ .+ #[_+4370]\S\; _*502\S\ == _+4372\S\; _*502\S\ = _&514\S\ + _&513\S\ + #[_*501]\S\; _&514\S\ = 6_2\1\ & s0\S\; _&513\S\ = 6_1\1\ & s1\S\_+4372\S\ = p2\S\ .+ #[_+4371]\S\; _*503\S\ == _+4373\S\; _*503\S\ = _&515\S\ .+ #[_*502]\S\; _&515\S\ = 6_2\1\ & s1\S\_+4373\S\ = p3\S\ .+ #[_+4372]\S\; _*504\S\ == _+4374\S\; _*504\S\ = #[_*503]\S\_+4374\S\ = #[_+4373]\S\; 
 It's generic Qubo is '(#[_*501], #[_*501]): 5; (#[_*501], #[_*502]): -4; (#[_*501], _*502): -2; (#[_*502], #[_*502]): 5; (#[_*502], _*503): -2; (#[_*502], _*504): -4; (#[_+4370], #[_+4370]): 5; (#[_+4370], #[_+4371]): -4; (#[_+4370], _+4371): -2; (#[_+4371], #[_+4371]): 5; (#[_+4371], #[_+4372]): -4; (#[_+4371], _+4372): -2; (#[_+4372], #[_+4372]): 5; (#[_+4372], _+4373): -2; (#[_+4372], _+4374): -4; (6_0, 6_0): 0; (6_0, _&511): -2; (6_0, _*500): -2; (6_0, s0): 1; (6_0, s1): 1; (6_1, 6_1): 0; (6_1, _&512): -2; (6_1, _&513): -2; (6_1, s0): 1; (6_1, s1): 1; (6_2, 6_2): 0; (6_2, _&514): -2; (6_2, _&515): -2; (6_2, s0): 1; (6_2, s1): 1; (_&511, #[_*501]): -4; (_&511, _&511): 4; (_&511, _*501): -2; (_&512, #[_*501]): -4; (_&512, _&511): 2; (_&512, _&512): 4; (_&512, _*501): -2; (_&513, #[_*501]): 2; (_&513, #[_*502]): -4; (_&513, _&513): 4; (_&513, _*502): -2; (_&514, #[_*501]): 2; (_&514, #[_*502]): -4; (_&514, _&513): 2; (_&514, _&514): 4; (_&514, _*502): -2; (_&515, #[_*502]): 2; (_&515, _&515): 4; (_&515, _*503): -2; (_&515, _*504): -4; (_*500, _*500): 4; (_*501, #[_*501]): 4; (_*501, _*501): 2; (_*502, #[_*502]): 4; (_*502, _*502): 2; (_*503, _*503): 2; (_*503, _*504): 4; (_*504, _*504): 5; (_+4370, #[_+4370]): 4; (_+4370, _*500): -2; (_+4370, _+4370): 2; (_+4371, #[_+4371]): 4; (_+4371, _*501): -2; (_+4371, _+4371): 2; (_+4372, #[_+4372]): 4; (_+4372, _*502): -2; (_+4372, _+4372): 2; (_+4373, _*503): -2; (_+4373, _+4373): 2; (_+4373, _+4374): 4; (_+4374, _*504): -2; (_+4374, _+4374): 5; (_10, #[_+4370]): -4; (_10, _+4370): -2; (_10, _10): 1; (p0, #[_+4370]): -4; (p0, _+4370): -2; (p0, _10): 2; (p0, p0): 1; (p1, #[_+4370]): 2; (p1, #[_+4371]): -4; (p1, _+4371): -2; (p1, p1): 1; (p2, #[_+4371]): 2; (p2, #[_+4372]): -4; (p2, _+4372): -2; (p2, p2): 1; (p3, #[_+4372]): 2; (p3, _+4373): -2; (p3, _+4374): -4; (p3, p3): 1; (s0, _&512): -2; (s0, _&514): -2; (s0, _*500): -2; (s0, s0): 0; (s1, _&511): -2; (s1, _&513): -2; (s1, _&515): -2; (s1, s1): 0; '
 & finalized Qubo is '(#[_*501], #[_*501]): 5; (#[_*501], #[_*502]): -4; (#[_*501], _*502): -2; (#[_*502], #[_*502]): 5; (#[_*502], _*503): -2; (#[_*502], _*504): -4; (#[_+4370], #[_+4370]): 1; (#[_+4370], #[_+4371]): -4; (#[_+4370], _+4371): -2; (#[_+4371], #[_+4371]): 5; (#[_+4371], #[_+4372]): -4; (#[_+4371], _+4372): -2; (#[_+4372], #[_+4372]): 5; (#[_+4372], _+4373): -2; (#[_+4372], _+4374): -4; (_&512, #[_*501]): -4; (_&512, _&512): 2; (_&512, _*501): -2; (_&513, #[_*501]): 2; (_&513, #[_*502]): -4; (_&513, _&513): 2; (_&513, _*502): -2; (_&514, #[_*501]): 2; (_&514, #[_*502]): -4; (_&514, _&513): 2; (_&514, _&514): 2; (_&514, _*502): -2; (_&515, #[_*502]): 2; (_&515, _&515): 2; (_&515, _*503): -2; (_&515, _*504): -4; (_*501, #[_*501]): 4; (_*501, _*501): 2; (_*502, #[_*502]): 4; (_*502, _*502): 2; (_*503, _*503): 2; (_*503, _*504): 4; (_*504, _*504): 5; (_+4370, #[_+4370]): 4; (_+4370, _+4370): 0; (_+4371, #[_+4371]): 4; (_+4371, _*501): -2; (_+4371, _+4371): 2; (_+4372, #[_+4372]): 4; (_+4372, _*502): -2; (_+4372, _+4372): 2; (_+4373, _*503): -2; (_+4373, _+4373): 2; (_+4373, _+4374): 4; (_+4374, _*504): -2; (_+4374, _+4374): 5; (p0, #[_+4370]): -4; (p0, _+4370): -2; (p0, p0): 3; (p1, #[_+4370]): 2; (p1, #[_+4371]): -4; (p1, _+4371): -2; (p1, p1): 1; (p2, #[_+4371]): 2; (p2, #[_+4372]): -4; (p2, _+4372): -2; (p2, p2): 1; (p3, #[_+4372]): 2; (p3, _+4373): -2; (p3, _+4374): -4; (p3, p3): 1; (s0, _&512): -2; (s0, _&514): -2; (s0, s0): 2; (s1, _&513): -2; (s1, _&515): -2; (s1, s1): 2; '

*** Prime number p = 6s - 1 has: 24 # of node and # of branches: 48
 resulting in :
p\4b:5\ s\2b:1\ 
p\4b:11\ s\2b:2\ 

Prime Number
 Code
{
	p\6q:U\ = ((6_\3q:6\ * s\2q:U\) + _1\1q:1\);
}
 Logic:  p0\1\ = _*510\0\ .+ _10\1\; _*510\0\ = 6_0\0\ & s0\S\; p1\S\ = _*511\S\ .+ #[p0]\0\; _*511\S\ = _&518\S\ .+ _&517\0\; _&518\S\ = 6_1\1\ & s0\S\; _&517\0\ = 6_0\0\ & s1\S\; p2\S\ = _*512\S\ .+ #[p1]\S\; _*512\S\ = _&520\S\ + _&519\S\ + #[_*511]\S\; _&520\S\ = 6_2\1\ & s0\S\; _&519\S\ = 6_1\1\ & s1\S\; p3\S\ = _*513\S\ .+ #[p2]\S\; _*513\S\ = _&521\S\ .+ #[_*512]\S\; _&521\S\ = 6_2\1\ & s1\S\; p4\S\ = _*514\S\ .+ #[p3]\S\; p5\S\ = #[p4]\S\; 
 It's generic Qubo is '(#[_*511], #[_*511]): 5; (#[_*511], #[_*512]): -4; (#[_*511], _*512): -2; (#[_*512], #[_*512]): 5; (#[_*512], _*513): -2; (#[_*512], _*514): -4; (#[p0], #[p0]): 5; (#[p0], #[p1]): -4; (#[p0], p1): -2; (#[p1], #[p1]): 5; (#[p1], #[p2]): -4; (#[p1], p2): -2; (#[p2], #[p2]): 5; (#[p2], #[p3]): -4; (#[p2], p3): -2; (#[p3], #[p3]): 5; (#[p3], p4): -2; (#[p3], p5): -4; (6_0, 6_0): 0; (6_0, _&517): -2; (6_0, _*510): -2; (6_0, s0): 1; (6_0, s1): 1; (6_1, 6_1): 0; (6_1, _&518): -2; (6_1, _&519): -2; (6_1, s0): 1; (6_1, s1): 1; (6_2, 6_2): 0; (6_2, _&520): -2; (6_2, _&521): -2; (6_2, s0): 1; (6_2, s1): 1; (_&517, #[_*511]): -4; (_&517, _&517): 4; (_&517, _*511): -2; (_&518, #[_*511]): -4; (_&518, _&517): 2; (_&518, _&518): 4; (_&518, _*511): -2; (_&519, #[_*511]): 2; (_&519, #[_*512]): -4; (_&519, _&519): 4; (_&519, _*512): -2; (_&520, #[_*511]): 2; (_&520, #[_*512]): -4; (_&520, _&519): 2; (_&520, _&520): 4; (_&520, _*512): -2; (_&521, #[_*512]): 2; (_&521, _&521): 4; (_&521, _*513): -2; (_&521, _*514): -4; (_*510, #[p0]): -4; (_*510, _*510): 4; (_*510, _10): 2; (_*510, p0): -2; (_*511, #[_*511]): 4; (_*511, #[p0]): 2; (_*511, #[p1]): -4; (_*511, _*511): 2; (_*511, p1): -2; (_*512, #[_*512]): 4; (_*512, #[p1]): 2; (_*512, #[p2]): -4; (_*512, _*512): 2; (_*512, p2): -2; (_*513, #[p2]): 2; (_*513, #[p3]): -4; (_*513, _*513): 2; (_*513, _*514): 4; (_*513, p3): -2; (_*514, #[p3]): 2; (_*514, _*514): 5; (_*514, p4): -2; (_*514, p5): -4; (_10, #[p0]): -4; (_10, _10): 1; (_10, p0): -2; (p0, #[p0]): 4; (p0, p0): 1; (p1, #[p1]): 4; (p1, p1): 1; (p2, #[p2]): 4; (p2, p2): 1; (p3, #[p3]): 4; (p3, p3): 1; (p4, p4): 1; (p4, p5): 4; (p5, p5): 4; (s0, _&518): -2; (s0, _&520): -2; (s0, _*510): -2; (s0, s0): 0; (s1, _&517): -2; (s1, _&519): -2; (s1, _&521): -2; (s1, s1): 0; '
 & finalized Qubo is '(#[_*511], #[_*511]): 5; (#[_*511], #[_*512]): -4; (#[_*511], _*512): -2; (#[_*512], #[_*512]): 5; (#[_*512], _*513): -2; (#[_*512], _*514): -4; (#[p1], #[p1]): 5; (#[p1], #[p2]): -4; (#[p1], p2): -2; (#[p2], #[p2]): 5; (#[p2], #[p3]): -4; (#[p2], p3): -2; (#[p3], #[p3]): 5; (#[p3], p4): -2; (#[p3], p5): -4; (_&518, #[_*511]): -4; (_&518, _&518): 2; (_&518, _*511): -2; (_&519, #[_*511]): 2; (_&519, #[_*512]): -4; (_&519, _&519): 2; (_&519, _*512): -2; (_&520, #[_*511]): 2; (_&520, #[_*512]): -4; (_&520, _&519): 2; (_&520, _&520): 2; (_&520, _*512): -2; (_&521, #[_*512]): 2; (_&521, _&521): 2; (_&521, _*513): -2; (_&521, _*514): -4; (_*511, #[_*511]): 4; (_*511, #[p1]): -4; (_*511, _*511): 2; (_*511, p1): -2; (_*512, #[_*512]): 4; (_*512, #[p1]): 2; (_*512, #[p2]): -4; (_*512, _*512): 2; (_*512, p2): -2; (_*513, #[p2]): 2; (_*513, #[p3]): -4; (_*513, _*513): 2; (_*513, _*514): 4; (_*513, p3): -2; (_*514, #[p3]): 2; (_*514, _*514): 5; (_*514, p4): -2; (_*514, p5): -4; (p1, #[p1]): 4; (p1, p1): 1; (p2, #[p2]): 4; (p2, p2): 1; (p3, #[p3]): 4; (p3, p3): 1; (p4, p4): 1; (p4, p5): 4; (p5, p5): 4; (s0, _&518): -2; (s0, _&520): -2; (s0, s0): 2; (s1, _&519): -2; (s1, _&521): -2; (s1, s1): 2; '

*** Prime number p = 6s + 1 has: 20 # of node and # of branches: 44
 resulting in :
p\5b:1\ s\2b:0\ 
p\5b:13\ s\2b:2\ 
p\5b:7\ s\2b:1\ 
p\5b:19\ s\2b:3\ 

